<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="vtc_id" elementType="Argument">
            <stringProp name="Argument.name">vtc_id</stringProp>
            <stringProp name="Argument.value">224476</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\Users\Saptarshi\Documents\WorkSoftwares\apache-jmeter-5.5\lib\apache-commons-lang.jar</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">mfi-auto.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mfi-perf-yugabyte.novopay.in </stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PATH" elementType="Argument">
            <stringProp name="Argument.name">PATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/perf/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/api-gateway/novopay/v1</stringProp>
          </elementProp>
          <elementProp name="npPATH" elementType="Argument">
            <stringProp name="Argument.name">npPATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mfiURL" elementType="Argument">
            <stringProp name="Argument.name">mfiURL</stringProp>
            <stringProp name="Argument.value">qa-mfi.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sesPath" elementType="Argument">
            <stringProp name="Argument.name">sesPath</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/novopay/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="perfURL" elementType="Argument">
            <stringProp name="Argument.name">perfURL</stringProp>
            <stringProp name="Argument.value">mfi-perf.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BPMNPATH" elementType="Argument">
            <stringProp name="Argument.name">BPMNPATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OTP" elementType="Argument">
            <stringProp name="Argument.name">OTP</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="voterIdLocation" elementType="Argument">
            <stringProp name="Argument.name">voterIdLocation</stringProp>
            <stringProp name="Argument.value">./voterIdImage.jpg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="random_delay" elementType="Argument">
            <stringProp name="Argument.name">random_delay</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="constant_delay" elementType="Argument">
            <stringProp name="Argument.name">constant_delay</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moveprocess_delay" elementType="Argument">
            <stringProp name="Argument.name">moveprocess_delay</stringProp>
            <stringProp name="Argument.value">6000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="servicestatus_delay" elementType="Argument">
            <stringProp name="Argument.name">servicestatus_delay</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="false">
        <collectionProp name="DNSCacheManager.servers"/>
        <stringProp name="TestPlan.comments">mfi-perf.novopay.in   agentapp-ppd.usli.hdfcbank.com      4000   1000   10000 - agentapp.usli.hdfcbank.com</stringProp>
        <collectionProp name="DNSCacheManager.hosts">
          <elementProp name="mfi-perf-yugabyte.novopay.in" elementType="StaticHost">
            <stringProp name="StaticHost.Name">mfi-perf-yugabyte.novopay.in</stringProp>
            <stringProp name="StaticHost.Address">192.168.1.10 </stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="DNSCacheManager.clearEachIteration">false</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SHG Customer Onboarding">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Timestamp Variable" enabled="true">
          <stringProp name="variableName">timestamp</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <stringProp name="minimumValue">100000</stringProp>
          <stringProp name="maximumValue">999999</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">true</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Common Data Usage" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="content" elementType="Argument">
              <stringProp name="Argument.name">content</stringProp>
              <stringProp name="Argument.value">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</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="vtc_id" elementType="Argument">
              <stringProp name="Argument.name">vtc_id</stringProp>
              <stringProp name="Argument.value">43521</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="so_login_user" elementType="Argument">
              <stringProp name="Argument.name">so_login_user</stringProp>
              <stringProp name="Argument.value">8190871717</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="vtc_id" elementType="Argument">
              <stringProp name="Argument.name">vtc_id</stringProp>
              <stringProp name="Argument.value">43521</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="marital_status" elementType="Argument">
              <stringProp name="Argument.name">marital_status</stringProp>
              <stringProp name="Argument.value">MARRIED</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="relation_with_borrower" elementType="Argument">
              <stringProp name="Argument.name">relation_with_borrower</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cb_marital_status" elementType="Argument">
              <stringProp name="Argument.name">cb_marital_status</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accnum" elementType="Argument">
              <stringProp name="Argument.name">accnum</stringProp>
              <stringProp name="Argument.value">50100114499533</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pincode" elementType="Argument">
              <stringProp name="Argument.name">pincode</stringProp>
              <stringProp name="Argument.value">560002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cfe_login_user" elementType="Argument">
              <stringProp name="Argument.name">cfe_login_user</stringProp>
              <stringProp name="Argument.value">NA</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="borrower_name" elementType="Argument">
              <stringProp name="Argument.name">borrower_name</stringProp>
              <stringProp name="Argument.value">HARISH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="loan_product_id" elementType="Argument">
              <stringProp name="Argument.name">loan_product_id</stringProp>
              <stringProp name="Argument.value">44</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ifsccode" elementType="Argument">
              <stringProp name="Argument.name">ifsccode</stringProp>
              <stringProp name="Argument.value">SIMA000001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="flcc_so_user" elementType="Argument">
              <stringProp name="Argument.name">flcc_so_user</stringProp>
              <stringProp name="Argument.value">Praveen0@novopay.in</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cu_user" elementType="Argument">
              <stringProp name="Argument.name">cu_user</stringProp>
              <stringProp name="Argument.value">amar@novopay.in</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="user_id" elementType="Argument">
              <stringProp name="Argument.name">user_id</stringProp>
              <stringProp name="Argument.value">38</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">223644</stringProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Data Sheet" enabled="false">
          <stringProp name="filename">./UATData.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">sNo,Stage,so_login_user,borrower_name,vtc_id,pincode,marital_status,account,accnum,ifsc_code</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.thread</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="emp-Id generator" enabled="true">
          <stringProp name="CounterConfig.start">10</stringProp>
          <stringProp name="CounterConfig.end">19</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">empID</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1601</stringProp>
          <stringProp name="CounterConfig.end">1700</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate Rand_Mobile_Number" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import java.util.Random;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

String generateRandomMobileNumber() {
    int[] firstNumbers = {6, 7, 8, 9};

    Random random = new Random();
    long rand = 100000000 + random.nextInt(900000000);
    
    String randomFirstNumber = Integer.toString(firstNumbers[random.nextInt(firstNumbers.length)]);

    return randomFirstNumber + rand;
}

String randomMob = generateRandomMobileNumber();
vars.put(&quot;randomMobNumber&quot;, randomMob);
</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${session_token}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">5000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;auth_type&quot;: &quot;MPIN&quot;,&#xd;
    &quot;auth_value&quot;: &quot;cXpJdGdMTUh5ek9VRXFYcVBoeE13MDY0blhJS1NDRjBscUFvK2Y5SktCZUlGRGJWNW1nV3JWNUtp\nLzlWRytyUDZvV3lqNi9zeFZjVzk3YnFhZGt0cmpMSWlOaGV6V29RQlJYK1BhZ3RsM2tSdGdRVFph\nTTZ2NmdicXEyS0MwNVI3bGN3WGIxeVl3SUFlK1NXR3JEbmRtNE1yOVpjeXFQTkpKN3RaYk9ZV2Qv\ndzRuQ0pYaVpRSTlEaHZYRG9kbkhtOHEvZE5LMTBXWHkvRWNjcTk3aWszRkliU0J4K2pJb0JCVktl\ndjhmdFdnSXkzNldrYmR5dmNKUTdneGxMZ1F1Z0ZURlYxNXBFeU12MVhVTlJxZSs5aHBLUSt2a2Ni\nS1VlTmtZQVpyZG4rOTRWSGMwWmlvWDNGYzhsajhhSi9rWWd4VUNwM1Z2NTlBNWhKcUR3bFBBZ1pB\nPT0=\n&quot;,&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;inventory_details&quot;: {&#xd;
      &quot;apk_version&quot;: &quot;v3.2.0_243&quot;,&#xd;
      &quot;device_manufacturer&quot;: &quot;HUAWEI&quot;,&#xd;
      &quot;device_name&quot;: &quot;JSN-L42&quot;,&#xd;
      &quot;device_unique_identifier&quot;: &quot;EMP00014__c195200c2d0abb56&quot;,&#xd;
      &quot;mobile_numbers&quot;: &quot;9080142811&quot;,&#xd;
      &quot;os_name&quot;: &quot;Android&quot;,&#xd;
      &quot;os_version&quot;: &quot;10&quot;,&#xd;
      &quot;sim_identifiers&quot;: &quot;&quot;,&#xd;
      &quot;version_code&quot;: &quot;243&quot;&#xd;
    },&#xd;
    &quot;primary_number_otp&quot;: &quot;131372&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Details" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="QDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2getVillageRiskMapping_QDE_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVillageRiskMapping</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3uploadDocument--- 1st Call{Mobile Consent}_QDE_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4perfromInternalMobileDedupe-- createBorrowerKYC MobileNo_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/performInternalMobileDedupe</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;customer_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5getConfigurationDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;otp.breach.limit&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6downloadDocument_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7getAddressFromVTC_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
  &#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8uploadDocument-- kyc Document_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9getConfigurationDetails -- 2nd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.min.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
        }   &#xd;
		&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10getConfigurationDetails -- 3rd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.max.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11uploadDocument -- 2nd call POA Document_QDE_${__threadGroupName}_Customer1_Onboarding11" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">poaDocs</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyMobileNumber_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyMobileNumber</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;INITIATE&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CONSENT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
			&quot;loan_product_code&quot;: &quot;JLGDL&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="otp_ref_key" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">otp_ref_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.otp_reference_key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;28 Dec 1986&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		&quot;is_ovd_same_as_poi&quot;: &quot;false&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;07-10-1987&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;MALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;vignesh waran swamina&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Dec 2025&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

String generateValidPassport() {
    String validFormat = &quot;AG2345678&quot;;
    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

String validPassport = generateValidPassport();
vars.put(&quot;rand_passport_no&quot;, validPassport);
log.info(&quot;Customer1 passport is:&quot; + validPassport);

String generateValidVoterID() {
    String validFormat = &quot;ABC1234567&quot;;
    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c) &amp;&amp; (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

String validVoterID = generateValidVoterID();
vars.put(&quot;rand_voter_id&quot;, validVoterID);
log.info(&quot;Customer1 voterId is:&quot; + validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="passport_error" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">passport_error</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.message</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="VTC id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="TestPlan.comments">loan_product_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${passport_error}&quot; == &quot;Invalid passport&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;28 Dec 1986&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		&quot;is_ovd_same_as_poi&quot;: &quot;false&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;07-10-1987&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;MALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;vignesh waran swamina&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Dec 2025&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Random;

String generateValidPassport() {
    String validFormat = &quot;AG2345678&quot;;
    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

String validPassport = generateValidPassport();
vars.put(&quot;rand_passport_no&quot;, validPassport);
log.info(&quot;Customer1 passport is:&quot; + validPassport);

String generateValidVoterID() {
    String validFormat = &quot;ABC1234567&quot;;
    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c) &amp;&amp; (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

String validVoterID = generateValidVoterID();
vars.put(&quot;rand_voter_id&quot;, validVoterID);
log.info(&quot;Customer1 voterId is:&quot; + validVoterID);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname"></stringProp>
                <stringProp name="RegexExtractor.regex"></stringProp>
                <stringProp name="RegexExtractor.template"></stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_app_id_1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="passport_error" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">passport_error</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.message</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="VTC id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">vtc_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">loan_product_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;28 Dec 1986&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		&quot;is_ovd_same_as_poi&quot;: &quot;false&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;07-10-1987&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;MALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;vignesh waran swamina&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Dec 2025&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

String generateValidPassport() {
    String validFormat = &quot;AG2345678&quot;;
    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

String validPassport = generateValidPassport();
vars.put(&quot;rand_passport_no&quot;, validPassport);
log.info(&quot;Customer1 passport is:&quot; + validPassport);

String generateValidVoterID() {
    String validFormat = &quot;ABC1234567&quot;;
    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c) &amp;&amp; (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

String validVoterID = generateValidVoterID();
vars.put(&quot;rand_voter_id&quot;, validVoterID);
log.info(&quot;Customer1 voterId is:&quot; + validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="VTC id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="TestPlan.comments">loan_product_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13StartProcess_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/startProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id_1}&quot;,&#xd;
            &quot;processName&quot;:&quot;${process_name}&quot;,&#xd;
            &quot;loan_formatted_id&quot;:&quot;${loan_formatted_id}&quot;,&#xd;
            &quot;vtc_id&quot;:&quot;${vtc_id}&quot;,&#xd;
            &quot;loan_product_id&quot;:&quot;${loan_product_id}&quot;,&#xd;
            &quot;borrower_name&quot;: &quot;${borrowername}&quot;,  &#xd;
            &quot;phone&quot;: &quot;${phoneno}&quot;, &#xd;
            &quot;kyc_type&quot;: &quot;${kyctype}&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14getQdeDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot; &#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Setting borrower_id ,loan_app_id and mobConsentDoc  global" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">props.put(&quot;borrowerId&quot;, ${borrower_id});

props.put(&quot;loanAppId&quot;,${loan_app_id});

props.put(&quot;mobConDoc&quot;,${mobConsentDoc});

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_details.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="First Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">first_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.first_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Middle Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">middle_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.middle_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Last Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">last_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.last_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Mobile Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15getDetailsFromVtcId_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDetailsFromVtcId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
	&#xd;
	 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16uploadDocument -- POA_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17createOrUpdateLoanAppPersonalDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			&quot;address_line_1&quot;: &quot;vjcjccmmc&quot;,&#xd;
			&quot;address_line_2&quot;: &quot;ufifjfkvkv&quot;,&#xd;
			&quot;district&quot;: &quot;NORTH DELHI&quot;,&#xd;
			&quot;kyc_pincode&quot;: &quot;110085&quot;,&#xd;
			&quot;kyc_vtc&quot;: &quot;Rithala&quot;,&#xd;
			&quot;kyc_vtc_id&quot;: &quot;53385&quot;,&#xd;
			&quot;landmark&quot;: &quot;&quot;,&#xd;
			&quot;kyc_pincode_optional&quot;: &quot;&quot;,&#xd;
			&quot;kyc_vtc_optional&quot;: &quot;&quot;,&#xd;
			&quot;state&quot;: &quot;Delhi&quot;&#xd;
		},&#xd;
		&quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    }, &#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18getQdeDetails -- 2nd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
           &quot;stage&quot;:&quot;LOAN&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20createOrUpdateLoanApp_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanApp</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;is_rejected&quot;: &quot;false&quot;,&#xd;
        &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_purpose&quot;: &quot;AGRI_FARM&quot;,&#xd;
        &quot;loan_purpose_type&quot;: &quot;&quot;,&#xd;
        &quot;loan_term&quot;: &quot;12&quot;,&#xd;
        &quot;number_of_installments&quot;: &quot;12&quot;,&#xd;
        &quot;reject_reason&quot;: &quot;&quot;,&#xd;
        &quot;requested_amount&quot;: &quot;15000&quot;,&#xd;
        &quot;term_unit&quot;: &quot;Months&quot;&#xd;
		 &#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21getLosTaskList_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
        &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;QDE&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="23getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                  <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25retryServiceCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="TestPlan.comments">BORROWER</stringProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;${service_name_code}&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
                  <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                  <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1149187101">SUCCESS</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                    <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="27createBorrower_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="TestPlan.comments">BORROWER</stringProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createBorrower</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
            &quot;borrower_type&quot;: &quot;BORROWER&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="28getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29moveProcess_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${instance_id}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;QDE&quot;,&#xd;
            &quot;customer_id&quot; : &quot;${customer_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller --  check bpmn loop" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
              <stringProp name="RandomTimer.range">${random_delay}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Eligibility Summary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for loan app step status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">step_status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking loap app step status" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${step_status}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for loan app step status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">step_status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">5000</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
                <stringProp name="RandomTimer.range">100</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33getLosTaskList_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34downloadDocument -1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35downloadDocument -2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36downloadDocument -3rd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37getProcessInstanceId -- 1stCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38getProcessInstanceId -- 2ndCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39getDeviatedRules --1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40getEligibilitySummaryDetails_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41getActiveLoanForBorrowerAndFamilyMember_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActiveLoanForBorrowerAndFamilyMember</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="FetchingBorrowerExistingLoan" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script"></stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42uploadDocument--- 1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43uploadDocument--- 2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44uploadDocument--- 3rd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45uploadDocument--- 4th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46uploadDocument--- 5th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="47uploadDocument--- 6th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48uploadDocument--- 7th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49uploadDocument--- 8th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50uploadDocument--- 9th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51uploadDocument--- 10th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52createOrUpdateExistingLoan_Eligibility_Summary}_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExistingLoan</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE_COMPLETE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;existing_loan&quot;: [{&#xd;
			&quot;active_loan_source&quot;: &quot;POSIDEX&quot;,&#xd;
				&quot;borrowed_amount&quot;: &quot;2180.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8817&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;HDFC BANK LTD&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;active_loan_source&quot;: &quot;POSIDEX&quot;,&#xd;
				&quot;borrowed_amount&quot;: &quot;50000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;29 Sep 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8725&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;XXXX&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="53getProcessInstanceId -- 3rdCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="54getDeviatedRules-- 2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="55uploadDocument--- 11th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="56uploadDocument--- 12th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="57uploadDocument--- 13th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="58uploadDocument--- 14th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="59uploadDocument--- 15th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="60updateDeviationRemedyDetails__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateDeviationRemedyDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;deviation_remedial_list&quot;: [{&#xd;
&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;LOAN_IS_CLOSED&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;,&#xd;
				 &quot;rule_name&quot;: &quot;SHG0001&quot;&#xd;
			},&#xd;
			{&#xd;
&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;LOAN_IS_CLOSED&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;,&#xd;
				&quot;rule_name&quot;: &quot;SHG0002&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="61updateLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;BORROWER_ELIGIBILITY_RULES&quot;,&#xd;
            &quot;sub_step_code&quot;: &quot;BORROWER_REMEDIAL_ACTION&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="62getDeviatedRules-- 3rd Call_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="63getProcessInstanceId -- 4thCall_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="FetchBpmnInstanceId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bpmnInstanceId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="64getEligibilitySummaryDetails -- 2nd Call_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="65getDeviatedRules-- 4th Call_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="66updateLoanAppStepsStatus --2nd Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;ELIGIBILITY_SUMMARY_BORROWER&quot;	&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="67getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="68moveProcess_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${bpmnInstanceId}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;ELIGIBILITY_SUMMARY&quot;&#xd;
		 &#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="70checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="71getTaskDetailsMfi --2nd Call_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;id&quot; : &quot;${task_id}&quot;&#xd;
		&#xd;
	&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="72getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Details" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="141getCasaAccountList_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getCasaAccountList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;customer_name&quot; : &quot;${}borrower_name}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        	&#xd;
        &#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="142verifyAccountDetails_1st_${__threadGroupName}_AccountDetails-Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyAccountDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    		 &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
           &quot;disbursement_account_details&quot; : {&#xd;
      			&quot;bank_id&quot; : &quot;&quot;,&#xd;
      			&quot;beneficiary_account_number&quot; : &quot;${generatedNumber}&quot;,&#xd;
      			&quot;beneficiary_bank&quot; : &quot;HDFC_BANK&quot;,&#xd;
     		     &quot;beneficiary_bank_ifsc_code&quot; : &quot;&quot;,&#xd;
      		     &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
                   &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
                   &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;&#xd;
                       },&#xd;
                  &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
                  &quot;stage&quot;: &quot;ACCOUNT_DETAILS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor create random account number" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random random = new Random();
long randomNumber = (long) Math.floor(random.nextDouble() * 90000000000000L) + 10000000000000L;

String generatedNumber = String.valueOf(randomNumber);
vars.put(&quot;generatedNumber&quot;, generatedNumber);

l</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="143submitAccountDetails_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitAccountDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;account_details&quot; : {&#xd;
      &quot;bank_declaration&quot;: &quot;false&quot;,&#xd;
      &quot;beneficiary_account_number&quot;: &quot;${generatedNumber}&quot;,&#xd;
      &quot;beneficiary_bank&quot;: &quot;HDFC_BANK&quot;,&#xd;
      &quot;beneficiary_bank_ifsc_code&quot;: &quot;&quot;,&#xd;
       &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
     &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
     &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;,&#xd;
      &quot;name_match_cfe_declaration&quot;: &quot;null&quot;,&#xd;
      &quot;name_match_edit_borrower_declaration&quot;: &quot;null&quot;,&#xd;
      &quot;name_match_failed_declaration&quot;: &quot;null&quot;&#xd;
    },&#xd;
    &quot;account_holder_type&quot; : &quot;Individual&quot;,&#xd;
    &quot;account_purpose&quot; : &quot;Disbursement&quot;,&#xd;
    &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;same_as&quot; : &quot;false&quot;&#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="143getTaskDetailsMfi_2ndCall_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;id&quot; : &quot;${task_id}&quot;&#xd;
        &#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="144getLoanAppStepsStatus_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485577&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="145updateLoanAppStepsStatus_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172507499&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="146getProcessInstanceId_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485318&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">account_instance</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="147getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="148moveProcess_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;instance_id&quot;: &quot;${account_instance}&quot;,&#xd;
                &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage_name&quot;: &quot;ACCOUNT_DETAILS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172505196&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="150checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="151checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="154isAPYApplicable_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178392986&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="156getLoanAppStepsStatus_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178393015&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="157getDDEBorrowerDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394498&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_mobile" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_valid_till" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_date_of_birth" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="158getFatcaDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;India&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394959&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="159getAddressFromVtc_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394982&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="160getInsurancePremium_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;insured_customer_type&quot;: [&#xd;
                        &quot;BORROWER&quot;,&#xd;
                        &quot;CO_BORROWER&quot;,&#xd;
                        &quot;SPOUSE&quot;&#xd;
                ],&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178395033&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="161getFatcaDetails_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;Bengaluru&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178407325&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="162getInsurancePremium_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;insured_customer_type&quot;: [&#xd;
                        &quot;BORROWER&quot;,&#xd;
                        &quot;CO_BORROWER&quot;,&#xd;
                        &quot;SPOUSE&quot;&#xd;
                ],&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CALCULATE_PREMIUM&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178412138&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="163createOrUpdateBorrowerDDE_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerDDE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;alternate_mobile_number&quot;: &quot;&quot;,&#xd;
                &quot;alternate_mobile_number_owner&quot;: &quot;&quot;,&#xd;
                &quot;borrower_category_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_category_section&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_community_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_father_name&quot;: &quot;Naruto&quot;,&#xd;
                  &quot;borrower_health_insurance_premium&quot;: &quot;200.00&quot;,&#xd;
                  &quot;borrower_life_insurance_premium&quot;: &quot;100.00&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_religion_code&quot;: &quot;HINDUISM&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_city_of_birth_code&quot;: &quot;Bengaluru&quot;,&#xd;
                &quot;fatca_consent&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_country_code&quot;: &quot;Karnataka&quot;,&#xd;
                &quot;fatca_state_code&quot;: &quot;India&quot;,&#xd;
                &quot;highest_qualification_code&quot;: &quot;PRIMARY_SCHOOL&quot;,&#xd;
                &quot;is_life_insurance_opted&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;marital_status_code&quot;: &quot;${marital_status}&quot;,&#xd;
                &quot;mother_maiden_name&quot;: &quot;kumari&quot;,&#xd;
                &quot;physically_disabled&quot;: &quot;NO&quot;,&#xd;
                &quot;residence_details&quot;: {&#xd;
                        &quot;business_stability&quot;: &quot;&quot;,&#xd;
                        &quot;residence_stability&quot;: &quot;7&quot;,&#xd;
                        &quot;type_of_accommodation&quot;: &quot;null&quot;&#xd;
                },&#xd;
                &quot;spouse_address&quot;: {&#xd;
                        &quot;address_line_1&quot;: &quot;&quot;,&#xd;
                        &quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
                },&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_kyc_document_code&quot;: &quot;${spouse_kyc_document_code}&quot;,&#xd;
                &quot;spouse_kyc_document_id&quot;: &quot;${spouse_kyc_document_id}&quot;,&#xd;
                &quot;spouse_kyc_valid_till&quot;: &quot;${spouse_kyc_valid_till}&quot;,&#xd;
                &quot;spouse_life_insurance_consent&quot;: &quot;false&quot;,&#xd;
                &quot;spouse_mobile&quot;: &quot;${spouse_mobile}&quot;,&#xd;
                &quot;spouse_name&quot;: &quot;mouni&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;,&#xd;
                &quot;urc_details&quot;: {&#xd;
                        &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
                        &quot;urc_code&quot;: &quot;&quot;,&#xd;
                        &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178414723&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

vars.put(&quot;spouse_mobile&quot;, randomMobileNumber);


//// Function to generate a valid passport number (for demonstration purposes)
//String generateValidPassport() {
//    // Replace this with a valid passport format
//    // Example format: A12345678
//    // A - Uppercase letter, 1-9 - Digits
//    String validFormat = &quot;A12345678&quot;;
//
//    StringBuilder passportNumber = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (c == &apos;A&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
//        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return passportNumber.toString();
//}
//
//// Generate a valid passport number
//String validPassport = generateValidPassport();
//
//vars.put(&quot;rand_passport_no&quot;,validPassport);
//
//// Print or use the generated valid passport number
//log.info(&quot;Valid Passport ID: &quot; + validPassport);
//
//// Function to generate a valid voter ID (for demonstration purposes)
//String generateValidVoterID() {
//    // Replace this with a valid voter ID format
//    // Example format: ABC1234567
//    // ABC - Uppercase letters, 1234567 - Digits
//    String validFormat = &quot;ABC1234567&quot;;
//
//    StringBuilder voterID = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (Character.isLetter(c)) {
//            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
//        } else if (Character.isDigit(c)) {
//            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return voterID.toString();
//}
//
//// Generate a valid voter ID
//String validVoterID = generateValidVoterID();
//
//// Print or use the generated valid voter ID
//log.info(&quot;Valid Voter ID: &quot; + validVoterID);
//vars.put(&quot;rand_voter_id&quot;,validVoterID);



// Define the character set
String characterSet = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;

// Define the length of the generated number
int numberLength = 10; // You can change this to your desired length

// Create a random object
Random random = new Random();

// Generate the random number
StringBuilder randomNumber = new StringBuilder();
for (int i = 0; i &lt; numberLength; i++) {
    int index = random.nextInt(characterSet.length());
    char randomChar = characterSet.charAt(index);
    randomNumber.append(randomChar);
}

// Print the generated number
log.info(&quot;Generated Number: &quot; + randomNumber.toString());

// Set the generated number as a JMeter variable (if needed)
vars.put(&quot;spouse_kyc_document_id&quot;, randomNumber.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="164isAPYApplicable_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416034&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="165getProcessInstanceId_3rd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="166getLoanAppStepsStatus_1st_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416062&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178417937&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="167createOrUpdateInsuranceNomineeAndAppointeeDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateInsuranceNomineeAndAppointeeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;appointee_declaration&quot;: &quot;false&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_nominee_details&quot;: {&#xd;
                        &quot;borrower_nominee_date_of_birth&quot;: &quot;7 Sep 2005&quot;,&#xd;
                        &quot;borrower_nominee_full_name&quot;: &quot;uHCjJ&quot;,&#xd;
                        &quot;borrower_nominee_gender&quot;: &quot;MALE&quot;,&#xd;
                        &quot;borrower_nominee_type&quot;: &quot;BORROWER&quot;,&#xd;
                        &quot;nominee_relationship_with_borrower&quot;: &quot;SPOUSE&quot;&#xd;
                },&#xd;
                &quot;borrower_nominee_same_as_co_borrower&quot;: &quot;true&quot;,&#xd;
                &quot;borrower_nominee_same_as_spouse&quot;: &quot;true&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_appointee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_nominee_details&quot;: {&#xd;
      &quot;borrower_nominee_local_family_id&quot;: &quot;&quot;,&#xd;
      &quot;nominee_relationship_with_borrower_spouse&quot;: &quot;SPOUSE&quot;,&#xd;
      &quot;spouse_nominee_date_of_birth&quot;: &quot;12 Feb 1995&quot;,&#xd;
      &quot;spouse_nominee_full_name&quot;: &quot;${borrower_name}&quot;,&#xd;
      &quot;spouse_nominee_gender&quot;: &quot;FEMALE&quot;,&#xd;
      &quot;spouse_nominee_type&quot;: &quot;spouse&quot;&#xd;
    },&#xd;
                &quot;spouse_nominee_same_as_borrower&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178419690&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="169getProcessInstanceId_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="170getLoanAppStepsStatus_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="171getDDEQuestionnaire_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEQuestionnaire</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178422784&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="question_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[?(@.questionnaire_activity == &apos;LIFE_INSURANCE_BORROWER_FEMALE&apos;)].question_list[0].question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="answer_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[?(@.questionnaire_activity == &apos;LIFE_INSURANCE_BORROWER_FEMALE&apos;)].question_list[0].answer_list[0].answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.json.JSONArray;
import org.json.JSONObject;
import java.util.ArrayList;
import java.util.List;

// Extract the response JSON
String response = prev.getResponseDataAsString();
JSONObject jsonResponse = new JSONObject(response);

// Create the JSON array for questionnaire_activity_list
JSONArray questionnaireActivityList = new JSONArray();

// Extract questionnaire data
JSONArray questionnaireList = jsonResponse.getJSONArray(&quot;mapped_questionnaire_list&quot;);

for (int i = 0; i &lt; questionnaireList.length(); i++) {
    JSONObject questionnaire = questionnaireList.getJSONObject(i);
    JSONArray questions = questionnaire.getJSONArray(&quot;question_list&quot;);

    // Create the questionnaire_activity entry
    JSONObject questionnaireActivity = new JSONObject();
    questionnaireActivity.put(&quot;questionnaire_activity&quot;, questionnaire.getString(&quot;questionnaire_activity&quot;));

    // Create the questionnaire_list
    JSONArray questionnaireListJson = new JSONArray();

    for (int j = 0; j &lt; questions.length(); j++) {
        JSONObject question = questions.getJSONObject(j);
        JSONArray answerList = question.getJSONArray(&quot;answer_list&quot;);

        String selectedAnswerId = null;

        for (int k = 0; k &lt; answerList.length(); k++) {
            JSONObject answer = answerList.getJSONObject(k);

            if (answer.getBoolean(&quot;is_default&quot;)) {
                selectedAnswerId = answer.getString(&quot;answer_master_id&quot;);
            }
        }

        if (selectedAnswerId != null) {
            // Create the questionnaire_entry
            JSONObject questionnaireEntry = new JSONObject();
            questionnaireEntry.put(&quot;answer_id&quot;, selectedAnswerId);
            questionnaireEntry.put(&quot;question_id&quot;, question.getString(&quot;question_master_id&quot;));

            questionnaireListJson.put(questionnaireEntry);
        }
    }

    // Add the questionnaire_list to the questionnaire_activity entry
    questionnaireActivity.put(&quot;questionnaire_list&quot;, questionnaireListJson);

    // Add the questionnaire_activity entry to the questionnaire_activity_list
    questionnaireActivityList.put(questionnaireActivity);
}

// Store the questionnaire_activity_list in a JMeter variable
vars.put(&quot;questionnaire_activity_list&quot;, questionnaireActivityList.toString());
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="168isAPYApplicable_3rd_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="172saveDDEQuestionnaireResponse_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/saveDDEQuestionnaireResponse</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;questionnaire_activity_list&quot;: [&#xd;
            {&#xd;
                &quot;questionnaire_list&quot;: [&#xd;
                    {&#xd;
                        &quot;answer_id&quot;: &quot;${answer_master_id}&quot;,&#xd;
                        &quot;question_id&quot;: &quot;${question_master_id}&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;questionnaire_activity&quot;: &quot;LIFE_INSURANCE_BORROWER_FEMALE&quot;&#xd;
            }&#xd;
        ],&#xd;
                &quot;task_sub_type&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;task_type&quot;: &quot;NTB&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DDE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178433332&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="173isAPYApplicable_4th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFinancialDetailsSHG" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateFinancialDetailsSHG" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateFinancialDetailsSHG</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
               &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
    &quot;land_holdings&quot;: &quot;MARGINAL_FARMER_2.5_ACRES&quot;,&#xd;
    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
    &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
    &quot;monthly_expense_borrower&quot;: &quot;10000&quot;,&#xd;
    &quot;monthly_expense_family&quot;: &quot;10000&quot;,&#xd;
    &quot;monthly_income_borrower&quot;: &quot;95000&quot;,&#xd;
    &quot;monthly_income_family&quot;: &quot;185000&quot;,&#xd;
    &quot;nature_of_work&quot;: &quot;SELF_EMPLOYED&quot;,&#xd;
    &quot;sector_of_work&quot;: &quot;AGRICULTURE&quot;,&#xd;
    &quot;type_of_activity&quot;: &quot;ANIMAL_HUSBANDRY_DAIRY&quot;,&#xd;
    &quot;urc_code&quot;: &quot;&quot;,&#xd;
    &quot;urc_document_details_map&quot;: {&#xd;
      &quot;urc_file_name&quot;: &quot;URC&quot;,&#xd;
      &quot;urc_file_number&quot;: &quot;1&quot;,&#xd;
      &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
    }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAPYDetails_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="158getFatcaDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;India&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394959&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="174getProcessInstanceId_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="175getLosTaskList_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;DDE&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="176getLoanAppStepsStatus_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178434821&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="177getAPYDetails_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAPYDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178436381&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="178createOrUpdateApyDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateApyDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
              &quot;account_number&quot;: &quot;&quot;,&#xd;
    &quot;appointee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;apy_status&quot;: &quot;null&quot;,&#xd;
    &quot;borrower_nominee_details&quot;: {&#xd;
      &quot;nominee_date_of_birth&quot;: &quot;&quot;,&#xd;
      &quot;nominee_full_name&quot;: &quot;&quot;,&#xd;
      &quot;nominee_gender&quot;: &quot;&quot;,&#xd;
      &quot;same_as_borrower_insurance_nominee&quot;: &quot;false&quot;&#xd;
    },&#xd;
    &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_nominee_appointee_details&quot;: {&#xd;
      &quot;appointee_date_of_birth&quot;: &quot;&quot;,&#xd;
      &quot;appointee_full_name&quot;: &quot;&quot;,&#xd;
      &quot;appointee_gender&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;contribution_amount&quot;: &quot;&quot;,&#xd;
    &quot;customer_id&quot;: &quot;&quot;,&#xd;
    &quot;customer_want_apy&quot;: &quot;false&quot;,&#xd;
    &quot;fatca_city_of_birth_code&quot;: &quot;&quot;,&#xd;
    &quot;fatca_consent&quot;: &quot;false&quot;,&#xd;
    &quot;fatca_country_code&quot;: &quot;&quot;,&#xd;
    &quot;fatca_state_code&quot;: &quot;&quot;,&#xd;
    &quot;frequency_of_contribution&quot;: &quot;&quot;,&#xd;
    &quot;apy_clearance_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;is_income_tax_payer&quot;: &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
    &quot;mother_maiden_name&quot;: &quot;&quot;,&#xd;
    &quot;nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;pension_amount&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178437630&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="179isAPYApplicable_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="180getProcessInstanceId_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dde_instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="181getLoanAppStepsStatus_2nd_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="182updateLoanAppStepsStatus_4th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="183getProcessInstanceId_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dde_instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="initiateMoveProcess" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/initiateMoveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;instance_id&quot;: &quot;${dde_instance_id}&quot;,&#xd;
                &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage_name&quot;: &quot;DETAILED_DATA_ENTRY&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178441740&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="185checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="186checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="QDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2getVillageRiskMapping_QDE_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVillageRiskMapping</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3uploadDocument--- 1st Call{Mobile Consent}_QDE_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4perfromInternalMobileDedupe-- createBorrowerKYC MobileNo_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/performInternalMobileDedupe</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;customer_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5getConfigurationDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;otp.breach.limit&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6downloadDocument_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7getAddressFromVTC_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
  &#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8uploadDocument-- kyc Document_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9getConfigurationDetails -- 2nd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.min.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
        }   &#xd;
		&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10getConfigurationDetails -- 3rd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.max.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11uploadDocument -- 2nd call POA Document_QDE_${__threadGroupName}_Customer1_Onboarding11" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">poaDocs</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyMobileNumber_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyMobileNumber</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;INITIATE&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CONSENT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
			&quot;loan_product_code&quot;: &quot;JLGDL&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="otp_ref_key" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">otp_ref_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.otp_reference_key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;28 Dec 1986&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		&quot;is_ovd_same_as_poi&quot;: &quot;false&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;07-10-1987&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;MALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;vignesh waran swamina&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Dec 2025&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

String generateValidPassport() {
    String validFormat = &quot;AG2345678&quot;;
    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

String validPassport = generateValidPassport();
vars.put(&quot;rand_passport_no&quot;, validPassport);
log.info(&quot;Customer1 passport is:&quot; + validPassport);

String generateValidVoterID() {
    String validFormat = &quot;ABC1234567&quot;;
    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c) &amp;&amp; (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

String validVoterID = generateValidVoterID();
vars.put(&quot;rand_voter_id&quot;, validVoterID);
log.info(&quot;Customer1 voterId is:&quot; + validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id_2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="VTC id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="TestPlan.comments">loan_product_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="passport_error" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">passport_error</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.message</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While - KYC" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${passport_error}&quot; == &quot;Invalid passport&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;28 Dec 1986&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		&quot;is_ovd_same_as_poi&quot;: &quot;false&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;07-10-1987&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;MALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;vignesh waran swamina&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Dec 2025&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Random;

String generateValidPassport() {
    String validFormat = &quot;AG2345678&quot;;
    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

String validPassport = generateValidPassport();
vars.put(&quot;rand_passport_no&quot;, validPassport);
log.info(&quot;Customer1 passport is:&quot; + validPassport);

String generateValidVoterID() {
    String validFormat = &quot;ABC1234567&quot;;
    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c) &amp;&amp; (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

String validVoterID = generateValidVoterID();
vars.put(&quot;rand_voter_id&quot;, validVoterID);
log.info(&quot;Customer1 voterId is:&quot; + validVoterID);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname"></stringProp>
                <stringProp name="RegexExtractor.regex"></stringProp>
                <stringProp name="RegexExtractor.template"></stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_app_id_1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="passport_error" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">passport_error</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.message</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="VTC id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">vtc_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">loan_product_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13StartProcess_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/startProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;processName&quot;:&quot;${process_name}&quot;,&#xd;
            &quot;loan_formatted_id&quot;:&quot;${loan_formatted_id}&quot;,&#xd;
            &quot;vtc_id&quot;:&quot;${vtc_id}&quot;,&#xd;
            &quot;loan_product_id&quot;:&quot;${loan_product_id}&quot;,&#xd;
            &quot;borrower_name&quot;: &quot;${borrowername}&quot;,  &#xd;
            &quot;phone&quot;: &quot;${phoneno}&quot;, &#xd;
            &quot;kyc_type&quot;: &quot;${kyctype}&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14getQdeDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot; &#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Setting borrower_id ,loan_app_id and mobConsentDoc  global" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">props.put(&quot;borrowerId&quot;, ${borrower_id});

props.put(&quot;loanAppId&quot;,${loan_app_id});

props.put(&quot;mobConDoc&quot;,${mobConsentDoc});

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_details.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="First Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">first_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.first_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Middle Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">middle_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.middle_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Last Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">last_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.last_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Mobile Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15getDetailsFromVtcId_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDetailsFromVtcId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
	&#xd;
	 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16uploadDocument -- POA_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17createOrUpdateLoanAppPersonalDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			&quot;address_line_1&quot;: &quot;vjcjccmmc&quot;,&#xd;
			&quot;address_line_2&quot;: &quot;ufifjfkvkv&quot;,&#xd;
			&quot;district&quot;: &quot;NORTH DELHI&quot;,&#xd;
			&quot;kyc_pincode&quot;: &quot;110085&quot;,&#xd;
			&quot;kyc_vtc&quot;: &quot;Rithala&quot;,&#xd;
			&quot;kyc_vtc_id&quot;: &quot;53385&quot;,&#xd;
			&quot;landmark&quot;: &quot;&quot;,&#xd;
			&quot;kyc_pincode_optional&quot;: &quot;&quot;,&#xd;
			&quot;kyc_vtc_optional&quot;: &quot;&quot;,&#xd;
			&quot;state&quot;: &quot;Delhi&quot;&#xd;
		},&#xd;
		&quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    }, &#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18getQdeDetails -- 2nd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
           &quot;stage&quot;:&quot;LOAN&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20createOrUpdateLoanApp_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanApp</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;is_rejected&quot;: &quot;false&quot;,&#xd;
        &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_purpose&quot;: &quot;AGRI_FARM&quot;,&#xd;
        &quot;loan_purpose_type&quot;: &quot;&quot;,&#xd;
        &quot;loan_term&quot;: &quot;12&quot;,&#xd;
        &quot;number_of_installments&quot;: &quot;12&quot;,&#xd;
        &quot;reject_reason&quot;: &quot;&quot;,&#xd;
        &quot;requested_amount&quot;: &quot;15000&quot;,&#xd;
        &quot;term_unit&quot;: &quot;Months&quot;&#xd;
		 &#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21getLosTaskList_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
        &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;QDE&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="23getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                  <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25retryServiceCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="TestPlan.comments">BORROWER</stringProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;${service_name_code}&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
                  <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                  <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1149187101">SUCCESS</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                    <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="27createBorrower_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="TestPlan.comments">BORROWER</stringProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createBorrower</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
            &quot;borrower_type&quot;: &quot;BORROWER&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="28getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29moveProcess_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${instance_id}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;QDE&quot;,&#xd;
            &quot;customer_id&quot; : &quot;${customer_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller --  check bpmn loop" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
              <stringProp name="RandomTimer.range">${random_delay}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Eligibility Summary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for loan app step status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">step_status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking loap app step status" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${step_status}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for loan app step status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">step_status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">5000</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
                <stringProp name="RandomTimer.range">100</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33getLosTaskList_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34downloadDocument -1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35downloadDocument -2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36downloadDocument -3rd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37getProcessInstanceId -- 1stCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38getProcessInstanceId -- 2ndCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39getDeviatedRules --1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40getEligibilitySummaryDetails_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41getActiveLoanForBorrowerAndFamilyMember_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActiveLoanForBorrowerAndFamilyMember</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="FetchingBorrowerExistingLoan" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script"></stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42uploadDocument--- 1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43uploadDocument--- 2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44uploadDocument--- 3rd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45uploadDocument--- 4th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46uploadDocument--- 5th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="47uploadDocument--- 6th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48uploadDocument--- 7th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49uploadDocument--- 8th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50uploadDocument--- 9th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51uploadDocument--- 10th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52createOrUpdateExistingLoan_Eligibility_Summary}_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExistingLoan</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE_COMPLETE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;existing_loan&quot;: [{&#xd;
			&quot;active_loan_source&quot;: &quot;POSIDEX&quot;,&#xd;
				&quot;borrowed_amount&quot;: &quot;2180.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8817&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;HDFC BANK LTD&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;active_loan_source&quot;: &quot;POSIDEX&quot;,&#xd;
				&quot;borrowed_amount&quot;: &quot;50000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;29 Sep 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8725&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;XXXX&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="53getProcessInstanceId -- 3rdCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="54getDeviatedRules-- 2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="55uploadDocument--- 11th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="56uploadDocument--- 12th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="57uploadDocument--- 13th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="58uploadDocument--- 14th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="59uploadDocument--- 15th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="60updateDeviationRemedyDetails__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateDeviationRemedyDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;deviation_remedial_list&quot;: [{&#xd;
&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;LOAN_IS_CLOSED&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;,&#xd;
				 &quot;rule_name&quot;: &quot;SHG0001&quot;&#xd;
			},&#xd;
			{&#xd;
&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;LOAN_IS_CLOSED&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;,&#xd;
				&quot;rule_name&quot;: &quot;SHG0002&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="61updateLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;BORROWER_ELIGIBILITY_RULES&quot;,&#xd;
            &quot;sub_step_code&quot;: &quot;BORROWER_REMEDIAL_ACTION&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="62getDeviatedRules-- 3rd Call_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="63getProcessInstanceId -- 4thCall_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="FetchBpmnInstanceId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bpmnInstanceId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="64getEligibilitySummaryDetails -- 2nd Call_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="65getDeviatedRules-- 4th Call_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="66updateLoanAppStepsStatus --2nd Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;ELIGIBILITY_SUMMARY_BORROWER&quot;	&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="67getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="68moveProcess_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${bpmnInstanceId}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;ELIGIBILITY_SUMMARY&quot;&#xd;
		 &#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="70checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="71getTaskDetailsMfi --2nd Call_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;id&quot; : &quot;${task_id}&quot;&#xd;
		&#xd;
	&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="72getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Details" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="141getCasaAccountList_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getCasaAccountList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;customer_name&quot; : &quot;${}borrower_name}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        	&#xd;
        &#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="142verifyAccountDetails_1st_${__threadGroupName}_AccountDetails-Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyAccountDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    		 &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
           &quot;disbursement_account_details&quot; : {&#xd;
      			&quot;bank_id&quot; : &quot;&quot;,&#xd;
      			&quot;beneficiary_account_number&quot; : &quot;${generatedNumber}&quot;,&#xd;
      			&quot;beneficiary_bank&quot; : &quot;HDFC_BANK&quot;,&#xd;
     		     &quot;beneficiary_bank_ifsc_code&quot; : &quot;&quot;,&#xd;
      		     &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
                   &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
                   &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;&#xd;
                       },&#xd;
                  &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
                  &quot;stage&quot;: &quot;ACCOUNT_DETAILS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor create random account number" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random random = new Random();
long randomNumber = (long) Math.floor(random.nextDouble() * 90000000000000L) + 10000000000000L;

String generatedNumber = String.valueOf(randomNumber);
vars.put(&quot;generatedNumber&quot;, generatedNumber);

l</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="143submitAccountDetails_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitAccountDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;account_details&quot; : {&#xd;
      &quot;bank_declaration&quot;: &quot;false&quot;,&#xd;
      &quot;beneficiary_account_number&quot;: &quot;${generatedNumber}&quot;,&#xd;
      &quot;beneficiary_bank&quot;: &quot;HDFC_BANK&quot;,&#xd;
      &quot;beneficiary_bank_ifsc_code&quot;: &quot;&quot;,&#xd;
       &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
     &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
     &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;,&#xd;
      &quot;name_match_cfe_declaration&quot;: &quot;null&quot;,&#xd;
      &quot;name_match_edit_borrower_declaration&quot;: &quot;null&quot;,&#xd;
      &quot;name_match_failed_declaration&quot;: &quot;null&quot;&#xd;
    },&#xd;
    &quot;account_holder_type&quot; : &quot;Individual&quot;,&#xd;
    &quot;account_purpose&quot; : &quot;Disbursement&quot;,&#xd;
    &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;same_as&quot; : &quot;false&quot;&#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="143getTaskDetailsMfi_2ndCall_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;id&quot; : &quot;${task_id}&quot;&#xd;
        &#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="144getLoanAppStepsStatus_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485577&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="145updateLoanAppStepsStatus_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172507499&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="146getProcessInstanceId_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485318&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">account_instance</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="147getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="148moveProcess_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;instance_id&quot;: &quot;${account_instance}&quot;,&#xd;
                &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage_name&quot;: &quot;ACCOUNT_DETAILS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172505196&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="150checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="151checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="154isAPYApplicable_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178392986&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="156getLoanAppStepsStatus_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178393015&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="157getDDEBorrowerDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394498&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_mobile" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_valid_till" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_date_of_birth" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="158getFatcaDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;India&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394959&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="159getAddressFromVtc_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394982&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="160getInsurancePremium_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;insured_customer_type&quot;: [&#xd;
                        &quot;BORROWER&quot;,&#xd;
                        &quot;CO_BORROWER&quot;,&#xd;
                        &quot;SPOUSE&quot;&#xd;
                ],&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178395033&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="161getFatcaDetails_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;Bengaluru&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178407325&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="162getInsurancePremium_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;insured_customer_type&quot;: [&#xd;
                        &quot;BORROWER&quot;,&#xd;
                        &quot;CO_BORROWER&quot;,&#xd;
                        &quot;SPOUSE&quot;&#xd;
                ],&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CALCULATE_PREMIUM&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178412138&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="163createOrUpdateBorrowerDDE_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerDDE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;alternate_mobile_number&quot;: &quot;&quot;,&#xd;
                &quot;alternate_mobile_number_owner&quot;: &quot;&quot;,&#xd;
                &quot;borrower_category_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_category_section&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_community_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_father_name&quot;: &quot;Naruto&quot;,&#xd;
                  &quot;borrower_health_insurance_premium&quot;: &quot;200.00&quot;,&#xd;
                  &quot;borrower_life_insurance_premium&quot;: &quot;100.00&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_religion_code&quot;: &quot;HINDUISM&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_city_of_birth_code&quot;: &quot;Bengaluru&quot;,&#xd;
                &quot;fatca_consent&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_country_code&quot;: &quot;Karnataka&quot;,&#xd;
                &quot;fatca_state_code&quot;: &quot;India&quot;,&#xd;
                &quot;highest_qualification_code&quot;: &quot;PRIMARY_SCHOOL&quot;,&#xd;
                &quot;is_life_insurance_opted&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;marital_status_code&quot;: &quot;${marital_status}&quot;,&#xd;
                &quot;mother_maiden_name&quot;: &quot;kumari&quot;,&#xd;
                &quot;physically_disabled&quot;: &quot;NO&quot;,&#xd;
                &quot;residence_details&quot;: {&#xd;
                        &quot;business_stability&quot;: &quot;&quot;,&#xd;
                        &quot;residence_stability&quot;: &quot;7&quot;,&#xd;
                        &quot;type_of_accommodation&quot;: &quot;null&quot;&#xd;
                },&#xd;
                &quot;spouse_address&quot;: {&#xd;
                        &quot;address_line_1&quot;: &quot;&quot;,&#xd;
                        &quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
                },&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_kyc_document_code&quot;: &quot;${spouse_kyc_document_code}&quot;,&#xd;
                &quot;spouse_kyc_document_id&quot;: &quot;${spouse_kyc_document_id}&quot;,&#xd;
                &quot;spouse_kyc_valid_till&quot;: &quot;${spouse_kyc_valid_till}&quot;,&#xd;
                &quot;spouse_life_insurance_consent&quot;: &quot;false&quot;,&#xd;
                &quot;spouse_mobile&quot;: &quot;${spouse_mobile}&quot;,&#xd;
                &quot;spouse_name&quot;: &quot;mouni&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;,&#xd;
                &quot;urc_details&quot;: {&#xd;
                        &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
                        &quot;urc_code&quot;: &quot;&quot;,&#xd;
                        &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178414723&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

vars.put(&quot;spouse_mobile&quot;, randomMobileNumber);


//// Function to generate a valid passport number (for demonstration purposes)
//String generateValidPassport() {
//    // Replace this with a valid passport format
//    // Example format: A12345678
//    // A - Uppercase letter, 1-9 - Digits
//    String validFormat = &quot;A12345678&quot;;
//
//    StringBuilder passportNumber = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (c == &apos;A&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
//        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return passportNumber.toString();
//}
//
//// Generate a valid passport number
//String validPassport = generateValidPassport();
//
//vars.put(&quot;rand_passport_no&quot;,validPassport);
//
//// Print or use the generated valid passport number
//log.info(&quot;Valid Passport ID: &quot; + validPassport);
//
//// Function to generate a valid voter ID (for demonstration purposes)
//String generateValidVoterID() {
//    // Replace this with a valid voter ID format
//    // Example format: ABC1234567
//    // ABC - Uppercase letters, 1234567 - Digits
//    String validFormat = &quot;ABC1234567&quot;;
//
//    StringBuilder voterID = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (Character.isLetter(c)) {
//            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
//        } else if (Character.isDigit(c)) {
//            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return voterID.toString();
//}
//
//// Generate a valid voter ID
//String validVoterID = generateValidVoterID();
//
//// Print or use the generated valid voter ID
//log.info(&quot;Valid Voter ID: &quot; + validVoterID);
//vars.put(&quot;rand_voter_id&quot;,validVoterID);



// Define the character set
String characterSet = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;

// Define the length of the generated number
int numberLength = 10; // You can change this to your desired length

// Create a random object
Random random = new Random();

// Generate the random number
StringBuilder randomNumber = new StringBuilder();
for (int i = 0; i &lt; numberLength; i++) {
    int index = random.nextInt(characterSet.length());
    char randomChar = characterSet.charAt(index);
    randomNumber.append(randomChar);
}

// Print the generated number
log.info(&quot;Generated Number: &quot; + randomNumber.toString());

// Set the generated number as a JMeter variable (if needed)
vars.put(&quot;spouse_kyc_document_id&quot;, randomNumber.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="164isAPYApplicable_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416034&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="165getProcessInstanceId_3rd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="166getLoanAppStepsStatus_1st_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416062&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178417937&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="167createOrUpdateInsuranceNomineeAndAppointeeDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateInsuranceNomineeAndAppointeeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;appointee_declaration&quot;: &quot;false&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_nominee_details&quot;: {&#xd;
                        &quot;borrower_nominee_date_of_birth&quot;: &quot;7 Sep 2005&quot;,&#xd;
                        &quot;borrower_nominee_full_name&quot;: &quot;uHCjJ&quot;,&#xd;
                        &quot;borrower_nominee_gender&quot;: &quot;MALE&quot;,&#xd;
                        &quot;borrower_nominee_type&quot;: &quot;BORROWER&quot;,&#xd;
                        &quot;nominee_relationship_with_borrower&quot;: &quot;SPOUSE&quot;&#xd;
                },&#xd;
                &quot;borrower_nominee_same_as_co_borrower&quot;: &quot;true&quot;,&#xd;
                &quot;borrower_nominee_same_as_spouse&quot;: &quot;true&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_appointee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_nominee_details&quot;: {&#xd;
      &quot;borrower_nominee_local_family_id&quot;: &quot;&quot;,&#xd;
      &quot;nominee_relationship_with_borrower_spouse&quot;: &quot;SPOUSE&quot;,&#xd;
      &quot;spouse_nominee_date_of_birth&quot;: &quot;12 Feb 1995&quot;,&#xd;
      &quot;spouse_nominee_full_name&quot;: &quot;${borrower_name}&quot;,&#xd;
      &quot;spouse_nominee_gender&quot;: &quot;FEMALE&quot;,&#xd;
      &quot;spouse_nominee_type&quot;: &quot;spouse&quot;&#xd;
    },&#xd;
                &quot;spouse_nominee_same_as_borrower&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178419690&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="169getProcessInstanceId_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="170getLoanAppStepsStatus_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="171getDDEQuestionnaire_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEQuestionnaire</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178422784&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="question_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[?(@.questionnaire_activity == &apos;LIFE_INSURANCE_BORROWER_FEMALE&apos;)].question_list[0].question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="answer_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[?(@.questionnaire_activity == &apos;LIFE_INSURANCE_BORROWER_FEMALE&apos;)].question_list[0].answer_list[0].answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.json.JSONArray;
import org.json.JSONObject;
import java.util.ArrayList;
import java.util.List;

// Extract the response JSON
String response = prev.getResponseDataAsString();
JSONObject jsonResponse = new JSONObject(response);

// Create the JSON array for questionnaire_activity_list
JSONArray questionnaireActivityList = new JSONArray();

// Extract questionnaire data
JSONArray questionnaireList = jsonResponse.getJSONArray(&quot;mapped_questionnaire_list&quot;);

for (int i = 0; i &lt; questionnaireList.length(); i++) {
    JSONObject questionnaire = questionnaireList.getJSONObject(i);
    JSONArray questions = questionnaire.getJSONArray(&quot;question_list&quot;);

    // Create the questionnaire_activity entry
    JSONObject questionnaireActivity = new JSONObject();
    questionnaireActivity.put(&quot;questionnaire_activity&quot;, questionnaire.getString(&quot;questionnaire_activity&quot;));

    // Create the questionnaire_list
    JSONArray questionnaireListJson = new JSONArray();

    for (int j = 0; j &lt; questions.length(); j++) {
        JSONObject question = questions.getJSONObject(j);
        JSONArray answerList = question.getJSONArray(&quot;answer_list&quot;);

        String selectedAnswerId = null;

        for (int k = 0; k &lt; answerList.length(); k++) {
            JSONObject answer = answerList.getJSONObject(k);

            if (answer.getBoolean(&quot;is_default&quot;)) {
                selectedAnswerId = answer.getString(&quot;answer_master_id&quot;);
            }
        }

        if (selectedAnswerId != null) {
            // Create the questionnaire_entry
            JSONObject questionnaireEntry = new JSONObject();
            questionnaireEntry.put(&quot;answer_id&quot;, selectedAnswerId);
            questionnaireEntry.put(&quot;question_id&quot;, question.getString(&quot;question_master_id&quot;));

            questionnaireListJson.put(questionnaireEntry);
        }
    }

    // Add the questionnaire_list to the questionnaire_activity entry
    questionnaireActivity.put(&quot;questionnaire_list&quot;, questionnaireListJson);

    // Add the questionnaire_activity entry to the questionnaire_activity_list
    questionnaireActivityList.put(questionnaireActivity);
}

// Store the questionnaire_activity_list in a JMeter variable
vars.put(&quot;questionnaire_activity_list&quot;, questionnaireActivityList.toString());
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="168isAPYApplicable_3rd_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="172saveDDEQuestionnaireResponse_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/saveDDEQuestionnaireResponse</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;questionnaire_activity_list&quot;: [&#xd;
            {&#xd;
                &quot;questionnaire_list&quot;: [&#xd;
                    {&#xd;
                        &quot;answer_id&quot;: &quot;${answer_master_id}&quot;,&#xd;
                        &quot;question_id&quot;: &quot;${question_master_id}&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;questionnaire_activity&quot;: &quot;LIFE_INSURANCE_BORROWER_FEMALE&quot;&#xd;
            }&#xd;
        ],&#xd;
                &quot;task_sub_type&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;task_type&quot;: &quot;NTB&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DDE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178433332&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="173isAPYApplicable_4th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFinancialDetailsSHG" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateFinancialDetailsSHG" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateFinancialDetailsSHG</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
               &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
    &quot;land_holdings&quot;: &quot;MARGINAL_FARMER_2.5_ACRES&quot;,&#xd;
    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
    &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
    &quot;monthly_expense_borrower&quot;: &quot;10000&quot;,&#xd;
    &quot;monthly_expense_family&quot;: &quot;10000&quot;,&#xd;
    &quot;monthly_income_borrower&quot;: &quot;95000&quot;,&#xd;
    &quot;monthly_income_family&quot;: &quot;185000&quot;,&#xd;
    &quot;nature_of_work&quot;: &quot;SELF_EMPLOYED&quot;,&#xd;
    &quot;sector_of_work&quot;: &quot;AGRICULTURE&quot;,&#xd;
    &quot;type_of_activity&quot;: &quot;ANIMAL_HUSBANDRY_DAIRY&quot;,&#xd;
    &quot;urc_code&quot;: &quot;&quot;,&#xd;
    &quot;urc_document_details_map&quot;: {&#xd;
      &quot;urc_file_name&quot;: &quot;URC&quot;,&#xd;
      &quot;urc_file_number&quot;: &quot;1&quot;,&#xd;
      &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
    }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAPYDetails_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="158getFatcaDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;India&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394959&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="174getProcessInstanceId_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="175getLosTaskList_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;DDE&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="176getLoanAppStepsStatus_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178434821&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="177getAPYDetails_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAPYDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178436381&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="178createOrUpdateApyDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateApyDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
              &quot;account_number&quot;: &quot;&quot;,&#xd;
    &quot;appointee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;apy_status&quot;: &quot;null&quot;,&#xd;
    &quot;borrower_nominee_details&quot;: {&#xd;
      &quot;nominee_date_of_birth&quot;: &quot;&quot;,&#xd;
      &quot;nominee_full_name&quot;: &quot;&quot;,&#xd;
      &quot;nominee_gender&quot;: &quot;&quot;,&#xd;
      &quot;same_as_borrower_insurance_nominee&quot;: &quot;false&quot;&#xd;
    },&#xd;
    &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_nominee_appointee_details&quot;: {&#xd;
      &quot;appointee_date_of_birth&quot;: &quot;&quot;,&#xd;
      &quot;appointee_full_name&quot;: &quot;&quot;,&#xd;
      &quot;appointee_gender&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;contribution_amount&quot;: &quot;&quot;,&#xd;
    &quot;customer_id&quot;: &quot;&quot;,&#xd;
    &quot;customer_want_apy&quot;: &quot;false&quot;,&#xd;
    &quot;fatca_city_of_birth_code&quot;: &quot;&quot;,&#xd;
    &quot;fatca_consent&quot;: &quot;false&quot;,&#xd;
    &quot;fatca_country_code&quot;: &quot;&quot;,&#xd;
    &quot;fatca_state_code&quot;: &quot;&quot;,&#xd;
    &quot;frequency_of_contribution&quot;: &quot;&quot;,&#xd;
    &quot;apy_clearance_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;is_income_tax_payer&quot;: &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
    &quot;mother_maiden_name&quot;: &quot;&quot;,&#xd;
    &quot;nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;pension_amount&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178437630&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="179isAPYApplicable_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="180getProcessInstanceId_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dde_instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="181getLoanAppStepsStatus_2nd_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="182updateLoanAppStepsStatus_4th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="183getProcessInstanceId_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dde_instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="initiateMoveProcess" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/initiateMoveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;instance_id&quot;: &quot;${dde_instance_id}&quot;,&#xd;
                &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage_name&quot;: &quot;DETAILED_DATA_ENTRY&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178441740&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="185checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="186checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="QDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2getVillageRiskMapping_QDE_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVillageRiskMapping</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3uploadDocument--- 1st Call{Mobile Consent}_QDE_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4perfromInternalMobileDedupe-- createBorrowerKYC MobileNo_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/performInternalMobileDedupe</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;customer_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5getConfigurationDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;otp.breach.limit&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6downloadDocument_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7getAddressFromVTC_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
  &#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8uploadDocument-- kyc Document_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9getConfigurationDetails -- 2nd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.min.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
        }   &#xd;
		&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10getConfigurationDetails -- 3rd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.max.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11uploadDocument -- 2nd call POA Document_QDE_${__threadGroupName}_Customer1_Onboarding11" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">poaDocs</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyMobileNumber_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyMobileNumber</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;INITIATE&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CONSENT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
			&quot;loan_product_code&quot;: &quot;JLGDL&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="otp_ref_key" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">otp_ref_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.otp_reference_key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;28 Dec 1986&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		&quot;is_ovd_same_as_poi&quot;: &quot;false&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;07-10-1987&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;MALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;vignesh waran swamina&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Dec 2025&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

String generateValidPassport() {
    String validFormat = &quot;AG2345678&quot;;
    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

String validPassport = generateValidPassport();
vars.put(&quot;rand_passport_no&quot;, validPassport);
log.info(&quot;Customer1 passport is:&quot; + validPassport);

String generateValidVoterID() {
    String validFormat = &quot;ABC1234567&quot;;
    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c) &amp;&amp; (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

String validVoterID = generateValidVoterID();
vars.put(&quot;rand_voter_id&quot;, validVoterID);
log.info(&quot;Customer1 voterId is:&quot; + validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id_3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="VTC id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="TestPlan.comments">loan_product_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="passport_error" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">passport_error</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.message</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While - KYC" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${passport_error}&quot; == &quot;Invalid passport&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;28 Dec 1986&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		&quot;is_ovd_same_as_poi&quot;: &quot;false&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;07-10-1987&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;MALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;vignesh waran swamina&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Dec 2025&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Random;

String generateValidPassport() {
    String validFormat = &quot;AG2345678&quot;;
    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

String validPassport = generateValidPassport();
vars.put(&quot;rand_passport_no&quot;, validPassport);
log.info(&quot;Customer1 passport is:&quot; + validPassport);

String generateValidVoterID() {
    String validFormat = &quot;ABC1234567&quot;;
    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c) &amp;&amp; (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

String validVoterID = generateValidVoterID();
vars.put(&quot;rand_voter_id&quot;, validVoterID);
log.info(&quot;Customer1 voterId is:&quot; + validVoterID);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname"></stringProp>
                <stringProp name="RegexExtractor.regex"></stringProp>
                <stringProp name="RegexExtractor.template"></stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_app_id_1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="passport_error" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">passport_error</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.message</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
                <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="VTC id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">vtc_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">loan_product_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13StartProcess_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/startProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;processName&quot;:&quot;${process_name}&quot;,&#xd;
            &quot;loan_formatted_id&quot;:&quot;${loan_formatted_id}&quot;,&#xd;
            &quot;vtc_id&quot;:&quot;${vtc_id}&quot;,&#xd;
            &quot;loan_product_id&quot;:&quot;${loan_product_id}&quot;,&#xd;
            &quot;borrower_name&quot;: &quot;${borrowername}&quot;,  &#xd;
            &quot;phone&quot;: &quot;${phoneno}&quot;, &#xd;
            &quot;kyc_type&quot;: &quot;${kyctype}&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14getQdeDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot; &#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Setting borrower_id ,loan_app_id and mobConsentDoc  global" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">props.put(&quot;borrowerId&quot;, ${borrower_id});

props.put(&quot;loanAppId&quot;,${loan_app_id});

props.put(&quot;mobConDoc&quot;,${mobConsentDoc});

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_details.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="First Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">first_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.first_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Middle Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">middle_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.middle_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Last Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">last_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.last_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Mobile Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15getDetailsFromVtcId_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDetailsFromVtcId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
	&#xd;
	 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16uploadDocument -- POA_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17createOrUpdateLoanAppPersonalDetails_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			&quot;address_line_1&quot;: &quot;vjcjccmmc&quot;,&#xd;
			&quot;address_line_2&quot;: &quot;ufifjfkvkv&quot;,&#xd;
			&quot;district&quot;: &quot;NORTH DELHI&quot;,&#xd;
			&quot;kyc_pincode&quot;: &quot;110085&quot;,&#xd;
			&quot;kyc_vtc&quot;: &quot;Rithala&quot;,&#xd;
			&quot;kyc_vtc_id&quot;: &quot;53385&quot;,&#xd;
			&quot;landmark&quot;: &quot;&quot;,&#xd;
			&quot;kyc_pincode_optional&quot;: &quot;&quot;,&#xd;
			&quot;kyc_vtc_optional&quot;: &quot;&quot;,&#xd;
			&quot;state&quot;: &quot;Delhi&quot;&#xd;
		},&#xd;
		&quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    }, &#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18getQdeDetails -- 2nd Call_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
           &quot;stage&quot;:&quot;LOAN&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20createOrUpdateLoanApp_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanApp</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;is_rejected&quot;: &quot;false&quot;,&#xd;
        &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_purpose&quot;: &quot;AGRI_FARM&quot;,&#xd;
        &quot;loan_purpose_type&quot;: &quot;&quot;,&#xd;
        &quot;loan_term&quot;: &quot;12&quot;,&#xd;
        &quot;number_of_installments&quot;: &quot;12&quot;,&#xd;
        &quot;reject_reason&quot;: &quot;&quot;,&#xd;
        &quot;requested_amount&quot;: &quot;15000&quot;,&#xd;
        &quot;term_unit&quot;: &quot;Months&quot;&#xd;
		 &#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21getLosTaskList_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
        &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;QDE&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="23getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                  <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25retryServiceCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="TestPlan.comments">BORROWER</stringProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;${service_name_code}&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26getServiceStatus_QDE_${__threadGroupName}_Customer1_Onboarding" enabled="true">
                  <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                  <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1149187101">SUCCESS</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                    <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="27createBorrower_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="TestPlan.comments">BORROWER</stringProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createBorrower</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
            &quot;borrower_type&quot;: &quot;BORROWER&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="28getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29moveProcess_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${instance_id}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;QDE&quot;,&#xd;
            &quot;customer_id&quot; : &quot;${customer_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller --  check bpmn loop" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
              <stringProp name="RandomTimer.range">${random_delay}</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Eligibility Summary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for loan app step status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">step_status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking loap app step status" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${step_status}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for loan app step status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">step_status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">5000</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
                <stringProp name="RandomTimer.range">100</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33getLosTaskList_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34downloadDocument -1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35downloadDocument -2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36downloadDocument -3rd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37getProcessInstanceId -- 1stCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38getProcessInstanceId -- 2ndCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39getDeviatedRules --1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40getEligibilitySummaryDetails_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41getActiveLoanForBorrowerAndFamilyMember_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActiveLoanForBorrowerAndFamilyMember</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="FetchingBorrowerExistingLoan" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script"></stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42uploadDocument--- 1st Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43uploadDocument--- 2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44uploadDocument--- 3rd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45uploadDocument--- 4th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46uploadDocument--- 5th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="47uploadDocument--- 6th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48uploadDocument--- 7th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49uploadDocument--- 8th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50uploadDocument--- 9th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51uploadDocument--- 10th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52createOrUpdateExistingLoan_Eligibility_Summary}_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExistingLoan</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE_COMPLETE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;existing_loan&quot;: [{&#xd;
			&quot;active_loan_source&quot;: &quot;POSIDEX&quot;,&#xd;
				&quot;borrowed_amount&quot;: &quot;2180.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8817&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;HDFC BANK LTD&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;active_loan_source&quot;: &quot;POSIDEX&quot;,&#xd;
				&quot;borrowed_amount&quot;: &quot;50000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;29 Sep 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8725&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;XXXX&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="53getProcessInstanceId -- 3rdCall_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="54getDeviatedRules-- 2nd Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="55uploadDocument--- 11th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="56uploadDocument--- 12th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="57uploadDocument--- 13th Call_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="58uploadDocument--- 14th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="59uploadDocument--- 15th Call__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="60updateDeviationRemedyDetails__Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateDeviationRemedyDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;deviation_remedial_list&quot;: [{&#xd;
&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;LOAN_IS_CLOSED&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;,&#xd;
				 &quot;rule_name&quot;: &quot;SHG0001&quot;&#xd;
			},&#xd;
			{&#xd;
&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;LOAN_IS_CLOSED&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;,&#xd;
				&quot;rule_name&quot;: &quot;SHG0002&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="61updateLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;BORROWER_ELIGIBILITY_RULES&quot;,&#xd;
            &quot;sub_step_code&quot;: &quot;BORROWER_REMEDIAL_ACTION&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="62getDeviatedRules-- 3rd Call_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="63getProcessInstanceId -- 4thCall_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="FetchBpmnInstanceId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bpmnInstanceId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="64getEligibilitySummaryDetails -- 2nd Call_${__threadGroupName}_Eligibility_Summary_${__threadGroupName}_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="65getDeviatedRules-- 4th Call_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="66updateLoanAppStepsStatus --2nd Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;ELIGIBILITY_SUMMARY_BORROWER&quot;	&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="67getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="68moveProcess_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${bpmnInstanceId}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;ELIGIBILITY_SUMMARY&quot;&#xd;
		 &#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="70checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="71getTaskDetailsMfi --2nd Call_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;id&quot; : &quot;${task_id}&quot;&#xd;
		&#xd;
	&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="72getLoanAppStepsStatus_${__threadGroupName}_Eligibility_Summary_Customer1_Onboarding" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    		&quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    		&quot;sub_step_code&quot; : &quot;&quot;&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Details" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="141getCasaAccountList_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getCasaAccountList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;customer_name&quot; : &quot;${}borrower_name}&quot;,&#xd;
    		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        	&#xd;
        &#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="142verifyAccountDetails_1st_${__threadGroupName}_AccountDetails-Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyAccountDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    		 &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
           &quot;disbursement_account_details&quot; : {&#xd;
      			&quot;bank_id&quot; : &quot;&quot;,&#xd;
      			&quot;beneficiary_account_number&quot; : &quot;${generatedNumber}&quot;,&#xd;
      			&quot;beneficiary_bank&quot; : &quot;HDFC_BANK&quot;,&#xd;
     		     &quot;beneficiary_bank_ifsc_code&quot; : &quot;&quot;,&#xd;
      		     &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
                   &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
                   &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;&#xd;
                       },&#xd;
                  &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
                  &quot;stage&quot;: &quot;ACCOUNT_DETAILS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor create random account number" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random random = new Random();
long randomNumber = (long) Math.floor(random.nextDouble() * 90000000000000L) + 10000000000000L;

String generatedNumber = String.valueOf(randomNumber);
vars.put(&quot;generatedNumber&quot;, generatedNumber);

l</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="143submitAccountDetails_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitAccountDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;account_details&quot; : {&#xd;
      &quot;bank_declaration&quot;: &quot;false&quot;,&#xd;
      &quot;beneficiary_account_number&quot;: &quot;${generatedNumber}&quot;,&#xd;
      &quot;beneficiary_bank&quot;: &quot;HDFC_BANK&quot;,&#xd;
      &quot;beneficiary_bank_ifsc_code&quot;: &quot;&quot;,&#xd;
       &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
     &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
     &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;,&#xd;
      &quot;name_match_cfe_declaration&quot;: &quot;null&quot;,&#xd;
      &quot;name_match_edit_borrower_declaration&quot;: &quot;null&quot;,&#xd;
      &quot;name_match_failed_declaration&quot;: &quot;null&quot;&#xd;
    },&#xd;
    &quot;account_holder_type&quot; : &quot;Individual&quot;,&#xd;
    &quot;account_purpose&quot; : &quot;Disbursement&quot;,&#xd;
    &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;same_as&quot; : &quot;false&quot;&#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="143getTaskDetailsMfi_2ndCall_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;id&quot; : &quot;${task_id}&quot;&#xd;
        &#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="144getLoanAppStepsStatus_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485577&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="145updateLoanAppStepsStatus_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172507499&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="146getProcessInstanceId_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485318&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">account_instance</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="147getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="148moveProcess_1st_${__threadGroupName}_AccountDetails_Customer1" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;instance_id&quot;: &quot;${account_instance}&quot;,&#xd;
                &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage_name&quot;: &quot;ACCOUNT_DETAILS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172505196&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="150checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="151checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="154isAPYApplicable_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178392986&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="156getLoanAppStepsStatus_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178393015&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="157getDDEBorrowerDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394498&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_mobile" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_valid_till" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_date_of_birth" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="158getFatcaDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;India&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394959&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="159getAddressFromVtc_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394982&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="160getInsurancePremium_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;insured_customer_type&quot;: [&#xd;
                        &quot;BORROWER&quot;,&#xd;
                        &quot;CO_BORROWER&quot;,&#xd;
                        &quot;SPOUSE&quot;&#xd;
                ],&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178395033&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="161getFatcaDetails_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;Bengaluru&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178407325&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="162getInsurancePremium_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;insured_customer_type&quot;: [&#xd;
                        &quot;BORROWER&quot;,&#xd;
                        &quot;CO_BORROWER&quot;,&#xd;
                        &quot;SPOUSE&quot;&#xd;
                ],&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CALCULATE_PREMIUM&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178412138&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="163createOrUpdateBorrowerDDE_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerDDE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;alternate_mobile_number&quot;: &quot;&quot;,&#xd;
                &quot;alternate_mobile_number_owner&quot;: &quot;&quot;,&#xd;
                &quot;borrower_category_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_category_section&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_community_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_father_name&quot;: &quot;Naruto&quot;,&#xd;
                  &quot;borrower_health_insurance_premium&quot;: &quot;200.00&quot;,&#xd;
                  &quot;borrower_life_insurance_premium&quot;: &quot;100.00&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_religion_code&quot;: &quot;HINDUISM&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_city_of_birth_code&quot;: &quot;Bengaluru&quot;,&#xd;
                &quot;fatca_consent&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_country_code&quot;: &quot;Karnataka&quot;,&#xd;
                &quot;fatca_state_code&quot;: &quot;India&quot;,&#xd;
                &quot;highest_qualification_code&quot;: &quot;PRIMARY_SCHOOL&quot;,&#xd;
                &quot;is_life_insurance_opted&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;marital_status_code&quot;: &quot;${marital_status}&quot;,&#xd;
                &quot;mother_maiden_name&quot;: &quot;kumari&quot;,&#xd;
                &quot;physically_disabled&quot;: &quot;NO&quot;,&#xd;
                &quot;residence_details&quot;: {&#xd;
                        &quot;business_stability&quot;: &quot;&quot;,&#xd;
                        &quot;residence_stability&quot;: &quot;7&quot;,&#xd;
                        &quot;type_of_accommodation&quot;: &quot;null&quot;&#xd;
                },&#xd;
                &quot;spouse_address&quot;: {&#xd;
                        &quot;address_line_1&quot;: &quot;&quot;,&#xd;
                        &quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
                },&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_kyc_document_code&quot;: &quot;${spouse_kyc_document_code}&quot;,&#xd;
                &quot;spouse_kyc_document_id&quot;: &quot;${spouse_kyc_document_id}&quot;,&#xd;
                &quot;spouse_kyc_valid_till&quot;: &quot;${spouse_kyc_valid_till}&quot;,&#xd;
                &quot;spouse_life_insurance_consent&quot;: &quot;false&quot;,&#xd;
                &quot;spouse_mobile&quot;: &quot;${spouse_mobile}&quot;,&#xd;
                &quot;spouse_name&quot;: &quot;mouni&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;,&#xd;
                &quot;urc_details&quot;: {&#xd;
                        &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
                        &quot;urc_code&quot;: &quot;&quot;,&#xd;
                        &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178414723&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

vars.put(&quot;spouse_mobile&quot;, randomMobileNumber);


//// Function to generate a valid passport number (for demonstration purposes)
//String generateValidPassport() {
//    // Replace this with a valid passport format
//    // Example format: A12345678
//    // A - Uppercase letter, 1-9 - Digits
//    String validFormat = &quot;A12345678&quot;;
//
//    StringBuilder passportNumber = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (c == &apos;A&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
//        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return passportNumber.toString();
//}
//
//// Generate a valid passport number
//String validPassport = generateValidPassport();
//
//vars.put(&quot;rand_passport_no&quot;,validPassport);
//
//// Print or use the generated valid passport number
//log.info(&quot;Valid Passport ID: &quot; + validPassport);
//
//// Function to generate a valid voter ID (for demonstration purposes)
//String generateValidVoterID() {
//    // Replace this with a valid voter ID format
//    // Example format: ABC1234567
//    // ABC - Uppercase letters, 1234567 - Digits
//    String validFormat = &quot;ABC1234567&quot;;
//
//    StringBuilder voterID = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (Character.isLetter(c)) {
//            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
//        } else if (Character.isDigit(c)) {
//            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return voterID.toString();
//}
//
//// Generate a valid voter ID
//String validVoterID = generateValidVoterID();
//
//// Print or use the generated valid voter ID
//log.info(&quot;Valid Voter ID: &quot; + validVoterID);
//vars.put(&quot;rand_voter_id&quot;,validVoterID);



// Define the character set
String characterSet = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;

// Define the length of the generated number
int numberLength = 10; // You can change this to your desired length

// Create a random object
Random random = new Random();

// Generate the random number
StringBuilder randomNumber = new StringBuilder();
for (int i = 0; i &lt; numberLength; i++) {
    int index = random.nextInt(characterSet.length());
    char randomChar = characterSet.charAt(index);
    randomNumber.append(randomChar);
}

// Print the generated number
log.info(&quot;Generated Number: &quot; + randomNumber.toString());

// Set the generated number as a JMeter variable (if needed)
vars.put(&quot;spouse_kyc_document_id&quot;, randomNumber.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="164isAPYApplicable_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416034&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="165getProcessInstanceId_3rd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="166getLoanAppStepsStatus_1st_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416062&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178417937&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="167createOrUpdateInsuranceNomineeAndAppointeeDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateInsuranceNomineeAndAppointeeDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;appointee_declaration&quot;: &quot;false&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_nominee_details&quot;: {&#xd;
                        &quot;borrower_nominee_date_of_birth&quot;: &quot;7 Sep 2005&quot;,&#xd;
                        &quot;borrower_nominee_full_name&quot;: &quot;uHCjJ&quot;,&#xd;
                        &quot;borrower_nominee_gender&quot;: &quot;MALE&quot;,&#xd;
                        &quot;borrower_nominee_type&quot;: &quot;BORROWER&quot;,&#xd;
                        &quot;nominee_relationship_with_borrower&quot;: &quot;SPOUSE&quot;&#xd;
                },&#xd;
                &quot;borrower_nominee_same_as_co_borrower&quot;: &quot;true&quot;,&#xd;
                &quot;borrower_nominee_same_as_spouse&quot;: &quot;true&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_appointee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;spouse_nominee_details&quot;: {&#xd;
      &quot;borrower_nominee_local_family_id&quot;: &quot;&quot;,&#xd;
      &quot;nominee_relationship_with_borrower_spouse&quot;: &quot;SPOUSE&quot;,&#xd;
      &quot;spouse_nominee_date_of_birth&quot;: &quot;12 Feb 1995&quot;,&#xd;
      &quot;spouse_nominee_full_name&quot;: &quot;${borrower_name}&quot;,&#xd;
      &quot;spouse_nominee_gender&quot;: &quot;FEMALE&quot;,&#xd;
      &quot;spouse_nominee_type&quot;: &quot;spouse&quot;&#xd;
    },&#xd;
                &quot;spouse_nominee_same_as_borrower&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178419690&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="169getProcessInstanceId_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="170getLoanAppStepsStatus_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="171getDDEQuestionnaire_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEQuestionnaire</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178422784&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="question_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[?(@.questionnaire_activity == &apos;LIFE_INSURANCE_BORROWER_FEMALE&apos;)].question_list[0].question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="answer_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[?(@.questionnaire_activity == &apos;LIFE_INSURANCE_BORROWER_FEMALE&apos;)].question_list[0].answer_list[0].answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.json.JSONArray;
import org.json.JSONObject;
import java.util.ArrayList;
import java.util.List;

// Extract the response JSON
String response = prev.getResponseDataAsString();
JSONObject jsonResponse = new JSONObject(response);

// Create the JSON array for questionnaire_activity_list
JSONArray questionnaireActivityList = new JSONArray();

// Extract questionnaire data
JSONArray questionnaireList = jsonResponse.getJSONArray(&quot;mapped_questionnaire_list&quot;);

for (int i = 0; i &lt; questionnaireList.length(); i++) {
    JSONObject questionnaire = questionnaireList.getJSONObject(i);
    JSONArray questions = questionnaire.getJSONArray(&quot;question_list&quot;);

    // Create the questionnaire_activity entry
    JSONObject questionnaireActivity = new JSONObject();
    questionnaireActivity.put(&quot;questionnaire_activity&quot;, questionnaire.getString(&quot;questionnaire_activity&quot;));

    // Create the questionnaire_list
    JSONArray questionnaireListJson = new JSONArray();

    for (int j = 0; j &lt; questions.length(); j++) {
        JSONObject question = questions.getJSONObject(j);
        JSONArray answerList = question.getJSONArray(&quot;answer_list&quot;);

        String selectedAnswerId = null;

        for (int k = 0; k &lt; answerList.length(); k++) {
            JSONObject answer = answerList.getJSONObject(k);

            if (answer.getBoolean(&quot;is_default&quot;)) {
                selectedAnswerId = answer.getString(&quot;answer_master_id&quot;);
            }
        }

        if (selectedAnswerId != null) {
            // Create the questionnaire_entry
            JSONObject questionnaireEntry = new JSONObject();
            questionnaireEntry.put(&quot;answer_id&quot;, selectedAnswerId);
            questionnaireEntry.put(&quot;question_id&quot;, question.getString(&quot;question_master_id&quot;));

            questionnaireListJson.put(questionnaireEntry);
        }
    }

    // Add the questionnaire_list to the questionnaire_activity entry
    questionnaireActivity.put(&quot;questionnaire_list&quot;, questionnaireListJson);

    // Add the questionnaire_activity entry to the questionnaire_activity_list
    questionnaireActivityList.put(questionnaireActivity);
}

// Store the questionnaire_activity_list in a JMeter variable
vars.put(&quot;questionnaire_activity_list&quot;, questionnaireActivityList.toString());
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="168isAPYApplicable_3rd_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="172saveDDEQuestionnaireResponse_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/saveDDEQuestionnaireResponse</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;questionnaire_activity_list&quot;: [&#xd;
            {&#xd;
                &quot;questionnaire_list&quot;: [&#xd;
                    {&#xd;
                        &quot;answer_id&quot;: &quot;${answer_master_id}&quot;,&#xd;
                        &quot;question_id&quot;: &quot;${question_master_id}&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;questionnaire_activity&quot;: &quot;LIFE_INSURANCE_BORROWER_FEMALE&quot;&#xd;
            }&#xd;
        ],&#xd;
                &quot;task_sub_type&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;task_type&quot;: &quot;NTB&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DDE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178433332&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="173isAPYApplicable_4th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFinancialDetailsSHG" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateFinancialDetailsSHG" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateFinancialDetailsSHG</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
               &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
    &quot;land_holdings&quot;: &quot;MARGINAL_FARMER_2.5_ACRES&quot;,&#xd;
    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
    &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
    &quot;monthly_expense_borrower&quot;: &quot;10000&quot;,&#xd;
    &quot;monthly_expense_family&quot;: &quot;10000&quot;,&#xd;
    &quot;monthly_income_borrower&quot;: &quot;95000&quot;,&#xd;
    &quot;monthly_income_family&quot;: &quot;185000&quot;,&#xd;
    &quot;nature_of_work&quot;: &quot;SELF_EMPLOYED&quot;,&#xd;
    &quot;sector_of_work&quot;: &quot;AGRICULTURE&quot;,&#xd;
    &quot;type_of_activity&quot;: &quot;ANIMAL_HUSBANDRY_DAIRY&quot;,&#xd;
    &quot;urc_code&quot;: &quot;&quot;,&#xd;
    &quot;urc_document_details_map&quot;: {&#xd;
      &quot;urc_file_name&quot;: &quot;URC&quot;,&#xd;
      &quot;urc_file_number&quot;: &quot;1&quot;,&#xd;
      &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
    }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAPYDetails_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="158getFatcaDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;India&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394959&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="174getProcessInstanceId_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="175getLosTaskList_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;JLGDL&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;DDE&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172483223&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="176getLoanAppStepsStatus_2nd_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178434821&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="177getAPYDetails_4th_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAPYDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178436381&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="178createOrUpdateApyDetails_1st_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateApyDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
              &quot;account_number&quot;: &quot;&quot;,&#xd;
    &quot;appointee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;apy_status&quot;: &quot;null&quot;,&#xd;
    &quot;borrower_nominee_details&quot;: {&#xd;
      &quot;nominee_date_of_birth&quot;: &quot;&quot;,&#xd;
      &quot;nominee_full_name&quot;: &quot;&quot;,&#xd;
      &quot;nominee_gender&quot;: &quot;&quot;,&#xd;
      &quot;same_as_borrower_insurance_nominee&quot;: &quot;false&quot;&#xd;
    },&#xd;
    &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_nominee_appointee_details&quot;: {&#xd;
      &quot;appointee_date_of_birth&quot;: &quot;&quot;,&#xd;
      &quot;appointee_full_name&quot;: &quot;&quot;,&#xd;
      &quot;appointee_gender&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;contribution_amount&quot;: &quot;&quot;,&#xd;
    &quot;customer_id&quot;: &quot;&quot;,&#xd;
    &quot;customer_want_apy&quot;: &quot;false&quot;,&#xd;
    &quot;fatca_city_of_birth_code&quot;: &quot;&quot;,&#xd;
    &quot;fatca_consent&quot;: &quot;false&quot;,&#xd;
    &quot;fatca_country_code&quot;: &quot;&quot;,&#xd;
    &quot;fatca_state_code&quot;: &quot;&quot;,&#xd;
    &quot;frequency_of_contribution&quot;: &quot;&quot;,&#xd;
    &quot;apy_clearance_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;is_income_tax_payer&quot;: &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
    &quot;mother_maiden_name&quot;: &quot;&quot;,&#xd;
    &quot;nominee_declaration&quot;: &quot;false&quot;,&#xd;
    &quot;pension_amount&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178437630&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="179isAPYApplicable_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="180getProcessInstanceId_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dde_instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="181getLoanAppStepsStatus_2nd_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="182updateLoanAppStepsStatus_4th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="183getProcessInstanceId_5th_${__threadGroupName}_DDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dde_instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="initiateMoveProcess" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/initiateMoveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;instance_id&quot;: &quot;${dde_instance_id}&quot;,&#xd;
                &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage_name&quot;: &quot;DETAILED_DATA_ENTRY&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178441740&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="185checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="186checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Group Formation" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getGroupList_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getGroupList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_ids&quot;: [&#xd;
      &quot;${empId}&quot;&#xd;
    ],&#xd;
    &quot;offset&quot;: &quot;0&quot;,&#xd;
    &quot;page_size&quot;: &quot;10&quot;&#xd;
&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
                &quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">15000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUnassignedMembersList_1stCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUnassignedMembersList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_ids&quot; : [&quot;${empId}&quot;]&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVillageRiskMapping_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVillageRiskMapping</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSalesPromocodeDetailsForSHG_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getSalesPromocodeDetailsForSHG</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;group_loan_amount&quot;: &quot;45000&quot;,&#xd;
          &quot;is_shg_code_verified&quot;: &quot;false&quot;,&#xd;
          &quot;scheme_type&quot;: &quot;NRLM&quot;,&#xd;
        	 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">promo_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.promo_code_list[0].promocode</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyShgCode_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyShgCode</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	  &quot;shg_code&quot;: &quot;${promo_code}&quot;               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyShgCode_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyShgCode</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	  &quot;shg_code&quot;: &quot;${promo_code}&quot;               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSalesPromocodeDetailsForSHG_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getSalesPromocodeDetailsForSHG</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;group_loan_amount&quot;: &quot;45000&quot;,&#xd;
          &quot;is_shg_code_verified&quot;: &quot;true&quot;,&#xd;
          &quot;scheme_type&quot;: &quot;NRLM&quot;,&#xd;
        	 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculateBlendedInterestRate_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/calculateBlendedInterestRate</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;group_loan_amount&quot;: &quot;45000&quot;,&#xd;
        	 &quot;interest_rate&quot;: &quot;20.00&quot;,&#xd;
          &quot;is_shg_code_verified&quot;: &quot;true&quot;,&#xd;
          &quot;scheme_type&quot;: &quot;NRLM&quot;,&#xd;
        	 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMeetingCenterList_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMeetingCenterList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;	&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.meeting_center_details_list[0].meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getExpectedDisbursementDate_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getExpectedDisbursementDate</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;current_date&quot;: &quot;${formattedDate}&quot;&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">expected_disbursement_date</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expected_disbursement_date</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

Date currentDate = new Date();

Calendar calendar = Calendar.getInstance();
calendar.setTime(currentDate);

Date todayDate = calendar.getTime();

SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd MMM yyyy&quot;);
String formattedDate = sdf.format(todayDate);

vars.put(&quot;formattedDate&quot;, formattedDate);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFirstRepaymentDate_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFirstRepaymentDate</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;expected_disbursement_date&quot;: &quot;${expected_disbursement_date}&quot;,&#xd;
		&quot;meeting_date&quot;: &quot;01&quot;&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">first_repayment_date</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.first_repayment_date</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getGroupMembersPremiumDetails_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getGroupMembersPremiumDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;group_tenure&quot;: &quot;12&quot;,&#xd;
    &quot;loan_app_ids&quot;: [&#xd;
      &quot;${loan_app_id_1}&quot;,&#xd;
      &quot;${loan_app_id_2}&quot;,&#xd;
      &quot;${loan_app_id_3}&quot;&#xd;
    ],&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">first_repayment_date</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.first_repayment_date</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateGroup_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateGroup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;request&quot;: {&#xd;
        &quot;group_details&quot;: {&#xd;
        	&quot;group_cycle_type&quot;: &quot;SHG_2C_NTB&quot;,&#xd;
            &quot;employee_id&quot;: &quot;${empId}&quot;,&#xd;
             &quot;group_code&quot;: &quot;${promo_code}&quot;,&#xd;
            &quot;group_image_document_code&quot;: &quot;&quot;,&#xd;
            &quot;group_loan_amount&quot;: &quot;45000&quot;,&#xd;
            &quot;group_member_details&quot;: [&#xd;
                {&#xd;
                   &quot;amount&quot;: 0,&#xd;
          &quot;cycle_count&quot;: &quot;&quot;,&#xd;
          &quot;is_availing&quot;: &quot;true&quot;,&#xd;
          &quot;is_signatory_one&quot;: &quot;true&quot;,&#xd;
          &quot;is_signatory_two&quot;: &quot;false&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id_1}&quot;,&#xd;
          &quot;signatory_order&quot;: &quot;1&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;amount&quot;: 0,&#xd;
          &quot;cycle_count&quot;: &quot;&quot;,&#xd;
          &quot;is_availing&quot;: &quot;true&quot;,&#xd;
          &quot;is_signatory_one&quot;: &quot;false&quot;,&#xd;
          &quot;is_signatory_two&quot;: &quot;true&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id_2}&quot;,&#xd;
          &quot;signatory_order&quot;: &quot;2&quot;&#xd;
                },&#xd;
                {&#xd;
                  &quot;amount&quot;: 0,&#xd;
          &quot;cycle_count&quot;: &quot;&quot;,&#xd;
          &quot;is_availing&quot;: &quot;true&quot;,&#xd;
          &quot;is_signatory_one&quot;: &quot;false&quot;,&#xd;
          &quot;is_signatory_two&quot;: &quot;true&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id_3}&quot;,&#xd;
          &quot;signatory_order&quot;: &quot;3&quot;&#xd;
        }&#xd;
            ],&#xd;
            &quot;group_name&quot;: &quot;Rishi Markanda&quot;,&#xd;
            &quot;group_type&quot;: &quot;NTB&quot;,&#xd;
            &quot;inception_date_proof&quot;: {&#xd;
        &quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
        &quot;document_name&quot;: &quot;INCEPTION_DATE_PROOF&quot;,&#xd;
        &quot;documentPath&quot;: [],&#xd;
        &quot;document_type&quot;: &quot;INCEPTION_DATE_PROOF&quot;,&#xd;
        &quot;file_number&quot;: &quot;1&quot;&#xd;
      },&#xd;
            &quot;is_dsa_applicable&quot;: &quot;false&quot;,&#xd;
             &quot;is_shg_verified&quot;: &quot;true&quot;,&#xd;
            &quot;meeting_loan_details&quot;: {&#xd;
               &quot;age_of_group&quot;: &quot;0&quot;,&#xd;
        &quot;blended_interest_rate&quot;: &quot;20.00&quot;,&#xd;
        &quot;expected_disbursement_date&quot;: &quot;22 Oct 2024&quot;,&#xd;
        &quot;first_repayment_date&quot;: &quot;2 Dec 2024&quot;,&#xd;
        &quot;group_inception_date&quot;: &quot;17 Oct 2024&quot;,&#xd;
        &quot;group_loan_product&quot;: &quot;LOAN_SHG&quot;,&#xd;
        &quot;interest_rate&quot;: &quot;20.00&quot;,&#xd;
        &quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
        &quot;loan_product_name&quot;: &quot;SHGDL&quot;,&#xd;
        &quot;loan_term&quot;: &quot;12&quot;,&#xd;
        &quot;meeting_centre_id&quot;: &quot;29150&quot;,&#xd;
        &quot;meeting_center_name&quot;: &quot;Bangalore City-608093-020&quot;,&#xd;
        &quot;meeting_date&quot;: &quot;1st&quot;,&#xd;
        &quot;meeting_end_time&quot;: &quot;10 AM&quot;,&#xd;
        &quot;meeting_start_time&quot;: &quot;9 AM&quot;,&#xd;
        &quot;repayment_date&quot;: &quot;1st&quot;,&#xd;
        &quot;sales_promocode_id&quot;: &quot;NRLMC1&quot;,&#xd;
        &quot;sales_promocode_name&quot;: &quot;NRLMC1&quot;,&#xd;
        &quot;term_unit&quot;: &quot;MONTHS&quot;&#xd;
            },&#xd;
           &quot;scheme_type&quot;: &quot;NRLM&quot;,&#xd;
      &quot;sub_dsa_code&quot;: &quot;&quot;,&#xd;
      &quot;vrm_category&quot;: &quot;A-608093&quot;,&#xd;
      &quot;vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
      &quot;vtc_name&quot;: &quot;Bangalore City&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;device_id&quot;: &quot;&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(group,${group_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">group_created_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;group_id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="product_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="signatory_name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">signatory_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.signatory_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="sales_promo_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sales_promo_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.sales_promocode_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Group Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_type</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="credit_promo_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">credit_promo_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.credit_promo_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="processName" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">processName</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_cycle_count" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_cycle_count</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_cycle_count</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="signatory_name_two" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_loan_product" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_loan_product</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_loan_product</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="signatory_name_two" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="member_count" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">member_count</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.member_count</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_type</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_formatted_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="StartProcess_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/startProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&quot;credit_promo_code&quot;: &quot;IST_CYCLE_NON_RTR&quot;,&#xd;
    &quot;group_cycle_count&quot;: &quot;0&quot;,&#xd;
    &quot;group_formatted_id&quot;: &quot;${group_formatted_id}&quot;,&#xd;
    &quot;group_id&quot;: &quot;${group_id}&quot;,&#xd;
    &quot;group_loan_product&quot;: &quot;LOAN_SHG&quot;,&#xd;
    &quot;group_name&quot;: &quot;RISHI MARKANDA&quot;,&#xd;
    &quot;group_type&quot;: &quot;NTB&quot;,&#xd;
    &quot;meeting_loan_details&quot;: {&#xd;
      &quot;expected_disbursement_date&quot;: &quot;22 Oct 2024&quot;,&#xd;
      &quot;first_repayment_date&quot;: &quot;2 Dec 2024&quot;,&#xd;
      &quot;group_loan_product&quot;: &quot;LOAN_SHG&quot;,&#xd;
      &quot;loan_product_code&quot;: &quot;SHGDL&quot;,&#xd;
      &quot;loan_product_name&quot;: &quot;SHGDL&quot;,&#xd;
      &quot;loan_term&quot;: &quot;12&quot;,&#xd;
      &quot;meeting_centre_id&quot;: &quot;29150&quot;,&#xd;
      &quot;meeting_center_name&quot;: &quot;Bangalore City-608093-020&quot;,&#xd;
      &quot;meeting_date&quot;: &quot;1st&quot;,&#xd;
      &quot;meeting_end_time&quot;: &quot;10 AM&quot;,&#xd;
      &quot;meeting_start_time&quot;: &quot;9 AM&quot;,&#xd;
      &quot;repayment_date&quot;: &quot;1st&quot;,&#xd;
      &quot;sales_promocode_id&quot;: &quot;NRLMC1&quot;,&#xd;
      &quot;sales_promocode_name&quot;: &quot;NRLMC1&quot;,&#xd;
      &quot;term_unit&quot;: &quot;MONTHS&quot;&#xd;
    },&#xd;
    &quot;member_count&quot;: &quot;3&quot;,&#xd;
    &quot;processName&quot;: &quot;group-shg&quot;,&#xd;
    &quot;signatory_name&quot;: &quot;HARISH&quot;,&#xd;
    &quot;signatory_name_two&quot;: &quot;HARISH&quot;,&#xd;
    &quot;task_type&quot;: &quot;NTB&quot;&#xd;
		}   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Group Formation" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&#xd;
                &quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">15000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUnassignedMembersList_1stCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUnassignedMembersList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_ids&quot; : [&quot;${empId}&quot;]&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_1stCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        	 &quot;request&quot; : {&#xd;
   				 &quot;property_key&quot; : &quot;max.group.limit.under.meeting.center&quot;,&#xd;
    				 &quot;service&quot; : &quot;ACTOR&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_2ndCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        	 &quot;request&quot; : {&#xd;
   				 &quot;property_key&quot; : &quot;mfi.group.members.min&quot;,&#xd;
    				 &quot;service&quot; : &quot;LOS&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_3rdCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &#xd;
        	 &quot;request&quot; : {&#xd;
   				 &quot;property_key&quot; : &quot;mfi.group.members.max&quot;,&#xd;
    				 &quot;service&quot; : &quot;LOS&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getGroupList_${__threadGroupName}_Group_Formation" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getGroupList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&#xd;
   				 &quot;employee_id&quot;: &quot;${empId}&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUnassignedMembersList_2ndCall_${__threadGroupName}_Group_Formation" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUnassignedMembersList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUnassignedMembersList_3rdCall_${__threadGroupName}_Group_Formation" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUnassignedMembersList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
        	 &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSalesPromoCodeByLoanProduct_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getSalesPromoCodeByLoanProduct</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;office_id&quot;: &quot;${office_id}&quot;,&#xd;
        	 &quot;loan_product_id&quot;: &quot;3&quot;,&#xd;
        	 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVillageRiskMapping_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVillageRiskMapping</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMeetingCenterList_${__threadGroupName}_Group_Formation" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMeetingCenterList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${__P(emp_id)}&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;	&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.meeting_center_details_list[0].meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMeetingCenterList_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMeetingCenterList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;	&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.meeting_center_details_list[0].meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getExpectedDisbursementDate_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getExpectedDisbursementDate</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;current_date&quot;: &quot;${formattedDate}&quot;&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">expected_disbursement_date</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expected_disbursement_date</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

Date currentDate = new Date();

Calendar calendar = Calendar.getInstance();
calendar.setTime(currentDate);

Date todayDate = calendar.getTime();

SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd MMM yyyy&quot;);
String formattedDate = sdf.format(todayDate);

vars.put(&quot;formattedDate&quot;, formattedDate);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFirstRepaymentDate_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFirstRepaymentDate</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;expected_disbursement_date&quot;: &quot;${expected_disbursement_date}&quot;,&#xd;
		&quot;meeting_date&quot;: &quot;10&quot;&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">first_repayment_date</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.first_repayment_date</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_5thCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &#xd;
        	 &quot;request&quot; : {&#xd;
   				 &quot;property_key&quot; : &quot;mfi.group.members.max&quot;,&#xd;
    				 &quot;service&quot; : &quot;LOS&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateGroup_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateGroup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;request&quot;: {&#xd;
        &quot;group_details&quot;: {&#xd;
            &quot;employee_id&quot;: &quot;${empId}&quot;,&#xd;
            &quot;group_image_document_code&quot;: &quot;&quot;,&#xd;
            &quot;group_loan_amount&quot;: &quot;44000&quot;,&#xd;
            &quot;group_member_details&quot;: [&#xd;
                {&#xd;
                    &quot;cycle_count&quot;: &quot;1&quot;,&#xd;
                    &quot;is_signatory_one&quot;: &quot;true&quot;,&#xd;
                    &quot;is_signatory_two&quot;: &quot;false&quot;,&#xd;
                    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;cycle_count&quot;: &quot;1&quot;,&#xd;
                    &quot;is_signatory_one&quot;: &quot;false&quot;,&#xd;
                    &quot;is_signatory_two&quot;: &quot;true&quot;,&#xd;
                    &quot;loan_app_id&quot;: &quot;${loan_app_id_2}&quot;&#xd;
                }&#xd;
            ],&#xd;
            &quot;group_name&quot;: &quot;Gaurav Vijairaj Samdariya&quot;,&#xd;
            &quot;group_type&quot;: &quot;NTB&quot;,&#xd;
            &quot;is_dsa_applicable&quot;: &quot;false&quot;,&#xd;
            &quot;is_promocode_applicable&quot;: &quot;false&quot;,&#xd;
            &quot;lead_generator&quot;: null,&#xd;
            &quot;meeting_loan_details&quot;: {&#xd;
                &quot;expected_disbursement_date&quot;: &quot;${expected_disbursement_date}&quot;,&#xd;
                &quot;first_repayment_date&quot;: &quot;${first_repayment_date}&quot;,&#xd;
                &quot;group_loan_product&quot;: &quot;JLGDL&quot;,&#xd;
                &quot;loan_product_name&quot;: &quot;JLGDL&quot;,&#xd;
                &quot;loan_term&quot;: &quot;12&quot;,&#xd;
                &quot;meeting_centre_id&quot;: &quot;${meeting_center_id}&quot;,&#xd;
                &quot;meeting_date&quot;: &quot;5th&quot;,&#xd;
                &quot;meeting_end_time&quot;: &quot;11 AM&quot;,&#xd;
                &quot;meeting_start_time&quot;: &quot;1 PM&quot;,&#xd;
                &quot;repayment_date&quot;: &quot;4th&quot;,&#xd;
                &quot;sales_promocode_id&quot;: &quot;&quot;,&#xd;
                &quot;term_unit&quot;: &quot;MONTHS&quot;&#xd;
            },&#xd;
            &quot;sub_dsa_code&quot;: &quot;&quot;,&#xd;
            &quot;vrm_category&quot;: &quot;NAGAON&quot;,&#xd;
            &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;device_id&quot;: &quot;&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(group,${group_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">group_created_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;group_id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="product_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="signatory_name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">signatory_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.signatory_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="sales_promo_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">sales_promo_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.sales_promocode_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Group Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_type</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="credit_promo_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">credit_promo_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.credit_promo_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="processName" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">processName</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_cycle_count" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_cycle_count</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_cycle_count</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="signatory_name_two" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_loan_product" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_loan_product</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_loan_product</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="signatory_name_two" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.signatory_name_two</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="member_count" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">member_count</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.member_count</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_type</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="group_formatted_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">group_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.group_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="StartProcess_1stCall_${__threadGroupName}_QDE" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/startProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;meeting_loan_details&quot;: {&#xd;
                &quot;expected_disbursement_date&quot;: &quot;${expected_disbursement_date}&quot;,&#xd;
                &quot;first_repayment_date&quot;: &quot;${first_repayment_date}&quot;,&#xd;
                &quot;group_loan_product&quot;: &quot;JLGDL&quot;,&#xd;
                &quot;loan_product_name&quot;: &quot;JLGDL&quot;,&#xd;
                &quot;loan_term&quot;: &quot;12&quot;,&#xd;
                &quot;meeting_centre_id&quot;: &quot;${meeting_center_id}&quot;,&#xd;
                &quot;meeting_date&quot;: &quot;4th&quot;,&#xd;
                &quot;meeting_end_time&quot;: &quot;11 AM&quot;,&#xd;
                &quot;meeting_start_time&quot;: &quot;1 PM&quot;,&#xd;
                &quot;repayment_date&quot;: &quot;4th&quot;,&#xd;
                &quot;term_unit&quot;: &quot;MONTHS&quot;&#xd;
            },&#xd;
            &quot;signatory_name&quot;: &quot;${signatory_name}&quot;,&#xd;
            &quot;sales_promocode_id&quot;: &quot;${sales_promo_code}&quot;,&#xd;
            &quot;group_name&quot;: &quot;${group_name}&quot;,&#xd;
            &quot;group_type&quot;: &quot;${group_type}&quot;,&#xd;
            &quot;credit_promo_code&quot;: &quot;${credit_promo_code}&quot;,&#xd;
            &quot;group_id&quot;: &quot;${group_id}&quot;,&#xd;
            &quot;processName&quot;: &quot;${processName}&quot;,&#xd;
            &quot;group_cycle_count&quot;: &quot;${group_cycle_count}&quot;,&#xd;
            &quot;product_id&quot;: &quot;${product_id}&quot;,&#xd;
            &quot;signatory_name_two&quot;: &quot;${signatory_name_two}&quot;,&#xd;
            &quot;group_loan_product&quot;: &quot;${group_loan_product}&quot;,&#xd;
            &quot;member_count&quot;: &quot;${member_count}&quot;,&#xd;
            &quot;task_type&quot;: &quot;${task_type}&quot;,&#xd;
            &quot;group_formatted_id&quot;: &quot;${group_formatted_id}&quot;           &#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getGroupList_1stCall_${__threadGroupName}_Group_Formation" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getGroupList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;&#xd;
&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUnassignedMembersList_4thCall_${__threadGroupName}_Group_Formation" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUnassignedMembersList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_4thCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &#xd;
        	 &quot;request&quot; : {&#xd;
   				 &quot;property_key&quot; : &quot;mfi.group.members.min&quot;,&#xd;
    				 &quot;service&quot; : &quot;LOS&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_6thCall_${__threadGroupName}_Group_Formation" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &#xd;
        	 &quot;request&quot; : {&#xd;
   				 &quot;property_key&quot; : &quot;max.group.limit.under.meeting.center&quot;,&#xd;
    				 &quot;service&quot; : &quot;ACTOR&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getGroupList_2ndCall_${__threadGroupName}_Group_Formation" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getGroupList</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_${__threadGroupName}_DDE" enabled="false">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;instance_id&quot;: &quot;${dde_instance_id}&quot;,&#xd;
                &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage_name&quot;: &quot;GROUP_FORMATION&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;, 		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178441740&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">true</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="false">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource"></stringProp>
        <stringProp name="dbUrl">jdbc:postgresql://172.31.2.87:5433/mfi_qa1</stringProp>
        <stringProp name="driver">org.postgresql.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">qateam@123</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">qateam</stringProp>
      </JDBCDataSource>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
