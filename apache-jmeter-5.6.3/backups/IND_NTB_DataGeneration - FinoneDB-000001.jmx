<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="IND_NTB" enabled="true">
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">mfi-auto.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">qa5-mfi.novopay.in</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">8001</stringProp>
          </elementProp>
          <elementProp name="PATH" elementType="Argument">
            <stringProp name="Argument.name">PATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/perf/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/api-gateway/novopay/v1</stringProp>
          </elementProp>
          <elementProp name="npPATH" elementType="Argument">
            <stringProp name="Argument.name">npPATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mfi-auto.novopay.in</stringProp>
          </elementProp>
          <elementProp name="mfiURL" elementType="Argument">
            <stringProp name="Argument.name">mfiURL</stringProp>
            <stringProp name="Argument.value">qa-mfi.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sesPath" elementType="Argument">
            <stringProp name="Argument.name">sesPath</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="perfURL" elementType="Argument">
            <stringProp name="Argument.name">perfURL</stringProp>
            <stringProp name="Argument.value">mfi-perf.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BPMNPATH" elementType="Argument">
            <stringProp name="Argument.name">BPMNPATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OTP" elementType="Argument">
            <stringProp name="Argument.name">OTP</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="voterIdLocation" elementType="Argument">
            <stringProp name="Argument.name">voterIdLocation</stringProp>
            <stringProp name="Argument.value">./voterIdImage.jpg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AccountURL" elementType="Argument">
            <stringProp name="Argument.name">AccountURL</stringProp>
            <stringProp name="Argument.value">mfi-perf-yugabyte.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ttime" elementType="Argument">
            <stringProp name="Argument.name">ttime</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="constant_delay" elementType="Argument">
            <stringProp name="Argument.name">constant_delay</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="random_delay" elementType="Argument">
            <stringProp name="Argument.name">random_delay</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moveprocess_delay" elementType="Argument">
            <stringProp name="Argument.name">moveprocess_delay</stringProp>
            <stringProp name="Argument.value">6000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="servicestatus_delay" elementType="Argument">
            <stringProp name="Argument.name">servicestatus_delay</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="finonestatus" elementType="Argument">
            <stringProp name="Argument.name">finonestatus</stringProp>
            <stringProp name="Argument.value">C</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">agentapp-ppd.usli.hdfcbank.com   mfi-perf.novopay.in   1500 3000  2000 4000            1000   4000   6000  10000</stringProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration FINONE" enabled="true">
        <stringProp name="dataSource">MyDBPoolFinone</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@//192.168.33.129:1539/lmstsg1 </stringProp>
        <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
        <stringProp name="username">NOVOPAYSLI</stringProp>
        <stringProp name="password">HDfc$123$</stringProp>
        <stringProp name="connectionProperties">oracle.net.CONNECT_TIMEOUT=60000 </stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration qa5" enabled="false">
        <stringProp name="dataSource">MyDBPool</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="dbUrl">jdbc:postgresql://172.31.2.209:5433/mfi_qa5</stringProp>
        <stringProp name="driver">org.postgresql.Driver</stringProp>
        <stringProp name="username">qateam</stringProp>
        <stringProp name="password">qateam@123</stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Globals" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">mfi-perf.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mfi-perf-yugabyte.novopay.in</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PATH" elementType="Argument">
            <stringProp name="Argument.name">PATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/perf/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/api-gateway/novopay/v1</stringProp>
          </elementProp>
          <elementProp name="npPATH" elementType="Argument">
            <stringProp name="Argument.name">npPATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mfiURL" elementType="Argument">
            <stringProp name="Argument.name">mfiURL</stringProp>
            <stringProp name="Argument.value">qa-mfi.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sesPath" elementType="Argument">
            <stringProp name="Argument.name">sesPath</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/novopay/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="perfURL" elementType="Argument">
            <stringProp name="Argument.name">perfURL</stringProp>
            <stringProp name="Argument.value">mfi-perf.novopay.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BPMNPATH" elementType="Argument">
            <stringProp name="Argument.name">BPMNPATH</stringProp>
            <stringProp name="Argument.value">/api-gateway/api/bpmn/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OTP" elementType="Argument">
            <stringProp name="Argument.name">OTP</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="voterIdLocation" elementType="Argument">
            <stringProp name="Argument.name">voterIdLocation</stringProp>
            <stringProp name="Argument.value">./tooo.jpg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Fineone" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
          <stringProp name="dataSource">MyDBPoolFinone</stringProp>
          <stringProp name="query">SELECT 1 FROM DUAL;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames">AGREEMENTID</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
          <stringProp name="dataSource">MyDBPoolFinone</stringProp>
          <stringProp name="query">SELECT S.AGREEMENTID FROM FIN_LEA.LEA_SOURCEINFO_DTL S, FIN_LEA.LEA_MKTG_M T,FIN_LEA.LEA_AGREEMENT_DTL A,FIN_LEA.NBFC_ADDRESS_M C ,FIN_LEA.NBFC_CUSTOMER_M B WHERE S.AGREEMENTID = A.AGREEMENTID AND A.LESSEEID = B.CUSTOMERID AND  B.CUSTOMERID = C.BPID AND  T.MASTER_TYPE = &apos;SE&apos; AND T.SYSTEM_ID = SALES_EXECID  AND T.code = &apos;173696&apos; AND ROWNUM = 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames">AGREEMENTID</stringProp>
        </JDBCSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="IND_NTB - e2e" enabled="false">
        <stringProp name="TestPlan.comments">Individual Loans - Thread1(TC)</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Onboarding" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="PersonalDetails_PAN" elementType="Argument">
              <stringProp name="Argument.name">PersonalDetails_PAN</stringProp>
              <stringProp name="Argument.value">No</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PersonalDetails_VoterID" elementType="Argument">
              <stringProp name="Argument.name">PersonalDetails_VoterID</stringProp>
              <stringProp name="Argument.value">Yes</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Timestamp Variable" enabled="true">
          <stringProp name="variableName">timestamp</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <stringProp name="minimumValue">100000</stringProp>
          <stringProp name="maximumValue">999999</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">true</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config --voterID" enabled="true">
          <stringProp name="filename">./voterIDs.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">voterID</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.thread</stringProp>
        </CSVDataSet>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Common Data Usage" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="content" elementType="Argument">
              <stringProp name="Argument.name">content</stringProp>
              <stringProp name="Argument.value">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</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="vtc_id" elementType="Argument">
              <stringProp name="Argument.name">vtc_id</stringProp>
              <stringProp name="Argument.value">43526</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="user_id" elementType="Argument">
              <stringProp name="Argument.name">user_id</stringProp>
              <stringProp name="Argument.value">38</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc"></stringProp>
            </elementProp>
            <elementProp name="marital_status" elementType="Argument">
              <stringProp name="Argument.name">marital_status</stringProp>
              <stringProp name="Argument.value">MARRIED</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="relation_with_borrower" elementType="Argument">
              <stringProp name="Argument.name">relation_with_borrower</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cb_marital_status" elementType="Argument">
              <stringProp name="Argument.name">cb_marital_status</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="accnum" elementType="Argument">
              <stringProp name="Argument.name">accnum</stringProp>
              <stringProp name="Argument.value">50100114499533</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pincode" elementType="Argument">
              <stringProp name="Argument.name">pincode</stringProp>
              <stringProp name="Argument.value">560002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cfe_user_id" elementType="Argument">
              <stringProp name="Argument.name">cfe_user_id</stringProp>
              <stringProp name="Argument.value">NA</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="borrower_name" elementType="Argument">
              <stringProp name="Argument.name">borrower_name</stringProp>
              <stringProp name="Argument.value">HARISH</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="loan_product_id" elementType="Argument">
              <stringProp name="Argument.name">loan_product_id</stringProp>
              <stringProp name="Argument.value">45</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ifsccode" elementType="Argument">
              <stringProp name="Argument.name">ifsccode</stringProp>
              <stringProp name="Argument.value">SIMA000001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="flcc_so_user" elementType="Argument">
              <stringProp name="Argument.name">flcc_so_user</stringProp>
              <stringProp name="Argument.value">Praveen0@novopay.in</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cu_user" elementType="Argument">
              <stringProp name="Argument.name">cu_user</stringProp>
              <stringProp name="Argument.value">amar@novopay.in</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="user_id_L6" elementType="Argument">
              <stringProp name="Argument.name">user_id_L6</stringProp>
              <stringProp name="Argument.value">154</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="user_id_FLCC" elementType="Argument">
              <stringProp name="Argument.name">user_id_FLCC</stringProp>
              <stringProp name="Argument.value">133</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">qa1 - loan_product_id : 1 - JLDL and 45 - INDL_LOAN</stringProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${session_token}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor- Login" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">int counter = ${counter};
String randomUser = &quot;auto&quot; + counter.toString();
vars.put(&quot;randomUserString&quot;, randomUser);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Timestamp Variable" enabled="true">
          <stringProp name="variableName">timestamp</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <stringProp name="minimumValue">100000</stringProp>
          <stringProp name="maximumValue">999999</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">true</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">200</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor- Login" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">int counter = ${counter};
String randomUser = &quot;auto&quot; + counter.toString();
vars.put(&quot;randomUserString&quot;, randomUser);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${session_token}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login  SO" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_ip&quot;: &quot;&quot;,&#xd;
        &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SYSTEM&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;&#xd;
    },&#xd;
     &quot;request&quot;: {&#xd;
        &quot;handle_type&quot;: &quot;USERNAME&quot;,&#xd;
        &quot;handle_value&quot;: &quot;${user_id}&quot;,&#xd;
        &quot;auth_type&quot;: &quot;PASSWORD&quot;,&#xd;
        &quot;auth_value&quot;: &quot;Y25DNS92Y1Z6czhPKzhZcEhydFN2QnExMEJPUUE5SnlLQjJudkJjU1h5dVdhK0JNd3pRSkV1UjRnZVpCTmxxTVA0K0NXU3pCYmMwZHNMVHg2SFZYdEhEYVR3RW9uMENBSSt6c0dhd2QvREJLdVg2RzNSaW9GbWRDR0xrU3A5ekVlN1podjB0VWllSC9wQ3pHM0lUb0Z5NVoybUxWTDErcTlZM3poVDRJM0NTNmZXcFhvVlRCYzJtbm54M0NHWUxWOWsvM2MvVmxTd0JRY3dUSHR4OElQbC9FcmkzUWdaeHB2N2t4T2JvSUY2YlZ0d1JnVGF2RHpHSm5sRE03Tmk3c25UUzlTSXZCdkRIbTRxeFB5NzJ0Y1RFUnlmY0orV2x5M3hEZmxvWElVNEwvRHpWSks1dEdJUDdUYXYwM1M5ZjRqRFZpQ0plcjhmRkd5ZzZMVG1jeXBRPT0&quot;&#xd;
    }&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">session_token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">user_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">notFound</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">100</stringProp>
            <stringProp name="RandomTimer.range">300</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="emp-Id generator" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end">100</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">id</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login - QA/PAT/UAT_OTP" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;request&quot;: {&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;handle_value&quot;: &quot;${user_id}&quot;,&#xd;
    &quot;mobile_details&quot;: {},&#xd;
    &quot;otp&quot;: &quot;123456&quot;&#xd;
  },&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;100&quot;,&#xd;
    &quot;channel_code&quot;: &quot;CUSTOMER_APP&quot;,&#xd;
    &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot;: &quot;10.0.2.15&quot;,&#xd;
    &quot;device_id&quot;: &quot;Ab093a9e4d4cf3e5b&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;VALIDATE_OTP&quot;,&#xd;
    &quot;locale&quot;: &quot;&quot;,&#xd;
    &quot;location&quot;: &quot;12.918865,77.67009&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;5.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;sim_number&quot;: &quot;N/A&quot;,&#xd;
    &quot;stan&quot;: &quot;1709548983568&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1709548983573&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">session_token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">user_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">notFound</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="RandomTimer.range">0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login_SO" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;auth_type&quot;: &quot;MPIN&quot;,&#xd;
    &quot;auth_value&quot;: &quot;cXpJdGdMTUh5ek9VRXFYcVBoeE13MDY0blhJS1NDRjBscUFvK2Y5SktCZUlGRGJWNW1nV3JWNUtp\nLzlWRytyUDZvV3lqNi9zeFZjVzk3YnFhZGt0cmpMSWlOaGV6V29RQlJYK1BhZ3RsM2tSdGdRVFph\nTTZ2NmdicXEyS0MwNVI3bGN3WGIxeVl3SUFlK1NXR3JEbmRtNE1yOVpjeXFQTkpKN3RaYk9ZV2Qv\ndzRuQ0pYaVpRSTlEaHZYRG9kbkhtOHEvZE5LMTBXWHkvRWNjcTk3aWszRkliU0J4K2pJb0JCVktl\ndjhmdFdnSXkzNldrYmR5dmNKUTdneGxMZ1F1Z0ZURlYxNXBFeU12MVhVTlJxZSs5aHBLUSt2a2Ni\nS1VlTmtZQVpyZG4rOTRWSGMwWmlvWDNGYzhsajhhSi9rWWd4VUNwM1Z2NTlBNWhKcUR3bFBBZ1pB\nPT0=\n&quot;,&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;inventory_details&quot;: {&#xd;
      &quot;apk_version&quot;: &quot;v3.2.0_243&quot;,&#xd;
      &quot;device_manufacturer&quot;: &quot;HUAWEI&quot;,&#xd;
      &quot;device_name&quot;: &quot;JSN-L42&quot;,&#xd;
      &quot;device_unique_identifier&quot;: &quot;EMP00014__c195200c2d0abb56&quot;,&#xd;
      &quot;mobile_numbers&quot;: &quot;9080142811&quot;,&#xd;
      &quot;os_name&quot;: &quot;Android&quot;,&#xd;
      &quot;os_version&quot;: &quot;10&quot;,&#xd;
      &quot;sim_identifiers&quot;: &quot;&quot;,&#xd;
      &quot;version_code&quot;: &quot;243&quot;&#xd;
    },&#xd;
    &quot;primary_number_otp&quot;: &quot;131372&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.office_details[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="QDE - IND NTB" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getWorkAreaByEmployeeId_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
       &quot;role_code&quot; : &quot;SO&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getWorkAreaByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">120000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Generate Rand_Mobile_Number" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

String generateRandomMobileNumber() {
    int[] firstNumbers = {6, 7, 8, 9};

    Random random = new Random();
    long rand = 100000000 + random.nextInt(900000000);
    
    String randomFirstNumber = Integer.toString(firstNumbers[random.nextInt(firstNumbers.length)]);

    return randomFirstNumber + rand;
}

String randomMob = generateRandomMobileNumber();
vars.put(&quot;randomMobNumber&quot;, randomMob);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1st_Call_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanProductList_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;page_size&quot; : &quot;-1&quot;,&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;loan_category&quot; : [ &quot;LOAN_IND&quot; ]&#xd;
    },&#xd;
    &quot;sort_criteria&quot; : { }&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;GET_EMP_AND_OFC_COM_SVCBL_PRODS&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanProductList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVillageRiskMapping_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&#xd;
	&quot;request&quot;: {&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
	},&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVillageRiskMapping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="perfromInternalMobileDedupe_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;customer_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/performInternalMobileDedupe</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking perform internal dedupe" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;Unexpected Error Occured&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="perfromInternalMobileDedupe_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;customer_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/performInternalMobileDedupe</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">2000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response_status.status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;otp.breach.limit&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_2ndCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;otp.breach.limit&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="aadhaarConsentUrl_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
         &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
         &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;aadhaar&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_product&quot; : &quot;INDL_LOAN&quot;,&#xd;
         &quot;mobile_number&quot; : &quot;&quot;		&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/aadhaarConsentUrl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_1st Call_${__threadGroupName}{Mobile_Consent}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_2ndCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_3rdCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_3rdCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
          &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.min.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
		&#xd;
        }   &#xd;
		&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails _4thCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;property_key&quot;: &quot;borrower.max.age&quot;,&#xd;
		&quot;service&quot;: &quot;LOS&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVtc_1stCall_${__threadGroupName}_QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
  &#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument _4thCall_${__threadGroupName}_{POA Document}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">poaDocs</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyMobileNumber_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;INITIATE&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CONSENT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
			&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyMobileNumber</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="otp_ref_key" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">otp_ref_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.otp_reference_key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC_Details _QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
		&quot;is_product_consent_captured&quot; : &quot;true&quot;,&#xd;
          &quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;31 Dec 1989&quot;,&#xd;
		 &quot;dsa&quot; : null,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		 &quot;is_dsa_applicable&quot; : &quot;false&quot;,&#xd;
           &quot;is_ovd_same_as_poi&quot; : &quot;true&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;12-10-1990&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;${borrower_name}&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;${loan_product_id}&quot;,&#xd;
		&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Sep 2024&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		 &quot;village_proceed_reason&quot; : &quot;VALID_VILLAGE&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Id " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan App ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Product ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.processName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Loan Formatted ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_formatted_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="KYC Type" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kyctype</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.kyc_type</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Phone Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">phoneno</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.phone</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrowername</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="StartProcess_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;processName&quot;:&quot;${process_name}&quot;,&#xd;
            &quot;loan_formatted_id&quot;:&quot;${loan_formatted_id}&quot;,&#xd;
            &quot;vtc_id&quot;:&quot;${vtc_id}&quot;,&#xd;
            &quot;loan_product_id&quot;:&quot;${loan_product_id}&quot;,&#xd;
            &quot;borrower_name&quot;: &quot;${borrowername}&quot;,  &#xd;
            &quot;phone&quot;: &quot;${phoneno}&quot;, &#xd;
            &quot;kyc_type&quot;: &quot;${kyctype}&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/startProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_1stCall__${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
           &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot; &#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Setting borrower_id ,loan_app_id and mobConsentDoc  global" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">props.put(&quot;borrowerId&quot;, ${borrower_id});

props.put(&quot;loanAppId&quot;,${loan_app_id});

props.put(&quot;mobConDoc&quot;,${mobConsentDoc});

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Name" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_details.borrower_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="First Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">first_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.first_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Middle Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">middle_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.middle_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Last Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">last_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.last_name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Mobile Number" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_kyc_details.mobile_number</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDetailsFromVtcId_1stCall__${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
	&#xd;
	 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDetailsFromVtcId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument _5thCall__${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Personal Details" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Voter ID" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${PersonalDetails_VoterID}&quot; == &quot;Yes&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Personal_Details_QDE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			 &quot;address_line_1&quot; : &quot;bsbsbs&quot;,&#xd;
      &quot;address_line_2&quot; : &quot;shhshss&quot;,&#xd;
      &quot;district&quot; : &quot;BANGALORE&quot;,&#xd;
      &quot;kyc_pincode&quot; : &quot;799001&quot;,&#xd;
      &quot;kyc_vtc&quot; : &quot;NAGAON&quot;,&#xd;
      &quot;kyc_vtc_id&quot; : &quot;223647&quot;,&#xd;
      &quot;landmark&quot; : &quot;&quot;,&#xd;
      &quot;kyc_pincode_optional&quot; : &quot;&quot;,&#xd;
      &quot;kyc_vtc_optional&quot; : &quot;&quot;,&#xd;
      &quot;state&quot; : &quot;Karnataka&quot;&#xd;
		},&#xd;
		  &quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    }, &#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;,&#xd;
		&quot;is_borrower_has_pan&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="PAN ID" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${PersonalDetails_PAN}&quot; == &quot;Yes&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Personal_Details_QDE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			 &quot;address_line_1&quot; : &quot;bsbsbs&quot;,&#xd;
      &quot;address_line_2&quot; : &quot;shhshss&quot;,&#xd;
      &quot;district&quot; : &quot;BANGALORE&quot;,&#xd;
      &quot;kyc_pincode&quot; : &quot;799001&quot;,&#xd;
      &quot;kyc_vtc&quot; : &quot;NAGAON&quot;,&#xd;
      &quot;kyc_vtc_id&quot; : &quot;223647&quot;,&#xd;
      &quot;landmark&quot; : &quot;&quot;,&#xd;
      &quot;kyc_pincode_optional&quot; : &quot;&quot;,&#xd;
      &quot;kyc_vtc_optional&quot; : &quot;&quot;,&#xd;
      &quot;state&quot; : &quot;Karnataka&quot;&#xd;
		},&#xd;
		  &quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    }, &#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;,&#xd;
		&quot;is_borrower_has_pan&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_2ndCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanApp_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;expected_disbursement_date&quot; : &quot;21 Nov 2023&quot;,&#xd;
    &quot;first_repayment_date&quot; : &quot;15 Dec 2023&quot;,&#xd;
    &quot;is_rejected&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;loan_purpose&quot; : &quot;OTHERS&quot;,&#xd;
    &quot;loan_term&quot; : &quot;12&quot;,&#xd;
    &quot;number_of_installments&quot; : &quot;12&quot;,&#xd;
    &quot;reject_reason&quot; : &quot;&quot;,&#xd;
    &quot;requested_amount&quot; : &quot;10000&quot;,&#xd;
    &quot;term_unit&quot; : &quot;Months&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanApp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_6thCall_${__threadGroupName}_QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>true</responseData>
                    <samplerData>false</samplerData>
                    <xml>true</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
                <stringProp name="RandomTimer.range">2000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">15000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disable - retryServiceCall_${__threadGroupName}_QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;POST_SERVICE_TASKS&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">BORROWER</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_6thCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_6thCall_${__threadGroupName}_QDE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>true</responseData>
                      <samplerData>false</samplerData>
                      <xml>true</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <url>true</url>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                  <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" retryServiceCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;${service_name_code}&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">BORROWER</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>true</responseData>
                    <samplerData>false</samplerData>
                    <xml>true</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_6thCall_${__threadGroupName}_QDE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                  <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1149187101">SUCCESS</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                    <boolProp name="ResultCollector.error_logging">false</boolProp>
                    <objProp>
                      <name>saveConfig</name>
                      <value class="SampleSaveConfiguration">
                        <time>true</time>
                        <latency>true</latency>
                        <timestamp>true</timestamp>
                        <success>true</success>
                        <label>true</label>
                        <code>true</code>
                        <message>true</message>
                        <threadName>true</threadName>
                        <dataType>true</dataType>
                        <encoding>false</encoding>
                        <assertions>true</assertions>
                        <subresults>true</subresults>
                        <responseData>true</responseData>
                        <samplerData>false</samplerData>
                        <xml>true</xml>
                        <fieldNames>true</fieldNames>
                        <responseHeaders>false</responseHeaders>
                        <requestHeaders>false</requestHeaders>
                        <responseDataOnError>false</responseDataOnError>
                        <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                        <assertionsResultsToSave>0</assertionsResultsToSave>
                        <bytes>true</bytes>
                        <sentBytes>true</sentBytes>
                        <url>true</url>
                        <threadCounts>true</threadCounts>
                        <idleTime>true</idleTime>
                        <connectTime>true</connectTime>
                      </value>
                    </objProp>
                    <stringProp name="filename"></stringProp>
                  </ResultCollector>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                    <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createBorrower_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
            &quot;borrower_type&quot;: &quot;BORROWER&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createBorrower</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">BORROWER</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${instance_id}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;QDE&quot;	&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- " enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_3rdCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
          &quot;stage&quot; : &quot;ONBOARDING&quot;,&#xd;
          &quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
          &quot;sub_step_code&quot; : &quot;&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_2ndCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disable - checkIfCustomerCreated_2stCall_${__threadGroupName}_QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkIfCustomerCreated</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Completion Status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Customer Creation" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">isCustomerCreated</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.is_customer_created</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="Disable - While Controller -- Checking Customer Creation" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${isCustomerCreated}&quot; == &quot;false&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkIfCustomerCreated_1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		 }   &#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkIfCustomerCreated</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Customer Creation" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">isCustomerCreated</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.is_customer_created</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getWorkAreaByEmployeeId_2ndCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
           &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
           &quot;role_code&quot; : &quot;SO&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getWorkAreaByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanProductList_2ndCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;page_size&quot; : &quot;-1&quot;,&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;loan_category&quot; : [ &quot;LOAN_IND&quot; ]&#xd;
    },&#xd;
    &quot;sort_criteria&quot; : { }&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;GET_EMP_AND_OFC_COM_SVCBL_PRODS&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanProductList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1StageStatusCheck_${__threadGroupName}_QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
       &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Eligibility Summary - IND NTB" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getWorkAreaByEmployeeId_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;,&#xd;
          &quot;role_code&quot;: &quot;SO&quot;&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getWorkAreaByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanProductList_1stCall__${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;GET_EMP_AND_OFC_COM_SVCBL_PRODS&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;,&#xd;
		&quot;offset&quot;: &quot;0&quot;,&#xd;
		&quot;page_size&quot;: &quot;-1&quot;,&#xd;
		&quot;search_criteria&quot;: {&#xd;
			&quot;loan_category&quot;: [&#xd;
				&quot;LOAN_IND&quot;&#xd;
			]&#xd;
		},&#xd;
		&quot;sort_criteria&quot;: {}&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanProductList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskCount_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
    &quot;assignee_contributor&quot;: [&#xd;
      ${user_id}&#xd;
    ],&#xd;
    &quot;channel&quot;: &quot;APK&quot;,&#xd;
    &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
    &quot;loan_category&quot;: [],&#xd;
    &quot;product_code&quot;: [&#xd;
      &quot;INDL_LOAN&quot;&#xd;
    ],&#xd;
    &quot;role_code&quot;: &quot;SO&quot;,&#xd;
    &quot;task_type&quot;: [&#xd;
      &quot;NTB&quot;,&#xd;
      &quot;ETB&quot;&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskCount</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_3rd_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_4th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_5th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_6th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_7th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId _1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_1st Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_8th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerCoBorrowerList_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
    			  &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerCoBorrowerList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_9th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_10th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_11th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_12th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_2nd_Call${__threadGroupName}__Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_2nd_Call${__threadGroupName}__Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActiveLoanForBorrowerAndFamilyMember_1stCall${__threadGroupName}__Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">	{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActiveLoanForBorrowerAndFamilyMember</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_11thCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateExistingLoan_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE_COMPLETE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;existing_loan&quot;: [{&#xd;
				&quot;borrowed_amount&quot;: &quot;2180.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;20 Sep 2020&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8817&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;HDFC BANK LTD&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;50000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;29 Sep 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8725&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;XXXX&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;42328.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;23 Oct 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8816&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;2250.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;LNT FINANCE&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;20000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;27 Dec 2018&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8815&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;1900.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;AROHAN&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;40000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;09 Mar 2021&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8814&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;910.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;BANDHAN BANK LIMITED&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Weekly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;50000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;07 Jan 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8818&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;1140.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;BANDHAN BANK LIMITED&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Weekly&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExistingLoan</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_3rdCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_12thCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/bAEMBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAf/AABEIASwBkAMBIgACEQEDEQH/xAAVAAEBAAAAAAAAAAAAAAAAAAAAC//EABQQAQAAAAAAAAAAAAAAAAAAAAD/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/xAAnEQEAAgECBQUBAQEBAAAAAAAAAREhMUFRYXGBkaGxweHw0fECEv/aAAwDAQACEQMRAD8An/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcYxprnX+AAgAAALmZ8R8QACAAt4iOEz619gAgAAAAAAAAAAAAAAAAALOut87sAE/eAAAAAAAAAAWZmavaK8f6ACAAAAAAAAAAsVcXpeegAE1mr5X8+oAIAAAAABMViQAAAAAAAAAAAAAAAAAAAAAAAAAXndTGeudq0/baABAAAAW9ecV6xPwABUxF7T60ACAAAAAATFYkAAAAAAAAAAAAAAAAAAAAAAAAAAAFuara77gAVnjEa1w3AAmIveqieM5i+QAIAAAC++KitfHbqABitc8OOn2ACAAtzm83/AGP4ACAAsTMXW8V2ABAAAAAAAAAAAAAAAAAAAAAAAAWZmZuQAQAAAD9xABcVd54V+gACMTE6c+WkgAgALrUTiM5r9fAAEAAAAAAAAABbi7iO05gAEAAABZiq5/yJ+QAQAAAAAAAAAAAF203nPjHb5ABAAAAAAAAAAXFTxxWfPx+iQAQAFiZi5idvOYwACAAAAAAAAAAAAAAAAuYuO0/y/wBYAIAAACzWK4RfXcAEAAAAAAAAAAAAAAAAAAAAAAABauuc1f1fPPbuACYi5rSOO/72AAxXO58Yr5AA5a1enT67gAgALWLx5i/GoAIAAAAAAAAAAAAAAAAAAAAAAAAACxFztHUADFTx/wA5ddwAQAAAFuOGbu9ulcAAQAFnSu/mI/gAIAC87i+FfVfuIAEYnfHD7+QAKmarPLhnfhqABip43Uemf3gAEAAAAABa84qOU/oABAAWJq+cTHkAEAAAAAAAAABZiYqZ30ABAAAAXGJ8x058/QAFqMTrHLWKrE4/l3czAAMgAAAAA1MRrE3NXN9v7+oAGQAWOekZnpcR8gAszm6jWOcYiMYxMcdwAX/qsRiJrO1TNa4+/kAMAAv/ADNTpe1a+OYALMVOdbz6TOO/GNJABI71vXC/3cAEAAAAAAAAAAABa0zGeenXgACAAAAAAAAAAAAAAuK5+2lT3yACR0vl/gANXFVEd9Z25cvUAGQAW5qq3uOvD2AAmtuEeaz6gAYvtvt41rp2AAia8xOke+oAEzczPHv7/uAAIAAAAAAAAAAAC1FXed4/fvEgAnyAAAAAAAAAAAAAAAAAAAAAC6cJ0n6/sAAsTrMzmsXF9eMRw7gAl3XLSu3fbXOwAIAAAC+3Gul+P2oAE4nfvFSABwmc533qgAImYm4AAiJuK11xn93ABAAAAAAAAAAAAAAAAAAAAAAAAa/5iJmpvMxEVzAA/wDOZi4xvttv3ABImYiY4gAgALNzmd/jAAE1iu/97+gAG2sYusZm6129dgAIi7znaOIAFzVXj78gATPO976xHtoACAAsRpNxGa5xz6AATi6nGmuuM9v2QAJ10iM6bXGvYAEAAAAAAABeONvGYz8dwAQAAAFiLvlFgAgAAAAALmOOM9NPoADWc7zmeoAExU63zABAAWK3ueERxx76b9NAAQAFuaq8cAAQAFuc89fcAC9ecV6xPwABjO1RHnET8gAnyAAAAAC9sxrE6bR76gAgALU1e113AArrfCvu/QAEAAAAAAAAAAAAAAAAAAABaxfOvQACJq6u5iu+L+aAAjpf+x/ncAEAAAAABf3XTAAIAAAAACxvi8Ttdc+XUAEAAABdumfNR/AAQAFrF41qt/8AAAQAFmsVwz1ABAAXETxjxYAIAAAAAC3iviPfUAEABZvf9WPgADM5jat9OGsgATFVppE4+eYAH/OsdY9wAQAFx7ffH9tsACAAuM9Mdbj4sAEAAAAAAAAABZm50rkACAAAAAAAAAAsRcxHGaAAm4xO2wAIAAAAADVxjXncROtXWOQAJMzOsgAsReIi51/sa6c8TtuADIAAALWLuOlxfgAEABaxdx0vPgAEAAAAmKxIAAAAALNYrvP7h6gAgAAAAAAAAAAAAAAAAAHz9aftwAAAWJraJ65ABAAWf2Yn2ABAAAAAAAAAAAAWds38f754xEgAkTWYAA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWaid6x1qYiQAQAFnSOsxte29RevYAEAAAAAAAAAAABY35R8xHyACAAAAD//2Q==&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_13thCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateDeviationRemedyDetails_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
		&quot;deviation_remedial_list&quot;: [{&#xd;
				&quot;eligibility_rule_id&quot;: &quot;62&quot;,&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;eligibility_rule_id&quot;: &quot;66&quot;,&#xd;
				&quot;remedial_action_document&quot;: {&#xd;
					&quot;dms_document_code&quot;: &quot;&quot;,&#xd;
					&quot;document_id&quot;: &quot;&quot;,&#xd;
					&quot;document_name&quot;: &quot;&quot;,&#xd;
					&quot;document_type&quot;: &quot;&quot;,&#xd;
					&quot;file_number&quot;: &quot;0&quot;&#xd;
				},&#xd;
				&quot;remedial_action_reason&quot;: &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
				&quot;remedial_document_type&quot;: &quot;null&quot;					&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateDeviationRemedyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;BORROWER_ELIGIBILITY_RULES&quot;,&#xd;
            &quot;sub_step_code&quot;: &quot;BORROWER_REMEDIAL_ACTION&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_4thCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_3rd_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_5th_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;step_code&quot;: &quot;ELIGIBILITY_SUMMARY_BORROWER&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerCoBorrowerList_2nd_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerCoBorrowerList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="perfromInternalMobileDedupe_1st_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;customer_type&quot;: &quot;CO_BORROWER&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/performInternalMobileDedupe</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_1st_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;property_key&quot;: &quot;otp.breach.limit&quot;,&#xd;
                &quot;service&quot;: &quot;LOS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189762700&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_2nd_Call_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;property_key&quot;: &quot;otp.timeout.in.sec&quot;,&#xd;
                &quot;service&quot;: &quot;LOS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189762700&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="aadhaarConsentUrl_1st_Call_Eligibility_${__threadGroupName}_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;loan_product&quot; : &quot;INDL_LOAN&quot;,&#xd;
   	     &quot;mobile_number&quot; : &quot;9856454314&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;aadhar&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189762700&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/aadhaarConsentUrl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_14th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="perfromInternalMobileDedupe_2nd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;customer_type&quot;: &quot;CO-BORROWER&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/performInternalMobileDedupe</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_15th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_16th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxITEhAQEhAVFRISFRUPDxUPFQ8PDxAPFRUXFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0mICU2LS0tLSsvMC0tLTEtLS0tLS8tLS44LS4tLS0rLS0tLSsvLS0tLystLTUtLS0wLS0rLv/AABEIAOEA4QMBIgACEQEDEQH/xAAcAAACAgMBAQAAAAAAAAAAAAAAAQQFAgMGBwj/xABHEAACAQIDBAQJCAcHBQAAAAAAAQIDEQQFIRIxQVEGYXGBExQiMlKRobHRFSNCcnOSwfAkM0NTYoKyB0RUk5Si0oOjs8Lh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/EAC8RAQACAQIEBAMIAwAAAAAAAAABAgMEERITMVEFIUGRMlKBFCJCYXGhwdGx4fD/2gAMAwEAAhEDEQA/APcTFsHIaQCSMhDAAAAAAEAXGAgGAAAAAMAMGxtjSAEhiGAAAAAAIAuMBAMAAAABNgMBbQACQwAAEMAABMSdwGMAAAAAEM1168YLanJRS4yaSIFTNb/q6UpfxT+ah/u8p90SLJnx4/jnZtFZnosxXKSWKxEvpU4LlGM6j9baXsNFR1/8TJdkKP4xKVvFcFem8/T+9kkYLS6JMLnL3r/4qe6+sKH/ABCOKxC/bKX14R/9bGseL4J9J9v9tvs1vydRcDnaWcVV51OMubg3F90ZX96J+FzinJpX2ZPRRn5Lb5LhLubLeLV4cvlWyO2K9esLQDUqqM4u5ZRmMAAAAAEMBMBiAYC2QGAAAhgAAIAGAAIYCAZX4nHttwpJOS0nOV/B03y086X8K72uOGY4puXgYNrTarTW+EHujH+OXsWvI000klGKtFaJLcjla3XTSeXj6+s9k1Me/nLFUVfbk3Ofpzs2vqrdFdg5sybNc2cG9ptO8zus1hgpbhNmMZWFUkRpNmuT17jXcwUte4dR9Rhu1VH7yJWno1ZWd7p6p68UzZiZ79OKIk56MzDK0wGYSjZJuS9GTvL+ST/pfc1uL/CY1SSlF3T7VqtGmuDW6xxW07/m5PwuLak5LWWm2l+1ilvS/eJLTmlblbsaLxC1Z4Ms7x37K2bBE+dXaQqXMyqwWLUkpJ3TSaa1TT3NFjTmd9RbAAxbAYxIYCGAgGAgAYgGAAIYAAAAEbMMUqdOU3rZaJb5SekYrrbaXeSGyjzartVaNLhG9ea+r5MF96V/5SHUZeVjm/ZtSvFbYqFNxjaWs5Pbqv0qj39y3JcEkbEYykJvQ8la+8r0QybNTYOZjKRG3iGhvca6tVJayS372kcZ0y6c0sMrJ7Un5sYuzl/FKW+MeSWr36K1/LMw6d4qrJ7PkrlTVmu1rV97ZdwaDLmjijyhi2Ster3ulXi3pJPTg0zbUep850uk2Ii9qUFL7RSS9as/ad50U6ewqWptyhU0SpVZupRq9VKrLyqc+Sk2nuuiTN4blxxv1K5q2nyei13v7SJUlv7TN11KMZx1jLWPB964PqNFR77cyhCY5TMnNp3Ts1ZrtIzkOczLK8wGN2ZR9CreSXCFVP5yPY7qS+tLkdNhq10efwn81VW507YiLfDY8/1wcjpskxl0k2el8OzTkw7T1jy/pzdRThu6WMrmxI0Umbky+gZAAAAAAAArgAwAAAQwAAEwQGNR6HL0qm1isVL0PB0F2KPhH7aj9R0td6Hn+BzZQq4yFSlV2liZtunTnWWy7OHmJteTs7zmeK78mIjusaaPvS6e4pPQqJdIsMvOq7H2salL+pI2Us6w0/NxFJ9lSD/E87w27Lmye5FZ0hxexRlrba8m/KNm5P7qZLjWTtaSfY0zlP7ScRs4Ws77qFS3bNwpL+tmcVeK8V7s9HiNWUsXXqVp32XJ2XVwXcrF9gsrVkkrdho6PYPyIdau+16ndZNle1bQ9nWIrG0OXad53c5HKG+BTZz0bdnUhG04+VZabVvxPa8JkStuMMbkKtuMsROzlf7OcwlVwUlJ3dOa1fKS/wDifey/lPf2soOgOD8FHMo/RhWVOPdN29iRbV56vtPJ6msRmtEd3XpO8MpSHKW8iykKcyLZsnZdO9VQe6alB9kotfiLojjnaN3rZX7TTls/nab5O5WdF63mvmkzseE9b/T+VPV+j2DBVLpE2JS5RUvFFzA7KkzGJBIBiBDAAAAABDAAMWxxQAMAA0V0cV0z6OU8TBtpxqpfN1afk1YdV1vXU9Dupor8TRuYmInqzE7dHzpisLmVCTjHH11bdeUmveaJ5pmW6WIhU+2p05+9M9kz7IFNt2OWr9G2uBHODHPWsezbmW7vP45vjI6uhhpP+GnGm/XFI0ZlmGNxMPF3SUKcmnJKTlG60u3Jt26t3Ud5Po8+RlRyJp7jEafFE7xVnnX223U+T5bsqK5WR6L0dwOi0KjA5Y7rQ7jJcLZLQmRrLC4VJbiDmqUU29Ek23ySLp6I5PpG/GJeJxlZTW3ipL9lhL+Vd8JTs4r+Z/RNMmSMdZtb0bVrxTs5fJKGxg3UatLGV54xp71SbtD1qz7yNiKmti0zXEqc215MIpU6cVuUIqyRS4mbvfgeUtM2tNp9XVr5QUpGE5b+41ykYuXvGzZu8Y2IVqnGFOpJfW2bR9rRHyCNtlcrIj5xVtSjT41ppvn4OnaTf3tlE7JYao7fhmPak27/AMKGqt96IelZG/JR0FM5/JI6I6CB01VsGJDAQwAAAQAMwbC5kkAJDEMAAAATNU4G4xaAh1KCfAjTy5ci12THZAppZXHkYrKY8i72QUQKmnlaXAsKFBRRIehR5xmzUo0aS2601eMd0YQ3OpUf0YL1vcjW14rG9ujMRMztDHO81acaNFKVepfYi/NhFaOpUfCC9r0WrObxdeNKLpQk5OT8JiKsvPxFXi3bdHSyW5JJbjPE11SU4Qnt1KjTxFZ6Sqy4RVvNgr6RXxbpcVO9jzur1k5rbR0X8OHaN5aa1RtkTFSNlR6miuypCy0sIRu0u9t7klvbGyBn2J2IqjF/OVUnO2+FHl2y91uZNjpOS0Vj1a2tFY3lFdfw1aVReZH5ul9SPHvep1mR0dUc5lOGslodzkGF3M9NjpFKxWPRyr2m07y63KYWSLuCIGX07JFgjdqyAAAAATYDAx2hAZgAAAhgAhiYo9YDGAAAAACsJysEpWKDNc0bk6VJraS2qk5eZQh6Uub5R49hHkyVx14rT5M1rNp2g84zaW14GilKq1tPa/V0YfvKr4LfZb5W7WuZxGLUFOnSk5ObvXrS/WV5r3RW5JaJEfH5grOlSb2G9qpOX6yvP0pv8Owg7R5zV6u+ee0dnRxYYrHmznMjznczlL3ke28qRCw1zepqqo3SWoYmUKdN16ztTWkUtJ1Z+jH8Xw7bIkrEzO0NZnZFxVeNGm601fhSg99Wp/xWl/VxOewlOVScqtR3nN7Um+YV688TV8LNWS8mnBebTgtyS/PvbvMvwm7Q9BotLyq8Vvin9nPz5uOdo6J2VYS7R3mT4SyRT5JgN2h2WAw9ki8rpuHhZG5BFDAQwEwGKwIYAAAAAIYAAhgAAACGAgGKUrA5cSgz7Ntn5uDXhJJtX82nHjOXUuXF99tMmSuOs2t0hmtZtO0Mc5zV3dKm0pW2qk3rChD0pc3yj+BxmYZkmnSpXVNPak3rOtPjOb4mjNMzUr06bexfanJ+dWnxlJldGZ5vU6i2e289PSP+9XSxYopDc5GaZHUjbB6IrTCZtYJBBizHG0sLTVarrKX6mivPrPm+UOvj62lazaeGOpMxEbyxxlanQg69dtQvanCOlSvNfRjyXOX4nH4vFVcVU8JU0S0pU4+ZShwSX5/FqvVq4qq61Z3k9IxWkKcOEYrgi4wGC3aHodHoowxxW+L/AA52bPN/KOgwGD3aHWZRlu5tGGU5ZubR2GXYG1tC+rtuW4S1tC8pQsjChRsjcAwE2Y7wMhiSGAgGAAArAAxAMAQCGAAAAANiZoxFWybb0Wr4JAVufZsqMHJ6tvZpxW+c3uX4t8kzzPNMzk3KO1tSm71pL6T4RjyiuRt6R5661SVRPybOFBejT4z7Ze63I59M4Gsz86+0fDH7/n/To4MXBG89UtTMlIjRkbabKcwsJFNm+kRYcCyy5R24uSTSUpWeibSbSfU3YjkR8yzGnhKaq1EpVJr9Hpem/Snyh7+y7ON8LOvUlXrScqkt7e6K4RiuC+CIvSTKM3qYmrUnh5yd7RcEqkNjg4taWat7FwI9HK81j/dqi/6Vzt6OmDDXim0cU/mo5eZedojyddgMOtDqcqwK0bPOMLDNo/3ep/kFxhsyzeP7Gp/kL4FydXij8UIvs93rmX4ZKxe4dJHjFHP85X7Kf+nXwJUekGdv9nP/AE6+Bp9tw92fs93sqqoyUjzXo90kxybjjMPLY3+FjTlFQXHbiuHWt3HmdzhMUpcSfHlpkjesor0ms7SsEZmEJGRI1MAAAAAAAEADAAAAAAEMTBAJs4n+0XOPB0lRi/KraS6qStteu6j3s7OvLQ8S6ZZl4bF1WneMH4KHZBtP/dtvvRU1mTgx7R6+SfT04r/oqKlS+v5sZU5e40Se4zpM4kx5OilRZvpsjQZvgRyylUOBOpLcQcM9xY0ERWE3CVZK0VOSVtEpNJE2MpP6cvvS+JBo712Mn0F7yGRnTpdcvvT+I6mGXXv9KfxN8F+BlKO/tMMMKeCjye70p/EkLL6fJ/en8TOmtO4lRiGsyqsywsaeHxFSF1KFKpKL2puzUW+L1K7oJnF6NKEnuhFepIuOkD/RMX9hVf8A25Hn3RKs0qf1Y+47fg/4/oqanpD2rD1LpEqLKPJq94ouoM7aozGJA+oBiBDAAAAABBcBiuJsaQDABMCqz/G+BoVqv7unOffGLaR4U+N999Xxb3XPYunak8LUjFNuc6NPTlOtCL9jt3njtWLu7p3u7pp6O5yfELffiv5L2lj7sy01GbKTNNRmdJlH0WkuBvpkWElzJNGfWRyJmE3otaOhUYee7VFnQnu/PAgvAnUJarvLOjG1iowctV3lvSe7uIpgSHx7jJcRNaMyhxMbbNW+lbcTEvcRqZLS9xhiVX0jX6HjPsKv/jkecdGV5NP6q9x6V0l0wWM+wq+t02kjz7o7RtCl9WPuR3PCOlvoq6npD0vIn5KOjp7jncjWiOhpnaVG0YkMAEMAABWABmG8LGYCQxAAwAAIeMoKcXGSTTVmnqmjl82yVbMnGVRP7WrL3s7CoiJXoXuaWx0v8URP6sxaY6S8gxtCtFtOrU6vKZBcK372frPS8wyZSb0K55F1GvIxfLHtDbmW7y4J0Kv7yXsNbwc39J+z4Hf/ACGuQ/kLqM8nH8se0HMt3l548tf5S+AvkvqX3Y/A9E+QuoFkS5DlU+WPY47d3nUcnXor1Q+BK+TlDcle29RS16/h8Ne++RUtEjD5D6jPKp2j2Y47d3njyvqWuvmx+Avkrq9kfgeifIXUHyGuRjlU+WPY47d3nnyX1eyPwMllr/Kj8D0H5D6h/IfUOVT5Y9jjt3cThsqjxVy/wGHs0XlPJbcCZh8qs72Nq1rXpDEzM9U/J4aIvoIr8DQsWUUbMGhgAAACuAwEADAAAAAAEMTFFADRg4m0VgI86KZr8VRLsFgIniqDxZciXYLARPFVyDxVciWkFgIniq5B4quRLsFgIniq5B4quRLsFgIfiy5DeGXIlNAogRlhkbI4dG+wwMIQsZgAAIZgwG2NIEhgAAAAAAAAAAJBIAAYAAAAAACQAAMYAAAAAAAACQMAAYAAAAAApCiAANjAAAAAD//Z&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_3rd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;property_key&quot;: &quot;borrower.min.age&quot;,&#xd;
                &quot;service&quot;: &quot;LOS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189762700&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_1st_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot; &#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Setting borrower_id ,loan_app_id and mobConsentDoc  global" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">props.put(&quot;borrowerId&quot;, ${borrower_id});

props.put(&quot;loanAppId&quot;,${loan_app_id});

props.put(&quot;mobConDoc&quot;,${mobConsentDoc});

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_13th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_4th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;property_key&quot;: &quot;borrower.max.age&quot;,&#xd;
                &quot;service&quot;: &quot;LOS&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189762700&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVTC_1st_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
  &#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_17th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyMobileNumber_1stCall_${__threadGroupName}_ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;INITIATE&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CONSENT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
			&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyMobileNumber</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="otp_ref_key" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">otp_ref_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.otp_reference_key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KYC Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot; : {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
    &quot;is_product_consent_captured&quot; : &quot;true&quot;,&#xd;
    &quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
    &quot;borrower_live_image&quot; : {&#xd;
      &quot;dms_document_code&quot; : &quot;ec75616c-0033-4d9d-b48b-b6b4ff85de67&quot;,&#xd;
      &quot;document_id&quot; : &quot;&quot;,&#xd;
      &quot;document_name&quot; : &quot;borrower_live_image&quot;,&#xd;
      &quot;document_type&quot; : &quot;borrower_live_image&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;borrower_name&quot; : &quot;${borrower_name}&quot;,&#xd;
    &quot;borrower_type&quot; : &quot;CO_BORROWER&quot;,&#xd;
    &quot;consent_captured&quot; : &quot;true&quot;,&#xd;
    &quot;consent_document&quot; : {&#xd;
      &quot;dms_document_code&quot; : &quot;2e5ed0c5-c3e3-4dae-91b3-993fee942d6e&quot;,&#xd;
      &quot;document_id&quot; : &quot;&quot;,&#xd;
      &quot;document_name&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;document_type&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;consent_type&quot; : &quot;physical&quot;,&#xd;
    &quot;customer_kyc_document&quot; : &quot;VOTER_ID&quot;,&#xd;
    &quot;date_of_birth&quot; : &quot;31 Dec 1989&quot;,&#xd;
    &quot;father_name&quot; : &quot;Vijairaj Samdariya&quot;,&#xd;
    &quot;gender&quot; : &quot;FEMALE&quot;,&#xd;
    &quot;is_ovd_same_as_poi&quot; : &quot;true&quot;,&#xd;
    &quot;kyc_document_details&quot; : {&#xd;
      &quot;date_of_birth&quot; : &quot;12-10-1990&quot;,&#xd;
      &quot;dms_document_code&quot; : &quot;${kycDoc}&quot;,&#xd;
      &quot;document_id&quot; : &quot;${rand_voter_id}&quot;,&#xd;
      &quot;document_name&quot; : &quot;VOTER_ID&quot;,&#xd;
      &quot;document_type&quot; : &quot;kyc_document&quot;,&#xd;
      &quot;document_valid_till&quot; : &quot;&quot;,&#xd;
      &quot;father_name&quot; : &quot;Vijairaj Samdariya&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;,&#xd;
      &quot;gender&quot; : &quot;FEMALE&quot;,&#xd;
      &quot;marital_status&quot; : &quot;&quot;,&#xd;
      &quot;mobile_number&quot; : &quot;${__P(randomMobile)}&quot;,&#xd;
      &quot;name&quot; : &quot;${borrower_name}&quot;,&#xd;
      &quot;ovd&quot; : &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
    },&#xd;
    &quot;kyc_type&quot; : &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;loan_product_code&quot; : &quot;INDL_LOAN&quot;,&#xd;
    &quot;loan_product_id&quot; : &quot;45&quot;,&#xd;
    &quot;marital_status&quot; : &quot;DIVORCED&quot;,&#xd;
    &quot;mobile_number&quot; : &quot;${__P(randomMobile)}&quot;,&#xd;
    &quot;mobile_owner&quot; : &quot;FATHER&quot;,&#xd;
    &quot;mobile_verification_failure_reason&quot; : &quot;&quot;,&#xd;
    &quot;mobile_verified&quot; : &quot;false&quot;,&#xd;
    &quot;name_match_check_required&quot; : &quot;true&quot;,&#xd;
    &quot;ovd_district&quot; : &quot;BANGALORE&quot;,&#xd;
    &quot;ovd_landmark&quot; : &quot;&quot;,&#xd;
    &quot;ovd_line1&quot; : &quot;TV vvbbbb&quot;,&#xd;
    &quot;ovd_line2&quot; : &quot;cvvbbgg&quot;,&#xd;
    &quot;ovd_not_bio_reason&quot; : &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
    &quot;ovd_optional_pincode&quot; : &quot;&quot;,&#xd;
    &quot;ovd_optional_vtc&quot; : &quot;&quot;,&#xd;
    &quot;ovd_pincode&quot; : &quot;${pincode}&quot;,&#xd;
    &quot;ovd_state&quot; : &quot;Karnataka&quot;,&#xd;
    &quot;ovd_vtc_id&quot; : &quot;${vtc_id}&quot;,&#xd;
    &quot;ovd_vtc_name&quot; : &quot;${name}&quot;,&#xd;
    &quot;phone&quot; : &quot;${__P(randomMobile)}&quot;,&#xd;
    &quot;poa_document&quot; : {&#xd;
      &quot;dms_document_code&quot; : &quot;${poaDocs}&quot;,&#xd;
      &quot;document_id&quot; : &quot;${rand_passport_no}&quot;,&#xd;
      &quot;document_name&quot; : &quot;VOTER_ID&quot;,&#xd;
      &quot;document_type&quot; : &quot;poi_document&quot;,&#xd;
      &quot;document_valid_till&quot; : &quot;&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;poi_document&quot; : {&#xd;
      &quot;dms_document_code&quot; : &quot;${kycDoc}&quot;,&#xd;
      &quot;document_id&quot; : &quot;${rand_voter_id}&quot;,&#xd;
      &quot;document_name&quot; : &quot;VOTER_ID&quot;,&#xd;
      &quot;document_type&quot; : &quot;poi_document&quot;,&#xd;
      &quot;document_valid_till&quot; : &quot;&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;poi_document_id&quot; : &quot;&quot;,&#xd;
    &quot;poi_document_name&quot; : &quot;null&quot;,&#xd;
    &quot;relationship_with_borrower&quot; : &quot;DAUGHTER&quot;,&#xd;
    &quot;spouse_name&quot; : &quot;&quot;,&#xd;
    &quot;task_type&quot; : &quot;NTB&quot;,&#xd;
    &quot;village_proceed_reason&quot; : &quot;VALID_VILLAGE&quot;,&#xd;
    &quot;vtc_id&quot; : &quot;${vtc_id}&quot;&#xd;
  }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Borrower Id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">co_borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails__2nd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;, &#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot; &#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Setting borrower_id ,loan_app_id and mobConsentDoc  global" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">props.put(&quot;borrowerId&quot;, ${borrower_id});

props.put(&quot;loanAppId&quot;,${loan_app_id});

props.put(&quot;mobConDoc&quot;,${mobConsentDoc});

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDetailsFromVtcId__1st_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
	&#xd;
	 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDetailsFromVtcId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_18th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanAppPersonalDetails_2nd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			&quot;address_line_1&quot;: &quot;vjcjccmmc&quot;,&#xd;
			&quot;address_line_2&quot;: &quot;ufifjfkvkv&quot;,&#xd;
			&quot;district&quot;: &quot;NORTH DELHI&quot;,&#xd;
			&quot;kyc_pincode&quot;: &quot;110085&quot;,&#xd;
			&quot;kyc_vtc&quot;: &quot;Rithala&quot;,&#xd;
			&quot;kyc_vtc_id&quot;: &quot;53385&quot;,&#xd;
			&quot;landmark&quot;: &quot;&quot;,&#xd;
			&quot;kyc_pincode_optional&quot;: &quot;&quot;,&#xd;
			&quot;kyc_vtc_optional&quot;: &quot;&quot;,&#xd;
			&quot;state&quot;: &quot;Delhi&quot;&#xd;
		},&#xd;
		 &quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    }, &#xd;
		&quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails__3rd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;, &#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot; &#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Setting borrower_id ,loan_app_id and mobConsentDoc  global" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">props.put(&quot;borrowerId&quot;, ${borrower_id});

props.put(&quot;loanAppId&quot;,${loan_app_id});

props.put(&quot;mobConDoc&quot;,${mobConsentDoc});

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1st_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;stage&quot; : &quot;ONBOARDING&quot;,	&#xd;
                &quot;step_code&quot;: &quot;CO_BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189918418&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_7th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_7th_Call_Eligibility_Summary" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                  <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="retryServiceCall_${__threadGroupName}_EligibilitySummary" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;${service_name_code}&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">BORROWER</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Customer ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_Post_Retry_Call_Eligibility_Summary" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                  <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1149187101">SUCCESS</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                    <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="retryServiceCall_${__threadGroupName}_ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;POST_SERVICE_TASKS&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">BORROWER</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_14th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerCoBorrowerList_3rdCall_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerCoBorrowerList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_4thCall_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_6th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_15th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActiveLoanForBorrowerAndFamilyMember_2ndCall_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">	{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActiveLoanForBorrowerAndFamilyMember</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_28th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Mobile Consent&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateExistingLoan_2nd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE_COMPLETE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
		&quot;existing_loan&quot;: [{&#xd;
				&quot;borrowed_amount&quot;: &quot;2180.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;20 Sep 2020&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8817&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;HDFC BANK LTD&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;50000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;29 Sep 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8725&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;0&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;XXXX&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;42328.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;23 Oct 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8816&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;2250.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;LNT FINANCE&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;20000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;27 Dec 2018&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8815&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;1900.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;AROHAN&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Monthly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;40000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;09 Mar 2021&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8814&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;910.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;BANDHAN BANK LIMITED&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Weekly&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;borrowed_amount&quot;: &quot;50000.000000&quot;,&#xd;
				&quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
				&quot;current_outstanding_amount&quot;: &quot;0&quot;,&#xd;
				&quot;disbursed_date&quot;: &quot;07 Jan 2022&quot;,&#xd;
				&quot;dpd_count&quot;: &quot;0&quot;,&#xd;
				&quot;id&quot;: &quot;8818&quot;,&#xd;
				&quot;installment_amount&quot;: &quot;1140.000000&quot;,&#xd;
				&quot;installments_remaining&quot;: &quot;0&quot;,&#xd;
				&quot;lender_name&quot;: &quot;BANDHAN BANK LIMITED&quot;,&#xd;
				&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
				&quot;loan_tenure&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_18m&quot;: &quot;0&quot;,&#xd;
				&quot;max_dpd_6m&quot;: &quot;0&quot;,&#xd;
				&quot;no_of_bounces&quot;: &quot;0&quot;,&#xd;
				&quot;repayment_frequency&quot;: &quot;Weekly&quot;&#xd;
			}&#xd;
		],&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExistingLoan</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_7th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_5th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_8th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Co-Borrower_updateDeviationRemedyDetails_1stCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
     &quot;deviation_remedial_list&quot;: [&#xd;
      {&#xd;
        &quot;eligibility_rule_id&quot;: &quot;82&quot;,&#xd;
        &quot;remedial_action_document&quot;: {&#xd;
          &quot;dms_document_code&quot;: &quot;&quot;,&#xd;
          &quot;document_id&quot;: &quot;&quot;,&#xd;
          &quot;document_name&quot;: &quot;&quot;,&#xd;
          &quot;document_type&quot;: &quot;&quot;,&#xd;
          &quot;file_number&quot;: &quot;0&quot;&#xd;
        },&#xd;
        &quot;remedial_action_reason&quot;: &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
        &quot;remedial_document_type&quot;: &quot;&quot;,&#xd;
        &quot;rule_name&quot;: &quot;IND_CO_BORROWER_INDEBTEDNESS_CAP&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;eligibility_rule_id&quot;: &quot;63&quot;,&#xd;
        &quot;remedial_action_document&quot;: {&#xd;
          &quot;dms_document_code&quot;: &quot;&quot;,&#xd;
          &quot;document_id&quot;: &quot;&quot;,&#xd;
          &quot;document_name&quot;: &quot;&quot;,&#xd;
          &quot;document_type&quot;: &quot;&quot;,&#xd;
          &quot;file_number&quot;: &quot;0&quot;&#xd;
        },&#xd;
        &quot;remedial_action_reason&quot;: &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
        &quot;remedial_document_type&quot;: &quot;&quot;,&#xd;
        &quot;rule_name&quot;: &quot;IND_CO_BORROWER_DPD_LAST_EIGHTEEN_MONTH&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;eligibility_rule_id&quot;: &quot;74&quot;,&#xd;
        &quot;remedial_action_document&quot;: {&#xd;
          &quot;dms_document_code&quot;: &quot;&quot;,&#xd;
          &quot;document_id&quot;: &quot;&quot;,&#xd;
          &quot;document_name&quot;: &quot;&quot;,&#xd;
          &quot;document_type&quot;: &quot;&quot;,&#xd;
          &quot;file_number&quot;: &quot;0&quot;&#xd;
        },&#xd;
        &quot;remedial_action_reason&quot;: &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
        &quot;remedial_document_type&quot;: &quot;&quot;,&#xd;
        &quot;rule_name&quot;: &quot;IND_CO_BORROWER_OVERDUE_AMOUNT_LIMIT&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;eligibility_rule_id&quot;: &quot;67&quot;,&#xd;
        &quot;remedial_action_document&quot;: {&#xd;
          &quot;dms_document_code&quot;: &quot;&quot;,&#xd;
          &quot;document_id&quot;: &quot;&quot;,&#xd;
          &quot;document_name&quot;: &quot;&quot;,&#xd;
          &quot;document_type&quot;: &quot;&quot;,&#xd;
          &quot;file_number&quot;: &quot;0&quot;&#xd;
        },&#xd;
        &quot;remedial_action_reason&quot;: &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
        &quot;remedial_document_type&quot;: &quot;&quot;,&#xd;
        &quot;rule_name&quot;: &quot;IND_CO_BORROWER_DPD_LAST_EIGHTEEN_MONTH_COUNT&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;eligibility_rule_id&quot;: &quot;83&quot;,&#xd;
        &quot;remedial_action_document&quot;: {&#xd;
          &quot;dms_document_code&quot;: &quot;&quot;,&#xd;
          &quot;document_id&quot;: &quot;&quot;,&#xd;
          &quot;document_name&quot;: &quot;&quot;,&#xd;
          &quot;document_type&quot;: &quot;&quot;,&#xd;
          &quot;file_number&quot;: &quot;0&quot;&#xd;
        },&#xd;
        &quot;remedial_action_reason&quot;: &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
        &quot;remedial_document_type&quot;: &quot;&quot;,&#xd;
        &quot;rule_name&quot;: &quot;IND_BOTH_INDEBTEDNESS_CAP&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateDeviationRemedyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_3rd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;step_code&quot;: &quot;CO_BORROWER_ELIGIBILITY_RULES&quot;,&#xd;
            &quot;sub_step_code&quot;:&quot;CO_BORROWER_REMEDIAL_ACTION&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerCoBorrowerList_4th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerCoBorrowerList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_4th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot; : &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
            &quot;step_code&quot; : &quot;ELIGIBILITY_SUMMARY&quot;&#xd;
		&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${instance_id}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;ELIGIBILITY_SUMMARY&quot;&#xd;
		 &#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot;== &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_4th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
		&quot;id&quot; : &quot;${task_id}&quot;&#xd;
		  &#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;INCOME_AND_EXPENSES&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189918418&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFinancialDetails_1stCall_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1697189918418&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFinancialDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_16th_Call_Eligibility_Summary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Income and Expenses - IND NTB" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivitySummaryList_1st_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
          &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
          &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivitySummaryList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMasterDataList_1st_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &quot;request&quot; : {&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;page_size&quot; : &quot;100&quot;,&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;data_type&quot; : &quot;ACTIVITY_SUB_TYPE&quot;&#xd;
    },&#xd;
    &quot;sort_criteria&quot; : {&#xd;
      &quot;order&quot; : &quot;DESC&quot;&#xd;
    }&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMasterDataList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
	&quot;request&quot; : {&#xd;
    &quot;property_key&quot; : &quot;business.activity.monthly.profit&quot;,&#xd;
    &quot;service&quot; : &quot;LOS&quot;&#xd;
      },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_1st_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateActivityDetails_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &quot;request&quot; : {&#xd;
    &quot;activity_category&quot; : &quot;Working capital loans - Trade - High inventory&quot;,&#xd;
    &quot;activity_id&quot; : &quot;&quot;,&#xd;
    &quot;activity_sub_categories&quot; : [ {&#xd;
      &quot;activity_sub_category&quot; : &quot;ROTI_MAKING&quot;&#xd;
    } ],&#xd;
    &quot;activity_type&quot; : &quot;TIFFIN_FOOD_BUSINESS&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;is_primary_activity&quot;: &quot;true&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;proof_of_activity&quot; : {&#xd;
      &quot;dms_document_code&quot; : &quot;cdaa3577-a266-472d-bf93-8d45c1ccc483&quot;,&#xd;
      &quot;document_id&quot; : &quot;0&quot;,&#xd;
      &quot;document_name&quot; : &quot;8e8c80ba-6749-4ffb-aca2-72aad935dd46&quot;,&#xd;
      &quot;document_type&quot; : &quot;BUSINESS_ACTIVITIES&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;selling_price_details&quot; : {&#xd;
      &quot;amount&quot; : &quot;&quot;,&#xd;
      &quot;price_per_unit&quot; : &quot;&quot;,&#xd;
      &quot;frequency&quot; : &quot;&quot;,&#xd;
      &quot;frequencyValue&quot; : &quot;&quot;,&#xd;
      &quot;id&quot; : &quot;&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;false&quot;,&#xd;
      &quot;number_of_units&quot; : &quot;&quot;,&#xd;
      &quot;status&quot; : &quot;false&quot;&#xd;
    },&#xd;
    &quot;working_capital_expenses&quot; : [ ]&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivitySummaryList_2nd_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot; : {&#xd;
               &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
          &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
          &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
          },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivitySummaryList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1st_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
           &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
           &quot;step_code&quot; : &quot;INCOME_AND_EXPENSES&quot;,&#xd;
           &quot;sub_step_code&quot; : &quot;BUSINESS_ACTIVITIES&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAssetSummaryList_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAssetSummaryList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateAssetsAndAmenities_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;machinery_details&quot; : [ ],&#xd;
    &quot;one_time_investment&quot; : [ {&#xd;
      &quot;cost&quot; : &quot;979&quot;,&#xd;
      &quot;expense&quot; : &quot;FURNITURE&quot;&#xd;
    }, {&#xd;
      &quot;cost&quot; : &quot;959&quot;,&#xd;
      &quot;expense&quot; : &quot;STOCK/LIVESTOCK&quot;&#xd;
    }, {&#xd;
      &quot;cost&quot; : &quot;888&quot;,&#xd;
      &quot;expense&quot; : &quot;LAND_AND_BUILDING&quot;&#xd;
    } ]&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;MACHINERY_DETAILS&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateAssetsAndAmenities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getIncomeDetails_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getIncomeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateIncomeDetails_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_income_amount&quot; : &quot;979766&quot;,&#xd;
    &quot;borrower_other_income_amount&quot; : &quot;946465&quot;,&#xd;
    &quot;co_borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;co_borrower_income_amount&quot; : &quot;946465&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateIncomeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getExpenseDetails_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	  &quot;activity_id&quot; : &quot;&quot;,&#xd;
           &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
           &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
           &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getExpenseDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateExpenseDetails_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot; : {&#xd;
    &quot;amount_of_product&quot; : &quot;646&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;business_expense&quot; : &quot;540&quot;,&#xd;
    &quot;expense_code&quot; : &quot;&quot;,&#xd;
    &quot;expense_frequency&quot; : &quot;&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;household_expense&quot; : &quot;979&quot;,&#xd;
    &quot;is_activity_products_seen_and_verified&quot; : &quot;true&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;monthly_labour_charges&quot; : &quot;0&quot;,&#xd;
    &quot;monthly_misc_expenses&quot; : &quot;0&quot;,&#xd;
    &quot;monthly_rent&quot; : &quot;0&quot;,&#xd;
    &quot;monthly_transportation_charges&quot; : &quot;0&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExpenseDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_1st_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
               &quot;id&quot; : &quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFinancialDetails_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFinancialDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivitySummaryList_3rd_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
          &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
          &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivitySummaryList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1st_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
          &quot;step_code&quot; : &quot;INCOME_AND_EXPENSES&quot;     &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
          &quot;stage_name&quot; : &quot;INCOME_AND_EXPENSES&quot;,&#xd;
          &quot;step_code&quot; : &quot;INCOME_AND_EXPENSES&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_1stCall_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	  &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot; : &quot;${instance_id}&quot;,&#xd;
            &quot;is_rejected&quot; : &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot; : &quot;INCOME_AND_EXPENSES&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="process_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_2nd_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
            &quot;id&quot; : &quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_IncomeAndExpenses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
          &quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
           &quot;sub_step_code&quot; : &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Details - IND NTB" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
            <stringProp name="dataSource">MyDBPool</stringProp>
            <stringProp name="query">update mfi_simulator.simulator_response set response = &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;S:Envelope xmlns:S=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;
  &lt;S:Body&gt;
    &lt;ns0:inquireAccountStatusResponse xmlns:ns0=&quot;http://cal.savings.deposit.xface.fcr.iflex.com/&quot;&gt;
      &lt;return&gt;
        &lt;postingDate&gt;20230906&lt;/postingDate&gt;
        &lt;transactionStatus&gt;
          &lt;errorCode&gt;0&lt;/errorCode&gt;
          &lt;extendedReply/&gt;
          &lt;externalReferenceNo&gt;55158212220230906000800752433&lt;/externalReferenceNo&gt;
          &lt;isOverriden&gt;false&lt;/isOverriden&gt;
          &lt;isServiceChargeApplied&gt;false&lt;/isServiceChargeApplied&gt;
          &lt;replyCode&gt;0&lt;/replyCode&gt;
          &lt;spReturnValue&gt;0&lt;/spReturnValue&gt;
        &lt;/transactionStatus&gt;
        &lt;acctStatusInqCalResponseDTO&gt;
          &lt;channels&gt;C|M|A|T|I|E&lt;/channels&gt;
          &lt;codAcctBrn&gt;827&lt;/codAcctBrn&gt;
          &lt;codAcctName&gt;HARISH&lt;/codAcctName&gt;
          &lt;codAcctNo&gt;50100114499585&lt;/codAcctNo&gt;
          &lt;codAcctStat&gt;6&lt;/codAcctStat&gt;
          &lt;codAcctType&gt;SB&lt;/codAcctType&gt;
          &lt;codProd&gt;182&lt;/codProd&gt;
          &lt;codeAcctSubType&gt;SB&lt;/codeAcctSubType&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;SOW&lt;/custRel&gt;
            &lt;customerCategory&gt;Uday Mahajan&lt;/customerCategory&gt;
            &lt;customerId&gt;166278919&lt;/customerId&gt;
            &lt;varAddrLine1&gt;98/455, JJ COLONY&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex/&gt;
            &lt;varEmail&gt;jain.sonam34@gmail.com&lt;/varEmail&gt;
            &lt;varMobile&gt;919325698454&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;AKOCF5893L&lt;/varPan&gt;
            &lt;varPinCode&gt;421599&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;260321D0000018&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;AUS&lt;/custRel&gt;
            &lt;customerCategory&gt;F  &lt;/customerCategory&gt;
            &lt;customerId&gt;166277722&lt;/customerId&gt;
            &lt;varAddrLine1&gt;98/455, JJ COLONY&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex&gt;F&lt;/varCustSex&gt;
            &lt;varEmail/&gt;
            &lt;varMobile&gt;919325698454&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;AKOCF5893L&lt;/varPan&gt;
            &lt;varPinCode&gt;421599&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;SL000001912002&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;AUS&lt;/custRel&gt;
            &lt;customerCategory&gt;I  &lt;/customerCategory&gt;
            &lt;customerId&gt;166277723&lt;/customerId&gt;
            &lt;varAddrLine1&gt;98/456, JJ COLONY&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex&gt;F&lt;/varCustSex&gt;
            &lt;varEmail/&gt;
            &lt;varMobile&gt;919821752354&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan/&gt;
            &lt;varPinCode&gt;421599&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;SL000001912003&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;TRU&lt;/custRel&gt;
            &lt;customerCategory&gt;C  &lt;/customerCategory&gt;
            &lt;customerId&gt;50171548&lt;/customerId&gt;
            &lt;varAddrLine1&gt;AT DIWADANDI POST DAHANU TAL DAHANU&lt;/varAddrLine1&gt;
            &lt;varAddrLine2&gt;PEACE COTTAGE ARAMADA PO&lt;/varAddrLine2&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex&gt;M&lt;/varCustSex&gt;
            &lt;varEmail&gt;ishan02@GMAIL.COM&lt;/varEmail&gt;
            &lt;varMobile&gt;917777777794&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;ACIPC9755G&lt;/varPan&gt;
            &lt;varPinCode&gt;456123&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;SANJR00557&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;AUS&lt;/custRel&gt;
            &lt;customerCategory&gt;A  &lt;/customerCategory&gt;
            &lt;customerId&gt;138132695&lt;/customerId&gt;
            &lt;varAddrLine1&gt;FLAT NO 901/A&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;KHOPOLI&lt;/varCity&gt;
            &lt;varCustSex/&gt;
            &lt;varEmail/&gt;
            &lt;varMobile&gt;919080031984&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;AKOCF5893M&lt;/varPan&gt;
            &lt;varPinCode&gt;400785&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;130520I0000207&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;dateAcctActivation&gt;31/05/2021&lt;/dateAcctActivation&gt;
          &lt;dateAcctClose/&gt;
          &lt;dateAcctOpen&gt;26/03/2021&lt;/dateAcctOpen&gt;
          &lt;isRegAlerts&gt;N&lt;/isRegAlerts&gt;
          &lt;isSweepInFacility&gt;N&lt;/isSweepInFacility&gt;
          &lt;linkedSweepInAccts/&gt;
        &lt;/acctStatusInqCalResponseDTO&gt;
      &lt;/return&gt;
    &lt;/ns0:inquireAccountStatusResponse&gt;
  &lt;/S:Body&gt;
&lt;/S:Envelope&gt;&apos;
where simulator_config_id = &apos;51&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCasaAccountList_1st_Call_AD${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;customer_name&quot; : &quot;${borrower_name}&quot;,&#xd;
                &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getCasaAccountList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyAccountDetails_1st_Call_AD${__threadGroupName}_Account Details```" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;disbursement_account_details&quot; : {&#xd;
      &quot;bank_id&quot; : &quot;&quot;,&#xd;
      &quot;beneficiary_account_number&quot; : &quot;${accnum}&quot;,&#xd;
      &quot;beneficiary_bank&quot; : &quot;HDFC_BANK&quot;,&#xd;
      &quot;beneficiary_bank_ifsc_code&quot; : &quot;&quot;,&#xd;
      &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
      &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
      &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;&#xd;
    },&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyAccountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitAccountDetails_1st_Call_AD${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;account_details&quot; : {&#xd;
     &quot;bank_declaration&quot;: &quot;false&quot;,&#xd;
      &quot;beneficiary_account_number&quot; : &quot;${accnum}&quot;,&#xd;
      &quot;beneficiary_bank&quot; : &quot;HDFC_BANK&quot;,&#xd;
      &quot;beneficiary_bank_ifsc_code&quot; : &quot;&quot;,&#xd;
      &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
      &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
      &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;&#xd;
    },&#xd;
    &quot;account_holder_type&quot; : &quot;Individual&quot;,&#xd;
    &quot;account_purpose&quot; : &quot;Disbursement&quot;,&#xd;
    &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;same_as&quot; : &quot;false&quot;&#xd;
              &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitAccountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCasaAccountList_2nd_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;customer_name&quot; : &quot;${borrower_name}&quot;,&#xd;
                &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getCasaAccountList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerAccountDetails_1st_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;account_holder_type&quot; : &quot;Group&quot;,&#xd;
                &quot;account_purpose&quot; : &quot;DISBURSEMENT&quot;,&#xd;
                &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerAccountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyAccountDetails_2nd_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &quot;request&quot; : {&#xd;
    &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;disbursement_account_details&quot; : {&#xd;
      &quot;bank_id&quot; : &quot;&quot;,&#xd;
      &quot;beneficiary_account_number&quot; : &quot;${accnum}&quot;,&#xd;
      &quot;beneficiary_bank&quot; : &quot;HDFC_BANK&quot;,&#xd;
      &quot;beneficiary_bank_ifsc_code&quot; : &quot;&quot;,&#xd;
     &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
     &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
     &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;&#xd;
    },&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyAccountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitAccountDetails_2nd_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
         &quot;request&quot; : {&#xd;
    &quot;account_details&quot; : {&#xd;
      &quot;bank_id&quot; : &quot;&quot;,&#xd;
      &quot;beneficiary_account_number&quot; : &quot;50100102710662&quot;,&#xd;
      &quot;beneficiary_bank&quot; : &quot;HDFC_BANK&quot;,&#xd;
      &quot;beneficiary_bank_ifsc_code&quot; : &quot;&quot;,&#xd;
      &quot;beneficiary_first_name&quot; : &quot;${first_name}&quot;,&#xd;
      &quot;beneficiary_middle_name&quot; : &quot;${middle_name}&quot;,&#xd;
      &quot;beneficiary_last_name&quot; : &quot;${last_name}&quot;&#xd;
    },&#xd;
    &quot;account_holder_type&quot; : &quot;Individual&quot;,&#xd;
    &quot;account_purpose&quot; : &quot;Repayment&quot;,&#xd;
    &quot;borrower_has_bank_account&quot; : &quot;1&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;same_as&quot; : &quot;true&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172501203&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitAccountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_1st_Call_AccountDetails_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;id&quot; : &quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485318&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">account_instance</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1st_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485577&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1st_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;ACCOUNT_DETAILS&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485577&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
            &quot;instance_id&quot;: &quot;${instance_id}&quot;,&#xd;
            &quot;is_rejected&quot;: &quot;false&quot;,&#xd;
            &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
            &quot;stage_name&quot;: &quot;ACCOUNT_DETAILS&quot;&#xd;
		 &#xd;
		&#xd;
		&#xd;
		 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_2nd_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;id&quot; : &quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485318&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">account_instance</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_1st_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
               &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485318&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">account_instance</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_AD_${__threadGroupName}_Account Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694172485577&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DDE - IND NTB" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
               &quot;id&quot; :&quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178392986&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;BORROWER&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178393015&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394498&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_mobile" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_mobile</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_document_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_kyc_valid_till" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_kyc_valid_till</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="spouse_date_of_birth" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.spouse_date_of_birth</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFatcaDetails_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;India&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394959&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVtc_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;pincode&quot;: &quot;${pincode}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178394982&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getInsurancePremium_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
         &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_wants_health_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;insured_customer_type&quot; : [ &quot;Borrower&quot;, &quot;CO_BORROWER&quot;, &quot;SPOUSE&quot; ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;spouse_date_of_birth&quot; : &quot;&quot;,&#xd;
    &quot;spouse_wants_life_insurance&quot; : &quot;false&quot;&#xd;
           },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178395033&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getInsurancePremium_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
         &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_wants_health_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;insured_customer_type&quot; : [ &quot;Borrower&quot;, &quot;CO_BORROWER&quot;, &quot;SPOUSE&quot; ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;spouse_date_of_birth&quot; : &quot;&quot;,&#xd;
    &quot;spouse_wants_life_insurance&quot; : &quot;false&quot;&#xd;
           },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178395033&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateBorrowerDDE_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;alternate_mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
                &quot;alternate_mobile_number_owner&quot;: &quot;SPOUSE&quot;,&#xd;
                &quot;borrower_category_code&quot;: &quot;OBC&quot;,&#xd;
                &quot;borrower_category_section&quot;: &quot;OBC&quot;,&#xd;
                &quot;borrower_community_code&quot;: &quot;OBC&quot;,&#xd;
                &quot;borrower_father_name&quot;: &quot;AutoFahWf&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_religion_code&quot;: &quot;BUDDHISM&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;false&quot;,&#xd;
                &quot;fatca_city_of_birth_code&quot;: &quot;&quot;,&#xd;
                &quot;fatca_consent&quot;: &quot;false&quot;,&#xd;
                &quot;fatca_country_code&quot;: &quot;&quot;,&#xd;
                &quot;fatca_state_code&quot;: &quot;&quot;,&#xd;
                &quot;highest_qualification_code&quot;: &quot;PRIMARY_SCHOOL&quot;,&#xd;
                &quot;is_life_insurance_opted&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;marital_status_code&quot;: &quot;MARRIED&quot;,&#xd;
                &quot;mother_maiden_name&quot;: &quot;&quot;,&#xd;
                &quot;physically_disabled&quot;: &quot;NO&quot;,&#xd;
                &quot;residence_details&quot;: {&#xd;
                        &quot;business_stability&quot;: &quot;8&quot;,&#xd;
                        &quot;residence_stability&quot;: &quot;8&quot;,&#xd;
                        &quot;type_of_accommodation&quot;: &quot;OWNED&quot;&#xd;
                },&#xd;
                &quot;spouse_address&quot;: {&#xd;
                        &quot;address_line_1&quot;: &quot;&quot;,&#xd;
                        &quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
                },&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;&quot;,&#xd;
                &quot;spouse_kyc_document_code&quot;: &quot;null&quot;,&#xd;
                &quot;spouse_kyc_document_id&quot;: &quot;&quot;,&#xd;
                &quot;spouse_kyc_valid_till&quot;: &quot;&quot;,&#xd;
                &quot;spouse_life_insurance_consent&quot;: &quot;false&quot;,&#xd;
                &quot;spouse_mobile&quot;: &quot;&quot;,&#xd;
                &quot;spouse_name&quot;: &quot;&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;,&#xd;
                &quot;urc_details&quot;: {&#xd;
                        &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
                        &quot;urc_code&quot;: &quot;&quot;,&#xd;
                        &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178414723&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerDDE</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

vars.put(&quot;spouse_mobile&quot;, randomMobileNumber);


//// Function to generate a valid passport number (for demonstration purposes)
//String generateValidPassport() {
//    // Replace this with a valid passport format
//    // Example format: A12345678
//    // A - Uppercase letter, 1-9 - Digits
//    String validFormat = &quot;A12345678&quot;;
//
//    StringBuilder passportNumber = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (c == &apos;A&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
//        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return passportNumber.toString();
//}
//
//// Generate a valid passport number
//String validPassport = generateValidPassport();
//
//vars.put(&quot;rand_passport_no&quot;,validPassport);
//
//// Print or use the generated valid passport number
//log.info(&quot;Valid Passport ID: &quot; + validPassport);
//
//// Function to generate a valid voter ID (for demonstration purposes)
//String generateValidVoterID() {
//    // Replace this with a valid voter ID format
//    // Example format: ABC1234567
//    // ABC - Uppercase letters, 1234567 - Digits
//    String validFormat = &quot;ABC1234567&quot;;
//
//    StringBuilder voterID = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (Character.isLetter(c)) {
//            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
//        } else if (Character.isDigit(c)) {
//            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return voterID.toString();
//}
//
//// Generate a valid voter ID
//String validVoterID = generateValidVoterID();
//
//// Print or use the generated valid voter ID
//log.info(&quot;Valid Voter ID: &quot; + validVoterID);
//vars.put(&quot;rand_voter_id&quot;,validVoterID);



// Define the character set
String characterSet = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;

// Define the length of the generated number
int numberLength = 10; // You can change this to your desired length

// Create a random object
Random random = new Random();

// Generate the random number
StringBuilder randomNumber = new StringBuilder();
for (int i = 0; i &lt; numberLength; i++) {
    int index = random.nextInt(characterSet.length());
    char randomChar = characterSet.charAt(index);
    randomNumber.append(randomChar);
}

// Print the generated number
log.info(&quot;Generated Number: &quot; + randomNumber.toString());

// Set the generated number as a JMeter variable (if needed)
vars.put(&quot;spouse_kyc_document_id&quot;, randomNumber.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178417937&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateInsuranceNomineeAndAppointeeDetails_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;borrower_nominee_details&quot;: {&#xd;
                        &quot;borrower_nominee_date_of_birth&quot;: &quot;31 Dec 1989&quot;,&#xd;
                        &quot;borrower_nominee_full_name&quot;: &quot;${borrower_name}&quot;,&#xd;
                        &quot;borrower_nominee_gender&quot;: &quot;FEMALE&quot;,&#xd;
                        &quot;borrower_nominee_type&quot;: &quot;BORROWER&quot;,&#xd;
                        &quot;nominee_relationship_with_borrower&quot;: &quot;FATHER&quot;&#xd;
                },&#xd;
                &quot;borrower_nominee_same_as_co_borrower&quot;: &quot;true&quot;,&#xd;
                &quot;borrower_nominee_same_as_spouse&quot;: &quot;true&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_nominee_same_as_borrower&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178419690&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateInsuranceNomineeAndAppointeeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEQuestionnaire_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178422784&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEQuestionnaire</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="question_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[1].question_list..question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="TestPlan.comments">$.mapped_questionnaire_list[0].question_list[0].question_master_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="answer_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[1].question_list[0].answer_list[0].answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="TestPlan.comments">$.mapped_questionnaire_list[0].question_list[0].answer_list[0].answer_master_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.json.JSONArray;
import org.json.JSONObject;
import java.util.ArrayList;
import java.util.List;

// Extract the response JSON
String response = prev.getResponseDataAsString();
JSONObject jsonResponse = new JSONObject(response);

// Create the JSON array for questionnaire_activity_list
JSONArray questionnaireActivityList = new JSONArray();

// Extract questionnaire data
JSONArray questionnaireList = jsonResponse.getJSONArray(&quot;mapped_questionnaire_list&quot;);

for (int i = 0; i &lt; questionnaireList.length(); i++) {
    JSONObject questionnaire = questionnaireList.getJSONObject(i);
    JSONArray questions = questionnaire.getJSONArray(&quot;question_list&quot;);

    // Create the questionnaire_activity entry
    JSONObject questionnaireActivity = new JSONObject();
    questionnaireActivity.put(&quot;questionnaire_activity&quot;, questionnaire.getString(&quot;questionnaire_activity&quot;));

    // Create the questionnaire_list
    JSONArray questionnaireListJson = new JSONArray();

    for (int j = 0; j &lt; questions.length(); j++) {
        JSONObject question = questions.getJSONObject(j);
        JSONArray answerList = question.getJSONArray(&quot;answer_list&quot;);

        String selectedAnswerId = null;

        for (int k = 0; k &lt; answerList.length(); k++) {
            JSONObject answer = answerList.getJSONObject(k);

            if (answer.getBoolean(&quot;is_default&quot;)) {
                selectedAnswerId = answer.getString(&quot;answer_master_id&quot;);
            }
        }

        if (selectedAnswerId != null) {
            // Create the questionnaire_entry
            JSONObject questionnaireEntry = new JSONObject();
            questionnaireEntry.put(&quot;answer_id&quot;, selectedAnswerId);
            questionnaireEntry.put(&quot;question_id&quot;, question.getString(&quot;question_master_id&quot;));

            questionnaireListJson.put(questionnaireEntry);
        }
    }

    // Add the questionnaire_list to the questionnaire_activity entry
    questionnaireActivity.put(&quot;questionnaire_list&quot;, questionnaireListJson);

    // Add the questionnaire_activity entry to the questionnaire_activity_list
    questionnaireActivityList.put(questionnaireActivity);
}

// Store the questionnaire_activity_list in a JMeter variable
vars.put(&quot;questionnaire_activity_list&quot;, questionnaireActivityList.toString());
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416034&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveDDEQuestionnaireResponse_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;questionnaire_activity_list&quot;: [&#xd;
            {&#xd;
                &quot;questionnaire_list&quot;: [&#xd;
                    {&#xd;
                        &quot;answer_id&quot;: &quot;${answer_master_id}&quot;,&#xd;
                        &quot;question_id&quot;: &quot;${question_master_id}&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;questionnaire_activity&quot;: &quot;LIFE_INSURANCE_BORROWER_FEMALE&quot;&#xd;
            }&#xd;
        ],&#xd;
                &quot;task_sub_type&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;task_type&quot;: &quot;NTB&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DDE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178433332&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/saveDDEQuestionnaireResponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAPYDetails_1st_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178436381&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAPYDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFatcaDetails_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot;: {&#xd;
                        &quot;city_name&quot;: &quot;Bengaluru&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178407325&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateApyDetails_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;account_number&quot; : &quot;&quot;,&#xd;
    &quot;apy_status&quot; : &quot;null&quot;,&#xd;
    &quot;borrower_nominee_details&quot; : {&#xd;
      &quot;nominee_date_of_birth&quot; : &quot;&quot;,&#xd;
      &quot;nominee_full_name&quot; : &quot;&quot;,&#xd;
      &quot;nominee_gender&quot; : &quot;&quot;,&#xd;
      &quot;nominee_relationship_with_borrower&quot; : &quot;null&quot;,&#xd;
      &quot;same_as_borrower_insurance_nominee&quot; : &quot;false&quot;&#xd;
    },&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_nominee_appointee_details&quot; : {&#xd;
      &quot;appointee_date_of_birth&quot; : &quot;&quot;,&#xd;
      &quot;appointee_full_name&quot; : &quot;&quot;,&#xd;
      &quot;appointee_gender&quot; : &quot;&quot;,&#xd;
      &quot;appointee_relationship&quot; : &quot;null&quot;&#xd;
    },&#xd;
    &quot;contribution_amount&quot; : &quot;&quot;,&#xd;
    &quot;customer_id&quot; : &quot;&quot;,&#xd;
    &quot;customer_want_apy&quot; : &quot;false&quot;,&#xd;
    &quot;fatca_city_of_birth_code&quot; : &quot;&quot;,&#xd;
    &quot;fatca_consent&quot; : &quot;false&quot;,&#xd;
    &quot;fatca_country_code&quot; : &quot;&quot;,&#xd;
    &quot;fatca_state_code&quot; : &quot;&quot;,&#xd;
    &quot;frequency_of_contribution&quot; : &quot;null&quot;,&#xd;
    &quot;apy_clearance_declaration&quot; : &quot;false&quot;,&#xd;
    &quot;is_income_tax_payer&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;mother_maiden_name&quot; : &quot;&quot;,&#xd;
    &quot;pension_amount&quot; : &quot;null&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;ONBOARDING&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178437630&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateApyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot; : {&#xd;
    &quot;id&quot; : &quot;${task_id}&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178412138&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_3rd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;BORROWER&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416062&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER&quot;&#xd;
  },&#xd;
  &#xd;
  &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_3rd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;id&quot; : &quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_3rd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;CO_BORROWER&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_4th_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_3rd_Call_DDE_${__threadGroupName}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178416044&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFatcaDetails_3rd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;search_criteria&quot; : {&#xd;
                &quot;city_name&quot; : &quot;India&quot;&#xd;
               }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178407325&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVtc_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
       &quot;request&quot; : {&#xd;
    &quot;pincode&quot; : &quot;${pincode}&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178434821&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getInsurancePremium_3rd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
         &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_wants_health_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;insured_customer_type&quot; : [ &quot;Borrower&quot;, &quot;CO_BORROWER&quot;, &quot;SPOUSE&quot; ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;spouse_date_of_birth&quot; : &quot;&quot;,&#xd;
    &quot;spouse_wants_life_insurance&quot; : &quot;false&quot;&#xd;
           },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178395033&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateBorrowerDDE_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;alternate_mobile_number&quot;: &quot;&quot;,&#xd;
                &quot;alternate_mobile_number_owner&quot;: &quot;&quot;,&#xd;
                &quot;borrower_category_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_category_section&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_community_code&quot;: &quot;GENERAL&quot;,&#xd;
                &quot;borrower_father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
                &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
                &quot;borrower_religion_code&quot;: &quot;HINDUISM&quot;,&#xd;
                &quot;borrower_wants_health_insurance&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_city_of_birth_code&quot;: &quot;Bengaluru&quot;,&#xd;
                &quot;fatca_consent&quot;: &quot;true&quot;,&#xd;
                &quot;fatca_country_code&quot;: &quot;Karnataka&quot;,&#xd;
                &quot;fatca_state_code&quot;: &quot;India&quot;,&#xd;
                &quot;highest_qualification_code&quot;: &quot;PRIMARY_SCHOOL&quot;,&#xd;
                &quot;is_life_insurance_opted&quot;: &quot;false&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;marital_status_code&quot;: &quot;MARRIED&quot;,&#xd;
                &quot;mother_maiden_name&quot;: &quot;kumari&quot;,&#xd;
                &quot;physically_disabled&quot;: &quot;NO&quot;,&#xd;
                &quot;residence_details&quot;: {&#xd;
                        &quot;business_stability&quot;: &quot;&quot;,&#xd;
                        &quot;residence_stability&quot;: &quot;7&quot;,&#xd;
                        &quot;type_of_accommodation&quot;: &quot;OWNED&quot;&#xd;
                },&#xd;
                &quot;spouse_address&quot;: {&#xd;
                        &quot;address_line_1&quot;: &quot;&quot;,&#xd;
                        &quot;same_as_borrower_current_address&quot;: &quot;false&quot;&#xd;
                },&#xd;
                &quot;spouse_date_of_birth&quot;: &quot;${spouse_date_of_birth}&quot;,&#xd;
                &quot;spouse_kyc_document_code&quot;: &quot;${spouse_kyc_document_code}&quot;,&#xd;
                &quot;spouse_kyc_document_id&quot;: &quot;${spouse_kyc_document_id}&quot;,&#xd;
                &quot;spouse_kyc_valid_till&quot;: &quot;${spouse_kyc_valid_till}&quot;,&#xd;
                &quot;spouse_life_insurance_consent&quot;: &quot;false&quot;,&#xd;
                &quot;spouse_mobile&quot;: &quot;${spouse_mobile}&quot;,&#xd;
                &quot;spouse_name&quot;: &quot;mouni&quot;,&#xd;
                &quot;spouse_wants_life_insurance&quot;: &quot;false&quot;,&#xd;
                &quot;urc_details&quot;: {&#xd;
                        &quot;member_has_urc_code&quot;: &quot;false&quot;,&#xd;
                        &quot;urc_code&quot;: &quot;&quot;,&#xd;
                        &quot;urc_registration_proof&quot;: &quot;&quot;&#xd;
                }&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178414723&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerDDE</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

vars.put(&quot;spouse_mobile&quot;, randomMobileNumber);


//// Function to generate a valid passport number (for demonstration purposes)
//String generateValidPassport() {
//    // Replace this with a valid passport format
//    // Example format: A12345678
//    // A - Uppercase letter, 1-9 - Digits
//    String validFormat = &quot;A12345678&quot;;
//
//    StringBuilder passportNumber = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (c == &apos;A&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
//        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
//            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return passportNumber.toString();
//}
//
//// Generate a valid passport number
//String validPassport = generateValidPassport();
//
//vars.put(&quot;rand_passport_no&quot;,validPassport);
//
//// Print or use the generated valid passport number
//log.info(&quot;Valid Passport ID: &quot; + validPassport);
//
//// Function to generate a valid voter ID (for demonstration purposes)
//String generateValidVoterID() {
//    // Replace this with a valid voter ID format
//    // Example format: ABC1234567
//    // ABC - Uppercase letters, 1234567 - Digits
//    String validFormat = &quot;ABC1234567&quot;;
//
//    StringBuilder voterID = new StringBuilder();
//    Random random = new Random();
//
//    for (char c : validFormat.toCharArray()) {
//        if (Character.isLetter(c)) {
//            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
//        } else if (Character.isDigit(c)) {
//            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
//        }
//    }
//
//    return voterID.toString();
//}
//
//// Generate a valid voter ID
//String validVoterID = generateValidVoterID();
//
//// Print or use the generated valid voter ID
//log.info(&quot;Valid Voter ID: &quot; + validVoterID);
//vars.put(&quot;rand_voter_id&quot;,validVoterID);



// Define the character set
String characterSet = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;

// Define the length of the generated number
int numberLength = 10; // You can change this to your desired length

// Create a random object
Random random = new Random();

// Generate the random number
StringBuilder randomNumber = new StringBuilder();
for (int i = 0; i &lt; numberLength; i++) {
    int index = random.nextInt(characterSet.length());
    char randomChar = characterSet.charAt(index);
    randomNumber.append(randomChar);
}

// Print the generated number
log.info(&quot;Generated Number: &quot; + randomNumber.toString());

// Set the generated number as a JMeter variable (if needed)
vars.put(&quot;spouse_kyc_document_id&quot;, randomNumber.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_4th_Call_DDE_${__threadGroupName}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178417937&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateInsuranceNomineeAndAppointeeDetails_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
                &quot;borrower_nominee_details&quot;: {&#xd;
                        &quot;borrower_nominee_date_of_birth&quot;: &quot;31 Dec 1989&quot;,&#xd;
                        &quot;borrower_nominee_full_name&quot;: &quot;${borrower_name}&quot;,&#xd;
                        &quot;borrower_nominee_gender&quot;: &quot;FEMALE&quot;,&#xd;
                        &quot;borrower_nominee_type&quot;: &quot;BORROWER&quot;,&#xd;
                        &quot;nominee_relationship_with_borrower&quot;: &quot;DAUGHTER&quot;&#xd;
                },&#xd;
                &quot;borrower_nominee_same_as_co_borrower&quot;: &quot;true&quot;,&#xd;
                &quot;borrower_nominee_same_as_spouse&quot;: &quot;true&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;spouse_nominee_same_as_borrower&quot;: &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178419690&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateInsuranceNomineeAndAppointeeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEQuestionnaire_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178422784&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEQuestionnaire</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="question_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[1].question_list..question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="answer_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[1].question_list[0].answer_list[0].answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import org.json.JSONArray;
import org.json.JSONObject;
import java.util.ArrayList;
import java.util.List;

// Extract the response JSON
String response = prev.getResponseDataAsString();
JSONObject jsonResponse = new JSONObject(response);

// Create the JSON array for questionnaire_activity_list
JSONArray questionnaireActivityList = new JSONArray();

// Extract questionnaire data
JSONArray questionnaireList = jsonResponse.getJSONArray(&quot;mapped_questionnaire_list&quot;);

for (int i = 0; i &lt; questionnaireList.length(); i++) {
    JSONObject questionnaire = questionnaireList.getJSONObject(i);
    JSONArray questions = questionnaire.getJSONArray(&quot;question_list&quot;);

    // Create the questionnaire_activity entry
    JSONObject questionnaireActivity = new JSONObject();
    questionnaireActivity.put(&quot;questionnaire_activity&quot;, questionnaire.getString(&quot;questionnaire_activity&quot;));

    // Create the questionnaire_list
    JSONArray questionnaireListJson = new JSONArray();

    for (int j = 0; j &lt; questions.length(); j++) {
        JSONObject question = questions.getJSONObject(j);
        JSONArray answerList = question.getJSONArray(&quot;answer_list&quot;);

        String selectedAnswerId = null;

        for (int k = 0; k &lt; answerList.length(); k++) {
            JSONObject answer = answerList.getJSONObject(k);

            if (answer.getBoolean(&quot;is_default&quot;)) {
                selectedAnswerId = answer.getString(&quot;answer_master_id&quot;);
            }
        }

        if (selectedAnswerId != null) {
            // Create the questionnaire_entry
            JSONObject questionnaireEntry = new JSONObject();
            questionnaireEntry.put(&quot;answer_id&quot;, selectedAnswerId);
            questionnaireEntry.put(&quot;question_id&quot;, question.getString(&quot;question_master_id&quot;));

            questionnaireListJson.put(questionnaireEntry);
        }
    }

    // Add the questionnaire_list to the questionnaire_activity entry
    questionnaireActivity.put(&quot;questionnaire_list&quot;, questionnaireListJson);

    // Add the questionnaire_activity entry to the questionnaire_activity_list
    questionnaireActivityList.put(questionnaireActivity);
}

// Store the questionnaire_activity_list in a JMeter variable
vars.put(&quot;questionnaire_activity_list&quot;, questionnaireActivityList.toString());
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveDDEQuestionnaireResponse_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;questionnaire_activity_list&quot;: [&#xd;
            {&#xd;
                &quot;questionnaire_list&quot;: [&#xd;
                    {&#xd;
                        &quot;answer_id&quot;: &quot;${answer_master_id}&quot;,&#xd;
                        &quot;question_id&quot;: &quot;${question_master_id}&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;questionnaire_activity&quot;: &quot;LIFE_INSURANCE_COBORROWER_FEMALE&quot;&#xd;
            }&#xd;
        ],&#xd;
                &quot;task_sub_type&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;task_type&quot;: &quot;NTB&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DDE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178433332&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/saveDDEQuestionnaireResponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_4th_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
               &quot;id&quot; : &quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_5th_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_4th_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;CO_BORROWER&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421179&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;CO_BORROWER&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAssetAndAmenitiesDetails_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178441740&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAssetAndAmenitiesDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateAssetsAndAmenities_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot; : {&#xd;
    &quot;amenities&quot; : [ {&#xd;
      &quot;amenities_code&quot; : &quot;ELECTRICITY&quot;,&#xd;
      &quot;amenitiesValue&quot; : &quot;NO&quot;&#xd;
    } ],&#xd;
    &quot;assets&quot; : [ {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;CEILING_FAN&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Ceiling Fan&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;TWO_WHEELER&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Two Wheeler&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;LPG_STOVE&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;LPG Stove&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;COMPUTER_LAPTOP&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Computer / Laptop&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;COLOR_TV&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Color TV&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;4&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;WASHING_MACHINE&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Washing Machine&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;4&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;FOUR_WHEELER&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Four Wheeler&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;REFRIGERATOR&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Refrigerator&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;AGRICULTURE_LAND&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Agriculture Land (in Acers)&quot;&#xd;
    } ],&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;task_type&quot; : &quot;NTB&quot;,&#xd;
    &quot;task_category&quot; : &quot;LOS&quot;,&#xd;
    &quot;task_sub_type&quot; : &quot;DETAILED_DATA_ENTRY&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;ASSETS_AND_AMENITIES&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178444439&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateAssetsAndAmenities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getReferencesDetails_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178444439&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getReferencesDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateReferences_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;purchase_reference&quot; : [ {&#xd;
      &quot;address&quot; : &quot;vsgsgsg&quot;,&#xd;
      &quot;comments&quot; : &quot;&quot;,&#xd;
      &quot;contact_no&quot; : &quot;9546434324&quot;,&#xd;
      &quot;feedback&quot; : &quot;POSITIVE&quot;,&#xd;
      &quot;full_name&quot; : &quot;Hshshhs&quot;,&#xd;
      &quot;isEdited&quot; : false,&#xd;
      &quot;localId&quot; : &quot;1700133024800&quot;,&#xd;
      &quot;reference_id&quot; : &quot;&quot;,&#xd;
      &quot;reference_type&quot; : &quot;purchase_reference&quot;,&#xd;
      &quot;referenceTypeStr&quot; : &quot;Purchase Reference&quot;&#xd;
    } ],&#xd;
    &quot;seller_reference&quot; : [ {&#xd;
      &quot;address&quot; : &quot;svsgsgsg&quot;,&#xd;
      &quot;comments&quot; : &quot;&quot;,&#xd;
      &quot;contact_no&quot; : &quot;9494645544&quot;,&#xd;
      &quot;feedback&quot; : &quot;POSITIVE&quot;,&#xd;
      &quot;full_name&quot; : &quot;Nshdhsh&quot;,&#xd;
      &quot;isEdited&quot; : false,&#xd;
      &quot;localId&quot; : &quot;1700133036729&quot;,&#xd;
      &quot;reference_id&quot; : &quot;&quot;,&#xd;
      &quot;reference_type&quot; : &quot;seller_reference&quot;,&#xd;
      &quot;referenceTypeStr&quot; : &quot;Seller Reference&quot;&#xd;
    } ]&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178444439&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateReferences</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanUtilizationDetails_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : &#xd;
	{&#xd;
		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
	},&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178444439&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanUtilizationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanUtilization_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;livestock_purchase_details_list&quot; : [ ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;loan_utilization_products_list&quot; : [ ],&#xd;
    &quot;machinery_details_list&quot; : [ {&#xd;
      &quot;cost_per_unit&quot; : &quot;79&quot;,&#xd;
      &quot;isEdited&quot; : false,&#xd;
      &quot;name&quot; : &quot;Bsshshj&quot;,&#xd;
      &quot;number_of_units&quot; : &quot;7&quot;,&#xd;
      &quot;typeStr&quot; : &quot;&quot;,&#xd;
      &quot;utilization_type_code&quot; : &quot;&quot;,&#xd;
      &quot;utilization_type_value&quot; : &quot;&quot;&#xd;
    } ],&#xd;
    &quot;others_details_list&quot; : [ ],&#xd;
    &quot;raw_material_details_list&quot; : [ ],&#xd;
    &quot;response_status&quot; : {&#xd;
      &quot;code&quot; : &quot;&quot;,&#xd;
      &quot;message&quot; : &quot;&quot;,&#xd;
      &quot;status&quot; : &quot;&quot;&#xd;
    }&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178444439&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanUtilization</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskDetailsMfi_5th_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
           &quot;id&quot; : &quot;${task_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskDetailsMfi</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_6th_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178421157&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_5th_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178393015&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_3rd_Call_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
                &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;step_code&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
                &quot;sub_step_code&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
              &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
               &quot;instance_id&quot; : &quot;${instance_id}&quot;,&#xd;
               &quot;is_rejected&quot; : &quot;false&quot;,&#xd;
               &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
               &quot;stage_name&quot; : &quot;DETAILED_DATA_ENTRY&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}
</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
             &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1stCall_DDE_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Schedule PD - IND NTB" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1stCall_SchedulePD_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Office ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.vtc_list[0].office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_${__threadGroupName}_SchedulePD_${__threadGroupName}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
   	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;500&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;SCHEDULED_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While -- Check Task ID" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${task_id}&quot; == &quot;&quot;,)}
</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_${__threadGroupName}_SchedulePD_${__threadGroupName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
   	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;500&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;SCHEDULED_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMeetingCenterLists_1stCall_${__threadGroupName}_SchedulePD" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMeetingCenterLists</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_2nd_Call_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;SCHEDULED_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId_1st_Call_${__threadGroupName}_Scheduled_PD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1stCall_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_2ndCall_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_3rdCall_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_4thCall_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_5thCall_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getScheduleBetTaskDetails_1stCall_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;request&quot; : {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;task_id&quot; : &quot;${task_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getScheduleBetTaskDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEmployeeListByRoleAndOffice_1stCall_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;role_code&quot; : &quot;CFE&quot;,&#xd;
    &quot;office_id&quot; : &quot;${office_id}&quot;,&#xd;
    &quot;group_type&quot; : &quot;..&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEmployeeListByRoleAndOffice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CFE Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cfe_emp_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_list[0].employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CFE User ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cfe_user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_list[0].user_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId_2nd_Call_${__threadGroupName}_Scheduled_BET" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	   &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTimeSlotsBasedOnUser_1st_Call_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_user_id&quot; : &quot;${empId}&quot;,&#xd;
      &quot;schedule_date&quot;: &quot;${future_date}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTimeSlotsBasedOnUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Future Date" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;


SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;dd-MM-yyyy&quot;);

Calendar currentDate = Calendar.getInstance();


currentDate.add(Calendar.YEAR, 1);


String futureDate = dateFormat.format(currentDate.getTime());


vars.put(&quot;future_date&quot;, futureDate);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitScheduleBet_1st_Call_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
      &quot;bet_date&quot; : &quot;${formattedDate}&quot;,&#xd;
    &quot;bet_end_time&quot; : &quot;10:30 AM&quot;,&#xd;
    &quot;bet_start_time&quot; : &quot;10:00 AM&quot;,&#xd;
    &quot;co_employee_id&quot; : &quot;${cfe_emp_id}&quot;,&#xd;
    &quot;employee_name&quot; : &quot;Finone CFE&quot;,&#xd;
    &quot;employee_user_id&quot; : &quot;${cfe_user_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;schedule_notes&quot; : &quot;&quot;,&#xd;
    &quot;task_id&quot; : &quot;${task_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitScheduleBet</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BET Start Date" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

Date today = new Date();

Calendar calendar = Calendar.getInstance();
calendar.setTime(today);

calendar.add(Calendar.DAY_OF_MONTH, 1);

SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;dd-MM-yyyy&quot;);
String resultDate = dateFormat.format(calendar.getTime());

vars.put(&quot;formattedDate&quot;, resultDate);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_3rd_Call_${__threadGroupName}_SchedulePD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;SCHEDULED_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login-CFE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;auth_type&quot;: &quot;MPIN&quot;,&#xd;
    &quot;auth_value&quot;: &quot;cXpJdGdMTUh5ek9VRXFYcVBoeE13MDY0blhJS1NDRjBscUFvK2Y5SktCZUlGRGJWNW1nV3JWNUtp\nLzlWRytyUDZvV3lqNi9zeFZjVzk3YnFhZGt0cmpMSWlOaGV6V29RQlJYK1BhZ3RsM2tSdGdRVFph\nTTZ2NmdicXEyS0MwNVI3bGN3WGIxeVl3SUFlK1NXR3JEbmRtNE1yOVpjeXFQTkpKN3RaYk9ZV2Qv\ndzRuQ0pYaVpRSTlEaHZYRG9kbkhtOHEvZE5LMTBXWHkvRWNjcTk3aWszRkliU0J4K2pJb0JCVktl\ndjhmdFdnSXkzNldrYmR5dmNKUTdneGxMZ1F1Z0ZURlYxNXBFeU12MVhVTlJxZSs5aHBLUSt2a2Ni\nS1VlTmtZQVpyZG4rOTRWSGMwWmlvWDNGYzhsajhhSi9rWWd4VUNwM1Z2NTlBNWhKcUR3bFBBZ1pB\nPT0=\n&quot;,&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;inventory_details&quot;: {&#xd;
      &quot;apk_version&quot;: &quot;v3.2.0_243&quot;,&#xd;
      &quot;device_manufacturer&quot;: &quot;HUAWEI&quot;,&#xd;
      &quot;device_name&quot;: &quot;JSN-L42&quot;,&#xd;
      &quot;device_unique_identifier&quot;: &quot;EMP00014__c195200c2d0abb56&quot;,&#xd;
      &quot;mobile_numbers&quot;: &quot;9080142811&quot;,&#xd;
      &quot;os_name&quot;: &quot;Android&quot;,&#xd;
      &quot;os_version&quot;: &quot;10&quot;,&#xd;
      &quot;sim_identifiers&quot;: &quot;&quot;,&#xd;
      &quot;version_code&quot;: &quot;243&quot;&#xd;
    },&#xd;
    &quot;primary_number_otp&quot;: &quot;131372&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;id&quot; : &quot;${cfe_user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.office_details[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Accept PD - IND NTB" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUserDetails_1stCall_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;device_id&quot;: null,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;sim_number&quot;: null,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;locale&quot;: null,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1692630425001&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
        &quot;user_id&quot;: &quot;${cfe_user_id}&quot;,&#xd;
        &quot;id&quot;: &quot;${cfe_user_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="CFE userId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Handle value" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">handle_value</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.handle_details[1].handle_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login  for CFE User" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_ip&quot;: &quot;&quot;,&#xd;
        &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SYSTEM&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;&#xd;
    },&#xd;
     &quot;request&quot;: {&#xd;
        &quot;handle_type&quot;: &quot;USERNAME&quot;,&#xd;
        &quot;handle_value&quot;: &quot;${handle_value}&quot;,&#xd;
        &quot;auth_type&quot;: &quot;PASSWORD&quot;,&#xd;
        &quot;auth_value&quot;: &quot;Y25DNS92Y1Z6czhPKzhZcEhydFN2QnExMEJPUUE5SnlLQjJudkJjU1h5dVdhK0JNd3pRSkV1UjRnZVpCTmxxTVA0K0NXU3pCYmMwZHNMVHg2SFZYdEhEYVR3RW9uMENBSSt6c0dhd2QvREJLdVg2RzNSaW9GbWRDR0xrU3A5ekVlN1podjB0VWllSC9wQ3pHM0lUb0Z5NVoybUxWTDErcTlZM3poVDRJM0NTNmZXcFhvVlRCYzJtbm54M0NHWUxWOWsvM2MvVmxTd0JRY3dUSHR4OElQbC9FcmkzUWdaeHB2N2t4T2JvSUY2YlZ0d1JnVGF2RHpHSm5sRE03Tmk3c25UUzlTSXZCdkRIbTRxeFB5NzJ0Y1RFUnlmY0orV2x5M3hEZmxvWElVNEwvRHpWSks1dEdJUDdUYXYwM1M5ZjRqRFZpQ0plcjhmRkd5ZzZMVG1jeXBRPT0&quot;&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="User ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login - QA/PAT/UAT_OTP" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot;: {&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;handle_value&quot;: &quot;${handle_value}&quot;,&#xd;
    &quot;mobile_details&quot;: {},&#xd;
    &quot;otp&quot;: &quot;123456&quot;&#xd;
  },&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;100&quot;,&#xd;
    &quot;channel_code&quot;: &quot;CUSTOMER_APP&quot;,&#xd;
    &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot;: &quot;10.0.2.15&quot;,&#xd;
    &quot;device_id&quot;: &quot;Ab093a9e4d4cf3e5b&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;VALIDATE_OTP&quot;,&#xd;
    &quot;locale&quot;: &quot;&quot;,&#xd;
    &quot;location&quot;: &quot;12.918865,77.67009&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;5.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;sim_number&quot;: &quot;N/A&quot;,&#xd;
    &quot;stan&quot;: &quot;1709548983568&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1709548983573&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="RandomTimer.range">0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1st_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
   	      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${cfe_user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;500&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ACCEPT_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;,&#xd;
            &quot;ETB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id Based on Loan App Id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[15].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While -- Check Task ID" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${task_id}&quot; == &quot;&quot;,)}
</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_${__threadGroupName}_SchedulePD_${__threadGroupName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
   	      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${cfe_user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;500&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ACCEPT_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;,&#xd;
            &quot;ETB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1stCall_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_2ndCall_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_2nd_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ACCEPT_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_3rd_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId_1st_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${cfe_user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_4th_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_5th_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getScheduleBetTaskDetails_1st_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;group_id&quot; : &quot;&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;task_id&quot; : &quot;${task_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getScheduleBetTaskDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_6th_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitAcceptBetTask_1st_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;group_id&quot; : &quot;&quot;,&#xd;
    &quot;isAcceptbetCanceled&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;accept_notes&quot; : &quot;&quot;,&#xd;
    &quot;task_id&quot; : &quot;${task_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitAcceptBetTask</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_3rd_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ACCEPT_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_2nd_Call_${__threadGroupName}_AcceptPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${session_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Conduct PD - IND NTB " enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1stCall_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;employee_id&quot; : &quot;${empId}&quot;,&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_ConductPD" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;CONDUCT_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;,&#xd;
            &quot;ETB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While -- Check Task ID" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${task_id}&quot; == &quot;&quot;,)}
</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_${__threadGroupName}_SchedulePD_${__threadGroupName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;CONDUCT_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;,&#xd;
            &quot;ETB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1stCall_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_2ndCall_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_2nd_Call_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;CONDUCT_PD&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;,&#xd;
            &quot;ETB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_3rd_Call_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_4th_Call_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_5th_Call_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_7thCall_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1stCall_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;stage&quot; : &quot;&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_6thCall_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_8th_Call_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_9th_Call_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Conduct PD - QDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_1stCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1stCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
         &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
    &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
    &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_3rd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_BET&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_1st_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
         &quot;property_key&quot; : &quot;borrower.min.age&quot;,&#xd;
    &quot;service&quot; : &quot;LOS&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
         &quot;property_key&quot; : &quot;borrower.max.age&quot;,&#xd;
    &quot;service&quot; : &quot;LOS&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVtc_1st_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;pincode&quot; : &quot;${pincode}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1st_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="voterIdAuthentication_1stCall_ConductPD-QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;consent&quot; : &quot;Y&quot;,&#xd;
    &quot;epic_no&quot; : &quot;${voterId}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/voterIdAuthentication</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument _1stCall_Conduct PD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyMobileNumber_1stCall_${__threadGroupName}_ConductPD_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;INITIATE&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CONSENT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
			&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyMobileNumber</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="otp_ref_key" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">otp_ref_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.otp_reference_key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createorUpdateBorrowerKycDetails_1st_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
			&quot;is_product_consent_captured&quot; : &quot;true&quot;,&#xd;
          &quot;is_other_product_consent_captured&quot; : &quot;true&quot;,&#xd;
		&quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;31 Dec 1989&quot;,&#xd;
		 &quot;dsa&quot; : &quot;null&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		 &quot;is_dsa_applicable&quot; : &quot;false&quot;,&#xd;
           &quot;is_ovd_same_as_poi&quot; : &quot;true&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;12-10-1990&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;${marital_status}&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${mobile_number}&quot;,&#xd;
			&quot;name&quot;: &quot;${borrower_name}&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;45&quot;,&#xd;
		&quot;marital_status&quot;: &quot;DIVORCED&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${mobile_number}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Sep 2024&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		 &quot;village_proceed_reason&quot; : &quot;VALID_VILLAGE&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_4th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_BET&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDetailsFromVtcId_1st_Call_ConductPD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;vtc_id&quot;: &quot;${vtc_id}&quot;&#xd;
	&#xd;
	 }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDetailsFromVtcId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanAppPersonalDetails_1st_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			 &quot;address_line_1&quot; : &quot;bsbsbs&quot;,&#xd;
      &quot;address_line_2&quot; : &quot;shhshss&quot;,&#xd;
      &quot;district&quot; : &quot;BANGALORE&quot;,&#xd;
      &quot;kyc_pincode&quot; : &quot;799001&quot;,&#xd;
      &quot;kyc_vtc&quot; : &quot;NAGAON&quot;,&#xd;
      &quot;kyc_vtc_id&quot; : &quot;223647&quot;,&#xd;
      &quot;landmark&quot; : &quot;&quot;,&#xd;
      &quot;kyc_pincode_optional&quot; : &quot;&quot;,&#xd;
      &quot;kyc_vtc_optional&quot; : &quot;&quot;,&#xd;
      &quot;state&quot; : &quot;Karnataka&quot;&#xd;
		},&#xd;
		 &quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    }, &#xd;
		&quot;borrower_id&quot;: &quot;${borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;,&#xd;
		&quot;is_borrower_has_pan&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_3rd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument _2nd_Call_Conduct PD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanAppConsent_1stCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;consent_captured&quot; : &quot;true&quot;,&#xd;
    &quot;consent_document&quot; : {&#xd;
      &quot;code&quot; : &quot;8cb554a6-ebed-4408-a0cc-1d1ef0a95620&quot;,&#xd;
      &quot;document_name&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;document_name_value&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;document_type_code&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;file_size&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;consent_type&quot; : &quot;physical&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppConsent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_5th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_BET&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanApp_1stCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;is_rejected&quot; : &quot;false&quot;,&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;loan_purpose&quot; : &quot;OTHERS&quot;,&#xd;
    &quot;loan_term&quot; : &quot;12&quot;,&#xd;
    &quot;number_of_installments&quot; : &quot;12&quot;,&#xd;
    &quot;reject_reason&quot; : &quot;&quot;,&#xd;
    &quot;requested_amount&quot; : &quot;10000&quot;,&#xd;
    &quot;term_unit&quot; : &quot;Months&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanApp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_1stCall_ConductPD-QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_${__threadGroupName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_1stCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition"></stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_1stCall_ConductPD-QDE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                  <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="retryServiceCall_${__threadGroupName}_EligibilitySummary" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;${service_name_code}&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">BORROWER</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Customer ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_1stCall_ConductPD-QDE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                  <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1149187101">SUCCESS</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                    <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1stCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
        &quot;sub_step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_6th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_3rd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
         &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
    &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_4th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_5th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &quot;step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
        &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_4th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
         &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
         &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_5th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
          &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
    &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;CO_BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_7th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_6th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_8th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_BET&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_3rd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;property_key&quot; : &quot;borrower.max.age&quot;,&#xd;
    &quot;service&quot; : &quot;LOS&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_7th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVtc_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;pincode&quot; : &quot;${pincode}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_8th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disabled - voterIdAuthentication_1stCall_ConductPD-QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;consent&quot; : &quot;Y&quot;,&#xd;
    &quot;epic_no&quot; : &quot;${voterId}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/voterIdAuthentication</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument _3rd_Call_Conduct PD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument _4th_Call_Conduct PD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verifyMobileNumber_1stCall_${__threadGroupName}_ConductPD_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${timestamp}${__RandomString(42,1234567890,)}&quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;session_token&quot; : &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;INITIATE&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CONSENT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
			&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/verifyMobileNumber</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

Random rand = new Random();
int prefix = 90; // Prefix for Indian mobile numbers
long randomNumber = (long)(Math.random() * 90000000L) + 10000000L;

String randomMobileNumber = prefix + String.valueOf(randomNumber);

props.put(&quot;randomMobile&quot;, randomMobileNumber);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="otp_ref_key" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">otp_ref_key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.otp_reference_key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createorUpdateBorrowerKycDetails_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;otp_reference_key&quot; : &quot;${otp_ref_key}&quot;,&#xd;
		&quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
		&quot;borrower_live_image&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;document_type&quot;: &quot;borrower_live_image&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;borrower_name&quot;: &quot;${borrower_name}&quot;,&#xd;
		&quot;borrower_type&quot;: &quot;CO_BORROWER&quot;,&#xd;
		&quot;consent_captured&quot;: &quot;true&quot;,&#xd;
		&quot;consent_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;&quot;,&#xd;
			&quot;document_name&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;document_type&quot;: &quot;PHYSICALCONSENT&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;consent_type&quot;: &quot;physical&quot;,&#xd;
		&quot;customer_kyc_document&quot;: &quot;VOTER_ID&quot;,&#xd;
		&quot;date_of_birth&quot;: &quot;31 Dec 1989&quot;,&#xd;
		 &quot;dsa&quot; : &quot;null&quot;,&#xd;
		&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
		&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
		 &quot;is_dsa_applicable&quot; : &quot;false&quot;,&#xd;
           &quot;is_ovd_same_as_poi&quot; : &quot;true&quot;,&#xd;
		&quot;kyc_document_details&quot;: {&#xd;
			&quot;date_of_birth&quot;: &quot;12-10-1990&quot;,&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;kyc_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;father_name&quot;: &quot;Vijairaj Samdariya&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;,&#xd;
			&quot;gender&quot;: &quot;FEMALE&quot;,&#xd;
			&quot;marital_status&quot;: &quot;&quot;,&#xd;
			&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
			&quot;name&quot;: &quot;Gaurav Vijairaj Samdariya&quot;,&#xd;
			&quot;ovd&quot;: &quot;1302, Dr. Annie Besant Road, MumbaiCity, Maharashtra&quot;&#xd;
		},&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;loan_product_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
		&quot;loan_product_id&quot;: &quot;45&quot;,&#xd;
		&quot;marital_status&quot;: &quot;DIVORCED&quot;,&#xd;
		&quot;mobile_number&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;mobile_owner&quot;: &quot;FATHER&quot;,&#xd;
		&quot;mobile_verification_failure_reason&quot;: &quot;&quot;,&#xd;
		&quot;mobile_verified&quot;: &quot;false&quot;,&#xd;
		&quot;ovd_district&quot;: &quot;BANGALORE&quot;,&#xd;
		&quot;ovd_landmark&quot;: &quot;&quot;,&#xd;
		&quot;ovd_line1&quot;: &quot;ucjcjcjcjv&quot;,&#xd;
		&quot;ovd_line2&quot;: &quot;jccjjcjcjc&quot;,&#xd;
		&quot;ovd_not_bio_reason&quot;: &quot;CUSTOMER_DO_NOT_HAVE_AADHAAR&quot;,&#xd;
		&quot;ovd_optional_pincode&quot;: &quot;&quot;,&#xd;
		&quot;ovd_optional_vtc&quot;: &quot;&quot;,&#xd;
		&quot;ovd_pincode&quot;: &quot;${pincode}&quot;,&#xd;
		&quot;ovd_state&quot;: &quot;Karnataka&quot;,&#xd;
		&quot;ovd_vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;ovd_vtc_name&quot;: &quot;${name}&quot;,&#xd;
		&quot;phone&quot;: &quot;${__P(randomMobile)}&quot;,&#xd;
		&quot;poa_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${poaDocs}&quot;,&#xd;
			&quot;document_id&quot;: &quot;${rand_passport_no}&quot;,&#xd;
			&quot;document_name&quot;: &quot;PASSPORT&quot;,&#xd;
			&quot;document_type&quot;: &quot;poa_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;15 Sep 2024&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document&quot;: {&#xd;
			&quot;dms_document_code&quot;: &quot;${kycDoc}&quot;, &#xd;
			&quot;document_id&quot;: &quot;${rand_voter_id}&quot;,&#xd;
			&quot;document_name&quot;: &quot;VOTER_ID&quot;,&#xd;
			&quot;document_type&quot;: &quot;poi_document&quot;,&#xd;
			&quot;document_valid_till&quot;: &quot;&quot;,&#xd;
			&quot;file_number&quot;: &quot;1&quot;&#xd;
		},&#xd;
		&quot;poi_document_id&quot;: &quot;&quot;,&#xd;
		&quot;poi_document_name&quot;: &quot;null&quot;,&#xd;
		 &quot;relationship_with_borrower&quot; : &quot;DAUGHTER&quot;,&#xd;
		&quot;spouse_name&quot;: &quot;Jvvvuvvuvu&quot;,&#xd;
		&quot;task_type&quot;: &quot;NTB&quot;,&#xd;
		 &quot;village_proceed_reason&quot; : &quot;VALID_VILLAGE&quot;,&#xd;
		&quot;vtc_id&quot;: &quot;${vtc_id}&quot;,&#xd;
		&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerKycDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - borrower Id " enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_app_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_9thCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_BET&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDetailsFromVtcId_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;vtc_id&quot; : &quot;223647&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDetailsFromVtcId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanAppPersonalDetails_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;address_details&quot;: {&#xd;
			 &quot;address_line_1&quot; : &quot;bsbsbs&quot;,&#xd;
      &quot;address_line_2&quot; : &quot;shhshss&quot;,&#xd;
      &quot;district&quot; : &quot;BANGALORE&quot;,&#xd;
      &quot;kyc_pincode&quot; : &quot;799001&quot;,&#xd;
      &quot;kyc_vtc&quot; : &quot;NAGAON&quot;,&#xd;
      &quot;kyc_vtc_id&quot; : &quot;223647&quot;,&#xd;
      &quot;landmark&quot; : &quot;&quot;,&#xd;
      &quot;kyc_pincode_optional&quot; : &quot;&quot;,&#xd;
      &quot;kyc_vtc_optional&quot; : &quot;&quot;,&#xd;
      &quot;state&quot; : &quot;Karnataka&quot;&#xd;
		},&#xd;
		  &quot;business_address_details&quot;: {&#xd;
      &quot;bus_addr_address_line_1&quot;: &quot;ctgcgvhv&quot;,&#xd;
      &quot;bus_addr_address_line_2&quot;: &quot;hvhvhbub&quot;,&#xd;
      &quot;bus_addr_district&quot;: &quot;NORTH WEST DELHI&quot;,&#xd;
      &quot;bus_addr_landmark&quot;: &quot;&quot;,&#xd;
      &quot;bus_addr_pincode&quot;: &quot;110085&quot;,&#xd;
      &quot;bus_addr_state&quot;: &quot;Delhi&quot;,&#xd;
      &quot;bus_addr_vtc&quot;: &quot;Rohini Sector 16&quot;,&#xd;
      &quot;bus_addr_vtc_id&quot;: &quot;53390&quot;&#xd;
    },  &#xd;
		&quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;, &#xd;
		&quot;is_current_address_same_as_ovd&quot;: &quot;false&quot;,&#xd;
		&quot;is_proof_of_current_address_same_as_poi&quot;: &quot;true&quot;,&#xd;
		&quot;kyc_type&quot;: &quot;OVD_OTHER_THAN_BIOMETRIC&quot;,&#xd;
		&quot;latitude&quot;: &quot;12.9187573&quot;,&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
		&quot;longitude&quot;: &quot;77.6699482&quot;,&#xd;
		&quot;same_as_borrower_current_address&quot;: &quot;false&quot;,&#xd;
		&quot;is_borrower_has_pan&quot;: &quot;false&quot;&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppPersonalDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_9th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		 &quot;version&quot; : &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument _5th_Call_Conduct PD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAilBMVEUAmQD///8AlwAAlAAAkQAAkgAAlQAAjwDi7+JWrVY/pj/T59Ov1a8kniTW6db1/PVns2e/3b9RrVF7vHu017Sm0KaOxY6Tx5P5/PlzuXNesF6gzaAbnBvw9/DJ4skVnhU5pDlIqEiEwISby5stoS13undttm3F4MXd7d1bsFs5ozno8ugAiQC62rrs7kwQAAAL2ElEQVR4nOWd6XbCNhCFbS02Zgt7zBpwSCClvP/r1cZAQN5k68oWzf3VntMSPrTNSLNYtnb5x81kORsvvHbv48OyrI+PXttbjGfLyebo6//zls4Pb53fB3vKOKUOIcR6VPjvDqWc0f3g/dzS+SV0EbYmwZbzkMwqUkjK+TaY6MLUQdiaDiinxWxPnOH/MZjqoEQT+sM5KUv3QEnmQ/TShBK+dT1Wke6XknndN+SXAhKePVcR7wbpemfc10IRduaqo/cMyeYd0DeDEPrTHsfhXSF5bwpZkgDCU8AoGC8WZcHJAML+gqGH71eELfoNE3Z2Gvlixp3iglQi7OvmuzIqjaMCYcurgS9m9BSMncqE/ldNfDHjV+V9tSrhEn48FDDyZa2EnZWe8yFPdFVty6lC6M9Z7XyR2LzKVK1AOJRw+vSIOMM6CBfNDGAsttBOuCFNDWAsQjZ6CYMmBzAWCzQSrvf1b6FJ0f1aF+Gh5jMwS4Qf9BDOmp+hN7GZDsIfE2boTfQHTrjumTFDbyI92cUoSXgEXsJgROgRSbgxZwn+ismdjFKEXbdpmlS5XRTh0sQRjMRkPCoJQoNOCVEyp0YxoQGGWrYkTLhCwoA3TZErXohYRGjwFI1VOFELCI3dZH5VtN3kE3bNBwwR8w+NXMKNmeegKDf36M8jPL7CCEZieQZcDuHaJGciXzTHDM8hNMybyBPpVSH0XgcwRPTKE85eZ45GopnHYhahkf5SnjJ9qQzCtdm2Wpp4xm6TQbh/pUUYi+zLEAavtQhj0XQjPJXw5RZhrPSlmEr4elM0FpElXLwsYdrLVArh8DXnaCSW8r6YJPSdpr+ngpzkK3GScP6qczQSmRcTdl53jkZiiXCGBOFKyx++xK0z12WOteqtrPAfGZUJAi+vVRHhEn3Wh2iM9X6C5XnTerCr/FN/uJz/wzkak4rXNgKhj7RHIzjyk59s0F8qB04L4sJmIxB+of4Ycbi7mx1k4kP94cIF7t/kK4+whdlmCGejzzIRTG+fBLc62POceSbE+PXOrGxESKguQY2j4O8/EfYxQ+hWiyOcoe4u2VM86hPhDrMK3Yr5EqctZqqSXRYh6rCvSgh753o69h8JQUOoQGhPIDP1aRAfCEGrUIkQNI8eV+IDIcwtVCHE/M6PjuIv4QlmcisR2gfE92C/psYvYQCznbII163O5jAcHjadU95v8AnYUcnvrdSd0Md5TQnC02H5NbIYC/2JWMx1RsEw6zllBPit2f1MvhNOcWbTI+HbYTZyWJQHLPxHkVm+66baBmvAj02nCcKe+qfedCP0h0HPzfMCCWVBGiNint5fo26EHaDbdCE8frZlEi6d1DdqwDTlHYEQeTvj+p2AMFnXlqcEUn6qW+H3G5sbIfZ2plQwMeklZuob4OuwZ8Jzkw8VKS+4AOuDnp8Im33wJYmJOlH/xW9uYkz41nBYCRNzt0+AL3Td0mPCbtOvaY44iIA5RbsPhI1HJdCJQDhQ/0bXaXohBFpsVb/NTiCcAW5tYsvtQjhsepIm73YQ64YO74QGPMZQ4XrugHAw5nfC5gEfLOVYHcS0IjfClgGhJY4Q8QOxk3nrSgh0nCpLvIuHEF4mhoXZmZUlPm1uILN0cCU0YAgtMn4mxBjKNCY0YRkm1uEU8ooRLUQLYuWqS9xLx5CVE5lKFvKSTUFceIzD3L9HV24h4RbxWapiz4A2yNnZXghNWIaihwg58EPxiNCIjUbMXUatnHCrsUwwux/u/q5CvQeHxrdlvxsQ5eUK+wzs2sh5DwkNsGgSsa+w6+nQqrHsPerTKiuReg48ofchYePLkItRoT7wK1HbavoGg7ifAiA0gpf51rHRw4KwUSJs6hP5jfjRgrgp1UQo+06WYjtD727pxqrD7iYJOZSz1VdaNdYh9nKaTqyl/uOQeKNHeYuv4HPSSX/onoJv352lNdN/HLqpLKkaoPc9MrMwjliupAk3sOi9u8jYqiG5QpKwpaOKGFlYHv5TRUkRdhault/as9o6PvZZxYSnZU9Xncm2BYzByFIR4fH7X1fbmdWzPnR99K8kZmknIJqqGH0YQhjqMNIyUWvgkz8t+qPG3zErSv7EPzRclbGqStg09jd+GI1Zh1ehq27VstOQ9pN23jxYDjOLdYCTkD/qOA8FXb0nt/2enlYDize/qFeHTZMh4jBrlhZFCy2L067DLs2R485TGKfAUfTq8C1ylXIThXyVDn2LGvzDAtF24jLDxxGO6/DxC78FSeRgnlH3baGPX8M9TbFYAnEL+mRnWctdW7EShZ42oEGkkybvSx9EtuIggs5pumn4zvsuKu6ooDAmfmz83eImJtyfItJKrMu7RfNvT7HEgBq7jYk3MeL9MBYVCDFv03sz3oAvokKwAiqyzYx3/EhEeOpeI+zvyzu+EbEYkcQDA/G9LrEYRsTTRBLDov4BfOYlnsaImKhITHgNRqRIcHPi2qzocH4mRFQh2ZoTm2glw/UBft01NtEM21sL4TW+1JSthvfhhNcYYVPsNtFJ/AaMoW1OrL6VTHJXT1q/x+qbkG9hJTP0tsqfeM+3MGMhkpFAqP6733NmTMh7upiQTwLktd7znkzIXRNrH9l2X3kMH3LXjDC+xeKj6hmID/mHJtxkJGrlqU+shxzS5vOAky6++ubwmAfcfC63xcXyGOptC55yuZvOx09mOgOuHp7y8RufpiTxOKNcZfS5pgKwLsaqSlQMTYRCq9/qC3UxYLVNyPxUutUzIckSmepGqVDbBHboR8Zuvxwj3yWDodXf8hP1aVA1hi7mvH2cS5ddJWya4EOkHyZqDKHeemLC0Ijotl2JKkMOG6cVijqrL5pEnSiUC3UjDHWajlhuNWSHrT5TK5oBkmZSan2BLLcHwuhDN+8jnlLLjBBK3e17Vt97QMG2lHptoCu3Z8J4LA/Lsbd1olrXkVyX7r3xtJNdxhXQACat5h6obmIK4U1vp1OrdcotKHgRolFYat1ETEJVDqGkEFlB6bUvQXU1VQkhsYkZ9UshOfCqhJA6u1k1aCH1X9UI/RHkzMqsI4wYRCXCIabIfnYtaMRKVCBc/4DM/5x63gg3cVum7/mD3gJUMkJeTXZIXX1Kv9MyJ/N1GjNYOEFuXX1MbwRC3dEyr+WDIH+yA2Z15fdGgPW3IA4j31OZ3uCn7gLb4KKgvwWyRwmhjO6CyTFzyvr97nwF7t9R2KME3WcmdCK4S0Zfn91Np7Vev4Var4+dQ/fza2S5VEM2V2GfGS29gi59dCi7iVOaUhwaI4leQWY801SVTL+nP9Cz6//fd+0P9M4z5E24gqT7H/6BHpb//z6kf6CX7B/oB/x6S7FsT+c/0Je7+WfhUqrSW922e6+DmNJdQYZw/TrzNJH6JkcICPioSSzvMiGPEJtUrU9ubrvFXELIM5B2pfbikSW0l+YjMvFiphyhPTMdkWUehJKEdmC2/cbTze0yhKi+knrECgElCE2eqIVTVI7Q3O2maJORJoRXxQHJzT8myhCa6Utl+ktVCO2jpmpq1UWozLuPPKG9NszTIL0cY7sSoW3/mORqJApkIwhNOjVkTokKhPahVFtDfSJinwEYob3emzBT6V52CZYnNMKEkzDUVAjtTcOVDQmROwWrE9q2jmq/0mJpr0toQlRsVgURJ+V9UAOh7c+bGUY2Lx2JVJHQtjur+jdVukovs6iHMPSoaj4bCZfxlJCEtv+lqz51Gh/7qjJB1Qhtu1U6wakyn1ciSg5IaNv9XQ2MhO2y8jL0E4Zbjm7GkK/aBoMiDMdxoZGRsIXS+EEIbfsUMD1nB2VBMjGxCcJwX5324IcH4b1p5f3zURDCUB35jEMZPMrmisvvLhRhqLPnQiAJdT2x17qCgIS2/db1VEcyHD2vW5j8VUZQwlD+cE54RUpCOZmXj/MvEJowUms6oGUpQzo6mCqYLpnSQRipNQm2nOcmyd7YHMr5NpjooIuki/Ci1vl9sKdRXLdDhNuPS+V5yhndD97PuuAu0koYyz9uJsvZeOG1ex9Rn4KPj17bW4xny8kmO1MBp/8AZ9Kfyp38I8AAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanAppConsent_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;consent_captured&quot; : &quot;true&quot;,&#xd;
    &quot;consent_document&quot; : {&#xd;
      &quot;code&quot; : &quot;8cb554a6-ebed-4408-a0cc-1d1ef0a95620&quot;,&#xd;
      &quot;document_name&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;document_name_value&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;document_type_code&quot; : &quot;PHYSICALCONSENT&quot;,&#xd;
      &quot;file_size&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;consent_type&quot; : &quot;physical&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanAppConsent</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_2nd_Call_ConductPD-QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_${__threadGroupName}_ConductPD-QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;borrower_id&quot;: &quot;${borrower_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_2nd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_2nd_Call_ConductPD-QDE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.scope">all</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                  <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller -- checking service status" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; == &quot;Pending&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="retryServiceCall_${__threadGroupName}_EligibilitySummary" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		  &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
        &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
        &quot;service_name_code&quot;: &quot;${service_name_code}&quot;,&#xd;
        &quot;service_stage&quot;:&quot;QDE&quot;&#xd;
        }   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/retryServiceCall</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">BORROWER</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="loan product Id Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.loan_details.loan_product_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Customer ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">customer_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.customer_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Service Status Loop" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">10</stringProp>
            </LoopController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${serviceStatusValue}&quot; != &quot;Completed&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServiceStatus_2nd_Call_ConductPD-QDE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
      	 &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
          &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
          &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
          &quot;borrower_id&quot;: &quot;${co_borrower_id}&quot;,&#xd;
          &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
          &quot;service_stage&quot;: &quot;QDE&quot;&#xd;
		 }   &#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                  <stringProp name="HTTPSampler.port">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${npPATH}/getServiceStatus</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1149187101">SUCCESS</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch " enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">serviceStatusValue</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_status_value</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Pending Service Check" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">service_name_code</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.service_list[?(@.status_message!=&apos;SUCCESS&apos;)].service_name_code </stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                    <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_3rd_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
        &quot;sub_step_code&quot; : &quot;CO_BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_6th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
    &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getQdeDetails_10th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getQdeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_7th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
    &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;CO_BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch - Status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_4th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &quot;step_code&quot; : &quot;CO_BORROWER_QUICK_DATA_ENTRY&quot;,&#xd;
        &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_8th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;stage&quot; : &quot;CONDUCT_PD&quot;,&#xd;
    &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER_QUICK_DATA_ENTRY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Fetch - Status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_6thCall_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
       &quot;step_code&quot; : &quot;QUICK_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_9th_Call_ConductPD-QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;stage&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Conduct PD - ES" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerCoBorrowerList_1st_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerCoBorrowerList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_2ndCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_2nd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActiveLoanForBorrowerAndFamilyMember_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActiveLoanForBorrowerAndFamilyMember</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_2ndCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_3rdCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_4thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_5thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_6thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_7thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_8thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_9thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_10thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateExistingLoan_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;existing_loan&quot; : [ {&#xd;
      &quot;borrowed_amount&quot; : &quot;25206.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;18 Mar 2019&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45665&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1345.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;HDFC BANK LTD&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;34850.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;15 Mar 2022&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45664&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;770.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;INDUSIND BANK&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;8018&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Weekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;20000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;27 Dec 2018&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45660&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;100.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;AROHAN&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;40000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;09 Mar 2021&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45661&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;910.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;BANDHAN BANK LIMITED&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Weekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;2180.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;20 Sep 2020&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45667&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;0&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;HDFC BANK LTD&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;36769.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;30 Nov 2018&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45663&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1950.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;LNT FINANCE&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;30300.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;10 Apr 2019&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45666&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1180.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;FICCL&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;BiWeekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;50000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;07 Jan 2022&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45662&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1140.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;BANDHAN BANK LIMITED&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Weekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;42328.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;23 Oct 2020&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45659&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;250.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;LNT FINANCE&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;50000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;29 Sep 2016&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45668&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;0&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;XXXX&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    } ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE_COMPLETE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExistingLoan</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_3rd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_3rd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_4th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_5th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_11thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_12th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateDeviationRemedyDetails_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;deviation_remedial_list&quot; : [ {&#xd;
      &quot;eligibility_rule_id&quot; : &quot;62&quot;,&#xd;
      &quot;is_verified&quot; : &quot;true&quot;,&#xd;
      &quot;remedial_action_document&quot; : {&#xd;
        &quot;dms_document_code&quot; : &quot;&quot;,&#xd;
        &quot;document_id&quot; : &quot;&quot;,&#xd;
        &quot;document_name&quot; : &quot;&quot;,&#xd;
        &quot;document_type&quot; : &quot;&quot;,&#xd;
        &quot;file_number&quot; : &quot;0&quot;&#xd;
      },&#xd;
      &quot;remedial_action_reason&quot; : &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
      &quot;remedial_document_type&quot; : &quot;null&quot;&#xd;
    }, {&#xd;
      &quot;eligibility_rule_id&quot; : &quot;66&quot;,&#xd;
      &quot;is_verified&quot; : &quot;true&quot;,&#xd;
      &quot;remedial_action_document&quot; : {&#xd;
        &quot;dms_document_code&quot; : &quot;&quot;,&#xd;
        &quot;document_id&quot; : &quot;&quot;,&#xd;
        &quot;document_name&quot; : &quot;&quot;,&#xd;
        &quot;document_type&quot; : &quot;&quot;,&#xd;
        &quot;file_number&quot; : &quot;0&quot;&#xd;
      },&#xd;
      &quot;remedial_action_reason&quot; : &quot;DETAILS_NOT_UPDATED_IN_BUREAU&quot;,&#xd;
      &quot;remedial_document_type&quot; : &quot;null&quot;&#xd;
    } ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateDeviationRemedyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1st_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
        &quot;step_code&quot; : &quot;BORROWER_ELIGIBILITY_RULES&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER_REMEDIAL_ACTION&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_6th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_4th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_7th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
        &quot;step_code&quot; : &quot;ELIGIBILITY_SUMMARY_BORROWER&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerCoBorrowerList_2nd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerCoBorrowerList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_5th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_8th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1stCall_Conduct PD - ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${__P(mobileConsentDoc)}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActiveLoanForBorrowerAndFamilyMember_2ndCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActiveLoanForBorrowerAndFamilyMember</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_13thCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_14th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_15th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_16th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_17th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_18th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_19th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_20th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_21st_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_22nd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_23rd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateExistingLoan_2nd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;existing_loan&quot; : [ {&#xd;
      &quot;borrowed_amount&quot; : &quot;50000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;29 Sep 2016&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45678&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;0&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;XXXX&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;20000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;27 Dec 2018&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45670&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;100.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;AROHAN&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;8018&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;34850.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;15 Mar 2022&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45674&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;770.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;INDUSIND BANK&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Weekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;2180.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;20 Sep 2020&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45677&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;0&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;HDFC BANK LTD&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;50000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;07 Jan 2022&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45672&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1140.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;BANDHAN BANK LIMITED&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Weekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;36769.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;30 Nov 2018&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45673&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1950.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;LNT FINANCE&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;40000.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;09 Mar 2021&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45671&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;910.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;BANDHAN BANK LIMITED&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Weekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;30300.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;10 Apr 2019&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45676&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1180.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;FICCL&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;BiWeekly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;25206.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;18 Mar 2019&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45675&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;1345.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;HDFC BANK LTD&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    }, {&#xd;
      &quot;borrowed_amount&quot; : &quot;42328.000000&quot;,&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;current_outstanding_amount&quot; : &quot;0&quot;,&#xd;
      &quot;disbursed_date&quot; : &quot;23 Oct 2020&quot;,&#xd;
      &quot;dpd_count&quot; : &quot;0&quot;,&#xd;
      &quot;id&quot; : &quot;45669&quot;,&#xd;
      &quot;installment_amount&quot; : &quot;250.000000&quot;,&#xd;
      &quot;installments_remaining&quot; : &quot;0&quot;,&#xd;
      &quot;lender_name&quot; : &quot;LNT FINANCE&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;loan_tenure&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_18m&quot; : &quot;0&quot;,&#xd;
      &quot;max_dpd_6m&quot; : &quot;0&quot;,&#xd;
      &quot;no_of_bounces&quot; : &quot;0&quot;,&#xd;
      &quot;repayment_frequency&quot; : &quot;Monthly&quot;&#xd;
    } ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE_COMPLETE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExistingLoan</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_9th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEligibilitySummaryDetails_6th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEligibilitySummaryDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDeviatedRules_10th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;LOAN_APPLICATION&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDeviatedRules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_3rd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
         &quot;step_code&quot; : &quot;ELIGIBILITY_SUMMARY_CO_BORROWER&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerCoBorrowerList_3rd_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerCoBorrowerList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_4th_Call_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
         &quot;stage_name&quot; : &quot;ELIGIBILITY_SUMMARY&quot;,&#xd;
         &quot;step_code&quot; : &quot;ELIGIBILITY_SUMMARY&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
        &quot;step_code&quot; : &quot;INCOME_AND_EXPENSES&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFinancialDetails_1stCall_ConductPD-ES" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFinancialDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Conduct PD - Income_Expenses" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivitySummaryList_1st_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivitySummaryList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Activity ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">activity_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.business_activity_list[0].activity_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMasterDataList_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;page_size&quot; : &quot;100&quot;,&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;data_type&quot; : &quot;ACTIVITY_SUB_TYPE&quot;&#xd;
    },&#xd;
    &quot;sort_criteria&quot; : {&#xd;
      &quot;order&quot; : &quot;DESC&quot;&#xd;
    }&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMasterDataList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_1st_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;property_key&quot; : &quot;business.activity.monthly.profit&quot;,&#xd;
    &quot;service&quot; : &quot;LOS&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivityDetails_1st_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
		&quot;activity_id&quot; : &quot;${activity_id}&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;       &#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivityDetails_2nd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
		&quot;activity_id&quot; : &quot;${activity_id}&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;       &#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMasterDataList_2nd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;page_size&quot; : &quot;100&quot;,&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;data_type&quot; : &quot;ACTIVITY_SUB_TYPE&quot;&#xd;
    },&#xd;
    &quot;sort_criteria&quot; : {&#xd;
      &quot;order&quot; : &quot;DESC&quot;&#xd;
    }&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMasterDataList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_2nd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;property_key&quot; : &quot;business.activity.monthly.profit&quot;,&#xd;
    &quot;service&quot; : &quot;LOS&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivityDetails_3rd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
		&quot;activity_id&quot; : &quot;${activity_id}&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;       &#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivityDetails_4th_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
		&quot;activity_id&quot; : &quot;${activity_id}&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;       &#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_1st_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;loanDocs_BusinessActivities1_17112023.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMasterDataList_3rd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;page_size&quot; : &quot;100&quot;,&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;data_type&quot; : &quot;ACTIVITY_SUB_TYPE&quot;&#xd;
    },&#xd;
    &quot;sort_criteria&quot; : {&#xd;
      &quot;order&quot; : &quot;DESC&quot;&#xd;
    }&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMasterDataList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_3rd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;property_key&quot; : &quot;business.activity.monthly.profit&quot;,&#xd;
    &quot;service&quot; : &quot;LOS&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivityDetails_5th_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
		&quot;activity_id&quot; : &quot;${activity_id}&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;       &#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivityDetails_6th_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
		&quot;activity_id&quot; : &quot;${activity_id}&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;       &#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_2nd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
&#xd;
&#xd;
		&quot;name&quot;: &quot;Sample Document&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;,&#xd;
		&quot;remarks&quot;: &quot;Sample&quot;,&#xd;
		&quot;file_list&quot;: [{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_1.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_2.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;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&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_3.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;content&quot;: &quot;iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAflBMVEXYHl7r6+vs8/HXDVjfgJns9PLXAFTfeJTffpnr7+7lusTecI7XAFLs9/XYGVzr6+zZOGvWAE3bVXzfhp3bTHfcXoLcZofcY4Xin7DbT3jp3+Lmwsvq5efjp7bZK2TWAErjq7nnydHaQ3HhmKro0djo2NzltcHnzNLhkKbjqLfQazD4AAAEbUlEQVR4nO2daXeqMBRFUSQaBRTt4NzWDq/v///BZ03XW1aGXEAkh579uXVlGz3JNQOeRwghhBBCCCGEEEIIIYQQQkh38DNou03XJFb3o8Elk7g7jv5hG/VTBHoRtt2yKxHvdS+TaNiRXlTrbMFeb5q03barkLzkdOGxE2dx2627AskuyBPsRYcOGKpBlCvYCUN/XiDYBcPcGO2MYZgbox0xLIjRbhgWxWgnDAtj1BjeQRv6K5sguKElRjtgqNYdN7TFKLyhNUaN4QrWUI2sKYNt6M8lPQhsGO9FfsCGoSBGoQ1FMYpsKItRYzhHNBTGKK5hcVHfAUPJbBTbUDIbhTaUx+iJAM6wRIwaw3swwzIxCmkoKOqxDcvFKKJhuRg1hlBJUzJGv/sQaAGxbIzCGZaOUTRDaVEPaygu6mENxUU9qmGVGDWGjxiGlWIUybBajAIZ+quqPQhiWGE2CmZYNUaN4YP7hsmmhiCCYVg5RkEM1bByjGIYli/qwQxrxSiEYa0YRTCsF6MAhtVnoyCGdWPUecM6s1EIw6pF/QX9ibOGshidLvqohk+iGI0OQ1TDZCna8DQJR6CGshgNXkMf1FAWo/1x4oEaxp7kO6jfEg/VUBajWxWjGspmo3r/tWwGaRiKYjSYn1qOaCiL0WioTn8NaCgr6qPX77OhdkPXjljG+6lA8GucMOAZimL0NE4Y4AxlMbr1/+8+QDOUzUb12cFXMENhjM7P2oxl6N+J6omROv8fJEPZb6PB8sfxcyhDWYyOf56vRzIUxah+v7hAAMhQFKP6bJww4BjKYlSnLkiwG47cMJQV9VF6bwyKYexJZqM/xwkDiqEoRi/GCQOIoSxGN1n3sGAYiop6/Z55WxCEoShG9TTO3M1sNxy0bujfScaJ/iy7oQCGsqI+ytvZBGAYvkuOnC/S44TBfUNRjAa73OusnE8a2Wx085T7Aq73oSxGs8cJg+OGoqJeT72CUy9uG8ae3e/4JTwUNdFtQ9FsNHecMDhtKIrR/HHC4LKhaDYaPFuuPbQbLtoylMXoi+1eR3cNRUW9XltvH3XWUBajvaJxwuCsoegwqJ4lykZi3THUjqE/knxG3z7Gdv5Y3io9SMIUqvGTs77tnTeNk2B/mWmK7WZVPAbdyrA5dNT0nsy2DY+ODXdi+4ZNb6xt37Dp5Qwa0pCGNKQhDWlIQxrSkIY0pCENaUhDEMPJNY5p16HpX6Ji7won7WvR9K+Jnlq2qqhv8MC5ZBcF6af5lcf+q34/SrN+aLoLj6j9MPVAxvKMljZF/bmfXbIPb7IeFWc9VbMs6sEWWXqh4hS38LsS9lDWn23v3KsHDWnoPjT8FYavNHQbGh4NlzeYgjYIDWnoPjQ8Gu5o6DYCw780dBuB4TMN3YaGR8MPGroNDWnoPgLDMbjho22VDr0PPd+29hQ5dzNkSfxFcSeeXUCISvjZL1hqjTbgn9EvlJe/1Do6WI9oIlC01Iq0FkoIIYQQQgghhBBCCCGEEEJ+C/8ADNtmDDpX6PoAAAAASUVORK5CYII=&quot;,&#xd;
				&quot;file_original_name&quot;: &quot;Sample_Document_4.jpg&quot;,&#xd;
				&quot;file_type&quot;: &quot;jpg&quot;,&#xd;
				&quot;file_size&quot;: &quot;100&quot;,&#xd;
				&quot;is_aadhar&quot;: &quot;false&quot;&#xd;
			}&#xd;
		]&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">kycDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateActivityDetails_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&#xd;
	&quot;request&quot; : {&#xd;
	&quot;is_primary_activity&quot;: &quot;true&quot;,&#xd;
    &quot;activity_category&quot; : &quot;Working capital loans - Trade - High inventory&quot;,&#xd;
    &quot;activity_id&quot; : &quot;${activity_id}&quot;,&#xd;
    &quot;activity_sub_categories&quot; : [ {&#xd;
      &quot;activity_sub_category&quot; : &quot;ROTI_MAKING&quot;&#xd;
    } ],&#xd;
    &quot;activity_type&quot; : &quot;TIFFIN_FOOD_BUSINESS&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;proof_of_activity&quot; : {&#xd;
      &quot;dms_document_code&quot; : &quot;e6edf424-954d-4ba0-91a9-df87cf226e31&quot;,&#xd;
      &quot;document_id&quot; : &quot;0&quot;,&#xd;
      &quot;document_name&quot; : &quot;405fed00-59dc-416a-b497-42d5ca628bb3&quot;,&#xd;
      &quot;document_type&quot; : &quot;BUSINESS_ACTIVITIES&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;&#xd;
    },&#xd;
    &quot;selling_price_details&quot; : {&#xd;
      &quot;amount&quot; : &quot;5104&quot;,&#xd;
      &quot;price_per_unit&quot; : &quot;58&quot;,&#xd;
      &quot;frequency&quot; : &quot;QUARTERLY&quot;,&#xd;
      &quot;frequencyValue&quot; : &quot;Quarterly&quot;,&#xd;
      &quot;id&quot; : &quot;5443&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;false&quot;,&#xd;
      &quot;number_of_units&quot; : &quot;88&quot;,&#xd;
      &quot;status&quot; : &quot;false&quot;&#xd;
    },&#xd;
    &quot;working_capital_expenses&quot; : [ {&#xd;
      &quot;amount&quot; : &quot;7104&quot;,&#xd;
      &quot;cost_per_unit&quot; : &quot;888&quot;,&#xd;
      &quot;frequency&quot; : &quot;SEASONALLY&quot;,&#xd;
      &quot;frequencyValue&quot; : &quot;SEASONALLY&quot;,&#xd;
      &quot;id&quot; : &quot;&quot;,&#xd;
      &quot;isAdd&quot; : &quot;false&quot;,&#xd;
      &quot;is_deleted&quot; : &quot;false&quot;,&#xd;
      &quot;number_of_units&quot; : &quot;8&quot;,&#xd;
      &quot;raw_material&quot; : &quot;FERTILIZERS&quot;,&#xd;
      &quot;rawMaterialValue&quot; : &quot;FERTILIZERS&quot;&#xd;
    } ]&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateActivityDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getActivitySummaryList_2nd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getActivitySummaryList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1st_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;INCOME_AND_EXPENSES&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BUSINESS_ACTIVITIES&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAssetSummaryList_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAssetSummaryList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateAssetsAndAmenities_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
         &quot;machinery_details&quot; : [ ],&#xd;
    &quot;one_time_investment&quot; : [ {&#xd;
      &quot;cost&quot; : &quot;959&quot;,&#xd;
      &quot;expense&quot; : &quot;STOCK/LIVESTOCK&quot;&#xd;
    }, {&#xd;
      &quot;cost&quot; : &quot;888&quot;,&#xd;
      &quot;expense&quot; : &quot;LAND_AND_BUILDING&quot;&#xd;
    }, {&#xd;
      &quot;cost&quot; : &quot;979&quot;,&#xd;
      &quot;expense&quot; : &quot;FURNITURE&quot;&#xd;
    } ]&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;MACHINERY_DETAILS&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateAssetsAndAmenities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getIncomeDetails_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getIncomeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower_IncomeID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_income_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_income_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co-Borrower_IncomeID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">co_borrower_income_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.co_borrower_income_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Other IncomeID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_other_income_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_other_income_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateIncomeDetails_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_income_amount&quot; : &quot;979766.0&quot;,&#xd;
    &quot;borrower_income_id&quot; : &quot;${borrower_income_id}&quot;,&#xd;
    &quot;borrower_other_income_amount&quot; : &quot;946465.0&quot;,&#xd;
    &quot;borrower_other_income_id&quot; : &quot;${borrower_other_income_id}&quot;,&#xd;
    &quot;co_borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;co_borrower_income_amount&quot; : &quot;946465.0&quot;,&#xd;
    &quot;co_borrower_income_id&quot; : &quot;${co_borrower_income_id}&quot;,&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                },&#xd;
                &#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateIncomeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getExpenseDetails_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	  &quot;activity_id&quot; : &quot;&quot;,&#xd;
           &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
           &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
           &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getExpenseDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateExpenseDetails_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;amount_of_product&quot; : &quot;646.00&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;business_expense&quot; : &quot;540&quot;,&#xd;
    &quot;expense_code&quot; : &quot;&quot;,&#xd;
    &quot;expense_frequency&quot; : &quot;&quot;,&#xd;
    &quot;family_member_id&quot; : &quot;0&quot;,&#xd;
    &quot;household_expense&quot; : &quot;979.00&quot;,&#xd;
    &quot;is_activity_products_seen_and_verified&quot; : &quot;true&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;monthly_labour_charges&quot; : &quot;0&quot;,&#xd;
    &quot;monthly_misc_expenses&quot; : &quot;0&quot;,&#xd;
    &quot;monthly_rent&quot; : &quot;258&quot;,&#xd;
    &quot;monthly_transportation_charges&quot; : &quot;0&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateExpenseDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getIncomeSurrogateDetails_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getIncomeSurrogateDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateIncomeSurrogate_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;bank_detail_verified&quot; : &quot;false&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;income_per_frequency&quot; : &quot;5666&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;surrogate_income_details&quot; : [ {&#xd;
      &quot;day&quot; : &quot;SECOND_DAY&quot;,&#xd;
      &quot;value&quot; : &quot;5565&quot;&#xd;
    }, {&#xd;
      &quot;day&quot; : &quot;THIRD_DAY&quot;,&#xd;
      &quot;value&quot; : &quot;5555&quot;&#xd;
    }, {&#xd;
      &quot;day&quot; : &quot;FIRST_DAY&quot;,&#xd;
      &quot;value&quot; : &quot;9999&quot;&#xd;
    }, {&#xd;
      &quot;day&quot; : &quot;FOURTH_DAY&quot;,&#xd;
      &quot;value&quot; : &quot;9999&quot;&#xd;
    }, {&#xd;
      &quot;day&quot; : &quot;FIFTH_DAY&quot;,&#xd;
      &quot;value&quot; : &quot;5555&quot;&#xd;
    } ],&#xd;
    &quot;surrogate_type_code&quot; : &quot;GAS_BILL&quot;,&#xd;
    &quot;surrogate_value&quot; : &quot;555&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateIncomeSurrogate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFinancialDetails_1stCall_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;INDL_LOAN&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFinancialDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1st_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
        &quot;step_code&quot; : &quot;INCOME_AND_EXPENSES&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Status " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
        &quot;stage_name&quot; : &quot;INCOME_AND_EXPENSES&quot;,&#xd;
        &quot;step_code&quot; : &quot;INCOME_AND_EXPENSES&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_ConductPD-IE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
         &quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Conduct PD - AD" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
            <stringProp name="dataSource">MyDBPool</stringProp>
            <stringProp name="query">update mfi_simulator.simulator_response set response = &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;S:Envelope xmlns:S=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;
  &lt;S:Body&gt;
    &lt;ns0:inquireAccountStatusResponse xmlns:ns0=&quot;http://cal.savings.deposit.xface.fcr.iflex.com/&quot;&gt;
      &lt;return&gt;
        &lt;postingDate&gt;20230906&lt;/postingDate&gt;
        &lt;transactionStatus&gt;
          &lt;errorCode&gt;0&lt;/errorCode&gt;
          &lt;extendedReply/&gt;
          &lt;externalReferenceNo&gt;55158212220230906000800752433&lt;/externalReferenceNo&gt;
          &lt;isOverriden&gt;false&lt;/isOverriden&gt;
          &lt;isServiceChargeApplied&gt;false&lt;/isServiceChargeApplied&gt;
          &lt;replyCode&gt;0&lt;/replyCode&gt;
          &lt;spReturnValue&gt;0&lt;/spReturnValue&gt;
        &lt;/transactionStatus&gt;
        &lt;acctStatusInqCalResponseDTO&gt;
          &lt;channels&gt;C|M|A|T|I|E&lt;/channels&gt;
          &lt;codAcctBrn&gt;827&lt;/codAcctBrn&gt;
          &lt;codAcctName&gt;HARISH&lt;/codAcctName&gt;
          &lt;codAcctNo&gt;50100114499585&lt;/codAcctNo&gt;
          &lt;codAcctStat&gt;6&lt;/codAcctStat&gt;
          &lt;codAcctType&gt;SB&lt;/codAcctType&gt;
          &lt;codProd&gt;182&lt;/codProd&gt;
          &lt;codeAcctSubType&gt;SB&lt;/codeAcctSubType&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;SOW&lt;/custRel&gt;
            &lt;customerCategory&gt;Uday Mahajan&lt;/customerCategory&gt;
            &lt;customerId&gt;166278919&lt;/customerId&gt;
            &lt;varAddrLine1&gt;98/455, JJ COLONY&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex/&gt;
            &lt;varEmail&gt;jain.sonam34@gmail.com&lt;/varEmail&gt;
            &lt;varMobile&gt;919325698454&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;AKOCF5893L&lt;/varPan&gt;
            &lt;varPinCode&gt;421599&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;260321D0000018&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;AUS&lt;/custRel&gt;
            &lt;customerCategory&gt;F  &lt;/customerCategory&gt;
            &lt;customerId&gt;166277722&lt;/customerId&gt;
            &lt;varAddrLine1&gt;98/455, JJ COLONY&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex&gt;F&lt;/varCustSex&gt;
            &lt;varEmail/&gt;
            &lt;varMobile&gt;919325698454&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;AKOCF5893L&lt;/varPan&gt;
            &lt;varPinCode&gt;421599&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;SL000001912002&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;AUS&lt;/custRel&gt;
            &lt;customerCategory&gt;I  &lt;/customerCategory&gt;
            &lt;customerId&gt;166277723&lt;/customerId&gt;
            &lt;varAddrLine1&gt;98/456, JJ COLONY&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex&gt;F&lt;/varCustSex&gt;
            &lt;varEmail/&gt;
            &lt;varMobile&gt;919821752354&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan/&gt;
            &lt;varPinCode&gt;421599&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;SL000001912003&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;TRU&lt;/custRel&gt;
            &lt;customerCategory&gt;C  &lt;/customerCategory&gt;
            &lt;customerId&gt;50171548&lt;/customerId&gt;
            &lt;varAddrLine1&gt;AT DIWADANDI POST DAHANU TAL DAHANU&lt;/varAddrLine1&gt;
            &lt;varAddrLine2&gt;PEACE COTTAGE ARAMADA PO&lt;/varAddrLine2&gt;
            &lt;varCity&gt;MUMBAI&lt;/varCity&gt;
            &lt;varCustSex&gt;M&lt;/varCustSex&gt;
            &lt;varEmail&gt;ishan02@GMAIL.COM&lt;/varEmail&gt;
            &lt;varMobile&gt;917777777794&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;ACIPC9755G&lt;/varPan&gt;
            &lt;varPinCode&gt;456123&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;SANJR00557&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;customerDetailsCalDTO&gt;
            &lt;custRel&gt;AUS&lt;/custRel&gt;
            &lt;customerCategory&gt;A  &lt;/customerCategory&gt;
            &lt;customerId&gt;138132695&lt;/customerId&gt;
            &lt;varAddrLine1&gt;FLAT NO 901/A&lt;/varAddrLine1&gt;
            &lt;varAddrLine2/&gt;
            &lt;varCity&gt;KHOPOLI&lt;/varCity&gt;
            &lt;varCustSex/&gt;
            &lt;varEmail/&gt;
            &lt;varMobile&gt;919080031984&lt;/varMobile&gt;
            &lt;varNameCustShort&gt;HARISH&lt;/varNameCustShort&gt;
            &lt;varPan&gt;AKOCF5893M&lt;/varPan&gt;
            &lt;varPinCode&gt;400785&lt;/varPinCode&gt;
            &lt;varState&gt;MAHARASHTRA&lt;/varState&gt;
            &lt;varTan/&gt;
            &lt;varUid&gt;130520I0000207&lt;/varUid&gt;
          &lt;/customerDetailsCalDTO&gt;
          &lt;dateAcctActivation&gt;31/05/2021&lt;/dateAcctActivation&gt;
          &lt;dateAcctClose/&gt;
          &lt;dateAcctOpen&gt;26/03/2021&lt;/dateAcctOpen&gt;
          &lt;isRegAlerts&gt;N&lt;/isRegAlerts&gt;
          &lt;isSweepInFacility&gt;N&lt;/isSweepInFacility&gt;
          &lt;linkedSweepInAccts/&gt;
        &lt;/acctStatusInqCalResponseDTO&gt;
      &lt;/return&gt;
    &lt;/ns0:inquireAccountStatusResponse&gt;
  &lt;/S:Body&gt;
&lt;/S:Envelope&gt;&apos;
where simulator_config_id = &apos;51&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCasaAccountList_1st_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;customer_name&quot; : &quot;${borrower_name}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getCasaAccountList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String name = &quot;Gaurav Vijairaj Samdariya&quot;;</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerAccountDetails_1st_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
   &quot;account_holder_type&quot; : &quot;Group&quot;,&#xd;
    &quot;account_purpose&quot; : &quot;DISBURSEMENT&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerAccountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1st_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;DISBURSEMENT_ACCOUNT&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCasaAccountList_2nd_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;customer_name&quot; : &quot;${borrower_name}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getCasaAccountList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getBorrowerAccountDetails_2nd_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;account_holder_type&quot; : &quot;Group&quot;,&#xd;
    &quot;account_purpose&quot; : &quot;REPAYMENT&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getBorrowerAccountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;REPAYMENT_ACCOUNT&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1st_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Account Details Status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While -- run until Account Details is Completed" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;PENDING&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1stCall_ConductPD-AD" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Account Details Status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">account_details_status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.response.status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_3rd_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
  &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;ACCOUNT_DETAILS&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_1stCall_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
   &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_ConductPD-AD" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Conduct PD -  DDE" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
     &quot;step_code&quot; : &quot;BORROWER&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower_Nominee_ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_nominee_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_nominee_details.borrower_nominee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFatcaDetails_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;city_name&quot; : &quot;India&quot;&#xd;
    }},&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVtc_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;pincode&quot; : &quot;${pincode}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getInsurancePremium_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_wants_health_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;insured_customer_type&quot; : [ &quot;Borrower&quot;, &quot;CO_BORROWER&quot;, &quot;SPOUSE&quot; ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;spouse_date_of_birth&quot; : &quot;&quot;,&#xd;
    &quot;spouse_wants_life_insurance&quot; : &quot;false&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateBorrowerDDE_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;alternate_mobile_number&quot; : &quot;9976142536&quot;,&#xd;
    &quot;alternate_mobile_number_owner&quot; : &quot;SPOUSE&quot;,&#xd;
    &quot;borrower_category_code&quot; : &quot;GENERAL&quot;,&#xd;
    &quot;borrower_category_section&quot; : &quot;GENERAL&quot;,&#xd;
    &quot;borrower_community_code&quot; : &quot;GENERAL&quot;,&#xd;
    &quot;borrower_father_name&quot; : &quot;Vijairaj Samdariya&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_religion_code&quot; : &quot;BUDDHISM&quot;,&#xd;
    &quot;borrower_wants_health_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;fatca_city_of_birth_code&quot; : &quot;Bengaluru&quot;,&#xd;
    &quot;fatca_consent&quot; : &quot;true&quot;,&#xd;
    &quot;fatca_country_code&quot; : &quot;India&quot;,&#xd;
    &quot;fatca_state_code&quot; : &quot;Karnataka&quot;,&#xd;
    &quot;highest_qualification_code&quot; : &quot;PRIMARY_SCHOOL&quot;,&#xd;
    &quot;is_life_insurance_opted&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;marital_status_code&quot; : &quot;DIVORCED&quot;,&#xd;
    &quot;mother_maiden_name&quot; : &quot;Hhfhcjfdjf&quot;,&#xd;
    &quot;physically_disabled&quot; : &quot;YES&quot;,&#xd;
    &quot;residence_details&quot; : {&#xd;
      &quot;business_stability&quot; : &quot;5&quot;,&#xd;
      &quot;residence_stability&quot; : &quot;5&quot;,&#xd;
      &quot;type_of_accommodation&quot; : &quot;OWNED&quot;&#xd;
    },&#xd;
    &quot;spouse_address&quot; : {&#xd;
      &quot;address_line_1&quot; : &quot;&quot;,&#xd;
      &quot;same_as_borrower_current_address&quot; : &quot;false&quot;&#xd;
    },&#xd;
    &quot;spouse_date_of_birth&quot; : &quot;&quot;,&#xd;
    &quot;spouse_kyc_document_code&quot; : &quot;null&quot;,&#xd;
    &quot;spouse_kyc_document_id&quot; : &quot;&quot;,&#xd;
    &quot;spouse_life_insurance_consent&quot; : &quot;false&quot;,&#xd;
    &quot;spouse_mobile&quot; : &quot;&quot;,&#xd;
    &quot;spouse_name&quot; : &quot;&quot;,&#xd;
    &quot;spouse_wants_life_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;urc_details&quot; : {&#xd;
      &quot;member_has_urc_code&quot; : &quot;false&quot;,&#xd;
      &quot;urc_code&quot; : &quot;&quot;,&#xd;
      &quot;urc_registration_proof&quot; : &quot;&quot;&#xd;
    }&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerDDE</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateInsuranceNomineeAndAppointeeDetails_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_nominee_details&quot; : {&#xd;
      &quot;borrower_nominee_date_of_birth&quot; : &quot;31 Dec 1989&quot;,&#xd;
      &quot;borrower_nominee_full_name&quot; : &quot;${borrower_name}&quot;,&#xd;
      &quot;borrower_nominee_gender&quot; : &quot;FEMALE&quot;,&#xd;
      &quot;borrower_nominee_id&quot; : &quot;${borrower_nominee_id}&quot;,&#xd;
      &quot;borrower_nominee_type&quot; : &quot;BORROWER&quot;,&#xd;
      &quot;nominee_relationship_with_borrower&quot; : &quot;DAUGHTER&quot;&#xd;
    },&#xd;
    &quot;borrower_nominee_same_as_co_borrower&quot; : &quot;true&quot;,&#xd;
    &quot;borrower_nominee_same_as_spouse&quot; : &quot;true&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;spouse_nominee_same_as_borrower&quot; : &quot;false&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateInsuranceNomineeAndAppointeeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEQuestionnaire_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEQuestionnaire</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="question_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[0].question_list[0].question_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="answer_master_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.mapped_questionnaire_list[0].question_list[0].answer_list[0].answer_master_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveDDEQuestionnaireResponse_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
     &quot;questionnaire_activity_list&quot; : [ {&#xd;
      &quot;questionnaire_activity&quot; : &quot;LIFE_INSURANCE_BORROWER_FEMALE&quot;,&#xd;
      &quot;questionnaire_list&quot; : [ {&#xd;
        &quot;answer_id&quot; : &quot;${answer_master_id}&quot;,&#xd;
        &quot;question_id&quot; : &quot;${question_master_id}&quot;&#xd;
      } ]&#xd;
    } ],&#xd;
    &quot;task_sub_type&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;task_type&quot; : &quot;NTB&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DDE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/saveDDEQuestionnaireResponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAPYDetails_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAPYDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFatcaDetails_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;city_name&quot; : &quot;India&quot;&#xd;
    }&#xd;
	},&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateApyDetails_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;account_number&quot; : &quot;&quot;,&#xd;
    &quot;apy_status&quot; : &quot;null&quot;,&#xd;
    &quot;borrower_nominee_details&quot; : {&#xd;
      &quot;nominee_date_of_birth&quot; : &quot;&quot;,&#xd;
      &quot;nominee_full_name&quot; : &quot;&quot;,&#xd;
      &quot;nominee_gender&quot; : &quot;&quot;,&#xd;
      &quot;nominee_relationship_with_borrower&quot; : &quot;null&quot;,&#xd;
      &quot;same_as_borrower_insurance_nominee&quot; : &quot;false&quot;&#xd;
    },&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;borrower_nominee_appointee_details&quot; : {&#xd;
      &quot;appointee_date_of_birth&quot; : &quot;&quot;,&#xd;
      &quot;appointee_full_name&quot; : &quot;&quot;,&#xd;
      &quot;appointee_gender&quot; : &quot;&quot;,&#xd;
      &quot;appointee_relationship&quot; : &quot;null&quot;&#xd;
    },&#xd;
    &quot;contribution_amount&quot; : &quot;&quot;,&#xd;
    &quot;customer_id&quot; : &quot;&quot;,&#xd;
    &quot;customer_want_apy&quot; : &quot;false&quot;,&#xd;
    &quot;fatca_city_of_birth_code&quot; : &quot;Bengaluru&quot;,&#xd;
    &quot;fatca_consent&quot; : &quot;true&quot;,&#xd;
    &quot;fatca_country_code&quot; : &quot;India&quot;,&#xd;
    &quot;fatca_state_code&quot; : &quot;Karnataka&quot;,&#xd;
    &quot;frequency_of_contribution&quot; : &quot;null&quot;,&#xd;
    &quot;apy_clearance_declaration&quot; : &quot;false&quot;,&#xd;
    &quot;is_income_tax_payer&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;mother_maiden_name&quot; : &quot;Hhfhcjfdjf&quot;,&#xd;
    &quot;pension_amount&quot; : &quot;null&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateApyDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_3rd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;BORROWER&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
     &quot;step_code&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;BORROWER&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_4th_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_3rd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;CO_BORROWER&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_3rd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFatcaDetails_3rd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;city_name&quot; : &quot;India&quot;&#xd;
    }&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getFatcaDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAddressFromVtc_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;pincode&quot; : &quot;${pincode}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAddressFromVtc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getInsurancePremium_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;borrower_wants_health_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;insured_customer_type&quot; : [ &quot;Borrower&quot;, &quot;CO_BORROWER&quot;, &quot;SPOUSE&quot; ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;spouse_date_of_birth&quot; : &quot;&quot;,&#xd;
    &quot;spouse_wants_life_insurance&quot; : &quot;false&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getInsurancePremium</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateBorrowerDDE_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;alternate_mobile_number&quot; : &quot;9578787786&quot;,&#xd;
    &quot;alternate_mobile_number_owner&quot; : &quot;SPOUSE&quot;,&#xd;
    &quot;borrower_category_code&quot; : &quot;OBC&quot;,&#xd;
    &quot;borrower_category_section&quot; : &quot;OBC&quot;,&#xd;
    &quot;borrower_community_code&quot; : &quot;OBC&quot;,&#xd;
    &quot;borrower_father_name&quot; : &quot;Vijairaj Samdariya&quot;,&#xd;
    &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;borrower_religion_code&quot; : &quot;BUDDHISM&quot;,&#xd;
    &quot;borrower_wants_health_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;fatca_city_of_birth_code&quot; : &quot;&quot;,&#xd;
    &quot;fatca_consent&quot; : &quot;false&quot;,&#xd;
    &quot;fatca_country_code&quot; : &quot;&quot;,&#xd;
    &quot;fatca_state_code&quot; : &quot;&quot;,&#xd;
    &quot;highest_qualification_code&quot; : &quot;PRIMARY_SCHOOL&quot;,&#xd;
    &quot;is_life_insurance_opted&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;marital_status_code&quot; : &quot;DIVORCED&quot;,&#xd;
    &quot;mother_maiden_name&quot; : &quot;Bhfhxhd&quot;,&#xd;
    &quot;physically_disabled&quot; : &quot;YES&quot;,&#xd;
    &quot;residence_details&quot; : {&#xd;
      &quot;business_stability&quot; : &quot;&quot;,&#xd;
      &quot;residence_stability&quot; : &quot;5&quot;,&#xd;
      &quot;type_of_accommodation&quot; : &quot;OWNED&quot;&#xd;
    },&#xd;
    &quot;spouse_address&quot; : {&#xd;
      &quot;address_line_1&quot; : &quot;&quot;,&#xd;
      &quot;same_as_borrower_current_address&quot; : &quot;false&quot;&#xd;
    },&#xd;
    &quot;spouse_date_of_birth&quot; : &quot;&quot;,&#xd;
    &quot;spouse_kyc_document_code&quot; : &quot;null&quot;,&#xd;
    &quot;spouse_kyc_document_id&quot; : &quot;&quot;,&#xd;
    &quot;spouse_life_insurance_consent&quot; : &quot;false&quot;,&#xd;
    &quot;spouse_mobile&quot; : &quot;&quot;,&#xd;
    &quot;spouse_name&quot; : &quot;&quot;,&#xd;
    &quot;spouse_wants_life_insurance&quot; : &quot;false&quot;,&#xd;
    &quot;urc_details&quot; : {&#xd;
      &quot;member_has_urc_code&quot; : &quot;false&quot;,&#xd;
      &quot;urc_code&quot; : &quot;&quot;,&#xd;
      &quot;urc_registration_proof&quot; : &quot;&quot;&#xd;
    }&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateBorrowerDDE</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEBorrowerDetails_4th_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEBorrowerDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateInsuranceNomineeAndAppointeeDetails_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	 &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;borrower_nominee_details&quot; : {&#xd;
      &quot;borrower_nominee_date_of_birth&quot; : &quot;31 Dec 1989&quot;,&#xd;
      &quot;borrower_nominee_full_name&quot; : &quot;${borrower_name}&quot;,&#xd;
      &quot;borrower_nominee_gender&quot; : &quot;FEMALE&quot;,&#xd;
      &quot;borrower_nominee_id&quot; : &quot;18176&quot;,&#xd;
      &quot;borrower_nominee_type&quot; : &quot;BORROWER&quot;,&#xd;
      &quot;nominee_relationship_with_borrower&quot; : &quot;MOTHER&quot;&#xd;
    },&#xd;
    &quot;borrower_nominee_same_as_co_borrower&quot; : &quot;true&quot;,&#xd;
    &quot;borrower_nominee_same_as_spouse&quot; : &quot;true&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;spouse_nominee_same_as_borrower&quot; : &quot;false&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateInsuranceNomineeAndAppointeeDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDDEQuestionnaire_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDDEQuestionnaire</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveDDEQuestionnaireResponse_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;request&quot; : {&#xd;
    &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;questionnaire_activity_list&quot; : [ {&#xd;
      &quot;questionnaire_activity&quot; : &quot;LIFE_INSURANCE_COBORROWER_FEMALE&quot;,&#xd;
      &quot;questionnaire_list&quot; : [ {&#xd;
        &quot;answer_id&quot; : &quot;28&quot;,&#xd;
        &quot;question_id&quot; : &quot;17&quot;&#xd;
      }, {&#xd;
        &quot;answer_id&quot; : &quot;41&quot;,&#xd;
        &quot;question_id&quot; : &quot;25&quot;&#xd;
      }, {&#xd;
        &quot;answer_id&quot; : &quot;40&quot;,&#xd;
        &quot;question_id&quot; : &quot;24&quot;&#xd;
      } ]&#xd;
    } ],&#xd;
    &quot;task_sub_type&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;task_type&quot; : &quot;NTB&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DDE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/saveDDEQuestionnaireResponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_5th_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_4th_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
     &quot;step_code&quot; : &quot;CO_BORROWER&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_2nd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;CO_BORROWER&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAssetAndAmenitiesDetails_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getAssetAndAmenitiesDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateAssetsAndAmenities_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;amenities&quot; : [ {&#xd;
      &quot;amenities_code&quot; : &quot;ELECTRICITY&quot;,&#xd;
      &quot;amenitiesValue&quot; : &quot;NO&quot;&#xd;
    } ],&#xd;
    &quot;assets&quot; : [ {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;CEILING_FAN&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Ceiling Fan&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;TWO_WHEELER&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Two Wheeler&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;LPG_STOVE&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;LPG Stove&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;COMPUTER_LAPTOP&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Computer / Laptop&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;COLOR_TV&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Color TV&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;WASHING_MACHINE&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Washing Machine&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;FOUR_WHEELER&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Four Wheeler&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;1&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;REFRIGERATOR&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Refrigerator&quot;&#xd;
    }, {&#xd;
      &quot;physical_asset_value&quot; : &quot;4&quot;,&#xd;
      &quot;physical_assets_code&quot; : &quot;AGRICULTURE_LAND&quot;,&#xd;
      &quot;physical_assets_code_value&quot; : &quot;Agriculture Land (in Acers)&quot;&#xd;
    } ],&#xd;
    &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
  },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;ASSETS_AND_AMENITIES&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateAssetsAndAmenities</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getReferencesDetails_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getReferencesDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateReferences_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;purchase_reference&quot; : [ {&#xd;
      &quot;address&quot; : &quot;vb bxhcu&quot;,&#xd;
      &quot;comments&quot; : &quot;&quot;,&#xd;
      &quot;contact_no&quot; : &quot;9688686868&quot;,&#xd;
      &quot;feedback&quot; : &quot;POSITIVE&quot;,&#xd;
      &quot;full_name&quot; : &quot; B cbch&quot;,&#xd;
      &quot;isEdited&quot; : false,&#xd;
      &quot;localId&quot; : &quot;17002023563780&quot;,&#xd;
      &quot;reference_id&quot; : &quot;3908&quot;,&#xd;
      &quot;reference_type&quot; : &quot;purchase_reference&quot;,&#xd;
      &quot;referenceTypeStr&quot; : &quot;Purchase Reference&quot;&#xd;
    } ],&#xd;
    &quot;seller_reference&quot; : [ {&#xd;
      &quot;address&quot; : &quot;vvxxvchc&quot;,&#xd;
      &quot;comments&quot; : &quot;&quot;,&#xd;
      &quot;contact_no&quot; : &quot;9253568986&quot;,&#xd;
      &quot;feedback&quot; : &quot;POSITIVE&quot;,&#xd;
      &quot;full_name&quot; : &quot;Vgxgbxxh&quot;,&#xd;
      &quot;isEdited&quot; : false,&#xd;
      &quot;localId&quot; : &quot;17002023563781&quot;,&#xd;
      &quot;reference_id&quot; : &quot;3909&quot;,&#xd;
      &quot;reference_type&quot; : &quot;seller_reference&quot;,&#xd;
      &quot;referenceTypeStr&quot; : &quot;Seller Reference&quot;&#xd;
    } ],&#xd;
    &quot;response_status&quot; : {&#xd;
      &quot;code&quot; : &quot;&quot;,&#xd;
      &quot;message&quot; : &quot;&quot;,&#xd;
      &quot;status&quot; : &quot;&quot;&#xd;
    }&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateReferences</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanUtilizationDetails_1st_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanUtilizationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrUpdateLoanUtilization_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;livestock_purchase_details_list&quot; : [ ],&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;loan_utilization_products_list&quot; : [ ],&#xd;
    &quot;machinery_details_list&quot; : [ {&#xd;
      &quot;cost_per_unit&quot; : &quot;985.00&quot;,&#xd;
      &quot;isEdited&quot; : false,&#xd;
      &quot;name&quot; : &quot;Vbxhxhxh&quot;,&#xd;
      &quot;number_of_units&quot; : &quot;5&quot;,&#xd;
      &quot;typeStr&quot; : &quot;&quot;,&#xd;
      &quot;utilization_type_code&quot; : &quot;&quot;,&#xd;
      &quot;utilization_type_value&quot; : &quot;&quot;&#xd;
    } ],&#xd;
    &quot;others_details_list&quot; : [ ],&#xd;
    &quot;raw_material_details_list&quot; : [ ],&#xd;
    &quot;response_status&quot; : {&#xd;
      &quot;code&quot; : &quot;&quot;,&#xd;
      &quot;message&quot; : &quot;&quot;,&#xd;
      &quot;status&quot; : &quot;&quot;&#xd;
    }&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/createOrUpdateLoanUtilization</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="isAPYApplicable_6th_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/isAPYApplicable</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_6th_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateLoanAppStepsStatus_3rd_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;step_code&quot; : &quot;DETAILED_DATA_ENTRY&quot;,&#xd;
    &quot;sub_step_code&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAppStepsStatus_7th_Call_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
     &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;stage&quot; : &quot;&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Instance ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_1stCall_ConductPD-DDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
              &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
               &quot;instance_id&quot; : &quot;${instance_id}&quot;,&#xd;
               &quot;is_rejected&quot; : &quot;false&quot;,&#xd;
               &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
               &quot;stage_name&quot; : &quot;CONDUCT_PD&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178440866&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="stage check - getProcessInstanceId" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login_L6" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;auth_type&quot;: &quot;MPIN&quot;,&#xd;
    &quot;auth_value&quot;: &quot;cXpJdGdMTUh5ek9VRXFYcVBoeE13MDY0blhJS1NDRjBscUFvK2Y5SktCZUlGRGJWNW1nV3JWNUtp\nLzlWRytyUDZvV3lqNi9zeFZjVzk3YnFhZGt0cmpMSWlOaGV6V29RQlJYK1BhZ3RsM2tSdGdRVFph\nTTZ2NmdicXEyS0MwNVI3bGN3WGIxeVl3SUFlK1NXR3JEbmRtNE1yOVpjeXFQTkpKN3RaYk9ZV2Qv\ndzRuQ0pYaVpRSTlEaHZYRG9kbkhtOHEvZE5LMTBXWHkvRWNjcTk3aWszRkliU0J4K2pJb0JCVktl\ndjhmdFdnSXkzNldrYmR5dmNKUTdneGxMZ1F1Z0ZURlYxNXBFeU12MVhVTlJxZSs5aHBLUSt2a2Ni\nS1VlTmtZQVpyZG4rOTRWSGMwWmlvWDNGYzhsajhhSi9rWWd4VUNwM1Z2NTlBNWhKcUR3bFBBZ1pB\nPT0=\n&quot;,&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;inventory_details&quot;: {&#xd;
      &quot;apk_version&quot;: &quot;v3.2.0_243&quot;,&#xd;
      &quot;device_manufacturer&quot;: &quot;HUAWEI&quot;,&#xd;
      &quot;device_name&quot;: &quot;JSN-L42&quot;,&#xd;
      &quot;device_unique_identifier&quot;: &quot;EMP00014__c195200c2d0abb56&quot;,&#xd;
      &quot;mobile_numbers&quot;: &quot;9080142811&quot;,&#xd;
      &quot;os_name&quot;: &quot;Android&quot;,&#xd;
      &quot;os_version&quot;: &quot;10&quot;,&#xd;
      &quot;sim_identifiers&quot;: &quot;&quot;,&#xd;
      &quot;version_code&quot;: &quot;243&quot;&#xd;
    },&#xd;
    &quot;primary_number_otp&quot;: &quot;131372&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;id&quot; : &quot;${user_id_L6}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.office_details[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CM Dashboard" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login-- CMDashboard" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_ip&quot;: &quot;&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SYSTEM&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;&#xd;
	},&#xd;
	 &quot;request&quot;: {&#xd;
        &quot;handle_type&quot;: &quot;EMAIL&quot;,&#xd;
        &quot;handle_value&quot;: &quot;${cu_user}&quot;,&#xd;
        &quot;auth_type&quot;: &quot;PASSWORD&quot;,&#xd;
        &quot;auth_value&quot;: &quot;Y25DNS92Y1Z6czhPKzhZcEhydFN2QnExMEJPUUE5SnlLQjJudkJjU1h5dVdhK0JNd3pRSkV1UjRnZVpCTmxxTVA0K0NXU3pCYmMwZHNMVHg2SFZYdEhEYVR3RW9uMENBSSt6c0dhd2QvREJLdVg2RzNSaW9GbWRDR0xrU3A5ekVlN1podjB0VWllSC9wQ3pHM0lUb0Z5NVoybUxWTDErcTlZM3poVDRJM0NTNmZXcFhvVlRCYzJtbm54M0NHWUxWOWsvM2MvVmxTd0JRY3dUSHR4OElQbC9FcmkzUWdaeHB2N2t4T2JvSUY2YlZ0d1JnVGF2RHpHSm5sRE03Tmk3c25UUzlTSXZCdkRIbTRxeFB5NzJ0Y1RFUnlmY0orV2x5M3hEZmxvWElVNEwvRHpWSks1dEdJUDdUYXYwM1M5ZjRqRFZpQ0plcjhmRkd5ZzZMVG1jeXBRPT0&quot;&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">SIVA1@NOVOPAY.IN</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitCUMemberDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		 &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
           &quot;group_id&quot; : &quot;&quot;,&#xd;
           &quot;cu_decision&quot; : &quot;RECOMMENDED&quot;,&#xd;
           &quot;cu_decision_notes&quot; : &quot;&quot;,&#xd;
           &quot;note_code_list&quot; : [ ],&#xd;
           &quot;is_hold_for_clarification&quot; : &quot;false&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitCUMemberDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_1stCall_CMDashboard" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1704780130077&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;retry_count&quot;: &quot;&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;APPROVE&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
        &quot;stage_name&quot;: &quot;CREDIT_UNDERWRITTING&quot;,&#xd;
        &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
        &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
        &quot;forwarded_to&quot;: &quot;&quot;,&#xd;
        &quot;mitigant_list&quot;: [&#xd;
            {&#xd;
                &quot;notes&quot;: &quot;&quot;,&#xd;
                &quot;mitigant_code&quot;: &quot;PNCHECK&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;task_id&quot;: &quot;${task_id}&quot;,&#xd;
        &quot;forwarded_notes&quot;: &quot;&quot;,&#xd;
        &quot;is_group_rejected&quot;: &quot;false&quot;,&#xd;
        &quot;instance_id&quot;: &quot;${instance_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login_SO" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;auth_type&quot;: &quot;MPIN&quot;,&#xd;
    &quot;auth_value&quot;: &quot;cXpJdGdMTUh5ek9VRXFYcVBoeE13MDY0blhJS1NDRjBscUFvK2Y5SktCZUlGRGJWNW1nV3JWNUtp\nLzlWRytyUDZvV3lqNi9zeFZjVzk3YnFhZGt0cmpMSWlOaGV6V29RQlJYK1BhZ3RsM2tSdGdRVFph\nTTZ2NmdicXEyS0MwNVI3bGN3WGIxeVl3SUFlK1NXR3JEbmRtNE1yOVpjeXFQTkpKN3RaYk9ZV2Qv\ndzRuQ0pYaVpRSTlEaHZYRG9kbkhtOHEvZE5LMTBXWHkvRWNjcTk3aWszRkliU0J4K2pJb0JCVktl\ndjhmdFdnSXkzNldrYmR5dmNKUTdneGxMZ1F1Z0ZURlYxNXBFeU12MVhVTlJxZSs5aHBLUSt2a2Ni\nS1VlTmtZQVpyZG4rOTRWSGMwWmlvWDNGYzhsajhhSi9rWWd4VUNwM1Z2NTlBNWhKcUR3bFBBZ1pB\nPT0=\n&quot;,&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;inventory_details&quot;: {&#xd;
      &quot;apk_version&quot;: &quot;v3.2.0_243&quot;,&#xd;
      &quot;device_manufacturer&quot;: &quot;HUAWEI&quot;,&#xd;
      &quot;device_name&quot;: &quot;JSN-L42&quot;,&#xd;
      &quot;device_unique_identifier&quot;: &quot;EMP00014__c195200c2d0abb56&quot;,&#xd;
      &quot;mobile_numbers&quot;: &quot;9080142811&quot;,&#xd;
      &quot;os_name&quot;: &quot;Android&quot;,&#xd;
      &quot;os_version&quot;: &quot;10&quot;,&#xd;
      &quot;sim_identifiers&quot;: &quot;&quot;,&#xd;
      &quot;version_code&quot;: &quot;243&quot;&#xd;
    },&#xd;
    &quot;primary_number_otp&quot;: &quot;131372&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.office_details[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Esign of Loan Documents" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_ESign_SO" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_ip&quot;: &quot;&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SYSTEM&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;&#xd;
	},&#xd;
	 &quot;request&quot;: {&#xd;
        &quot;handle_type&quot;: &quot;EMAIL&quot;,&#xd;
        &quot;handle_value&quot;: &quot;${user_id}&quot;,&#xd;
        &quot;auth_type&quot;: &quot;PASSWORD&quot;,&#xd;
        &quot;auth_value&quot;: &quot;Y25DNS92Y1Z6czhPKzhZcEhydFN2QnExMEJPUUE5SnlLQjJudkJjU1h5dVdhK0JNd3pRSkV1UjRnZVpCTmxxTVA0K0NXU3pCYmMwZHNMVHg2SFZYdEhEYVR3RW9uMENBSSt6c0dhd2QvREJLdVg2RzNSaW9GbWRDR0xrU3A5ekVlN1podjB0VWllSC9wQ3pHM0lUb0Z5NVoybUxWTDErcTlZM3poVDRJM0NTNmZXcFhvVlRCYzJtbm54M0NHWUxWOWsvM2MvVmxTd0JRY3dUSHR4OElQbC9FcmkzUWdaeHB2N2t4T2JvSUY2YlZ0d1JnVGF2RHpHSm5sRE03Tmk3c25UUzlTSXZCdkRIbTRxeFB5NzJ0Y1RFUnlmY0orV2x5M3hEZmxvWElVNEwvRHpWSks1dEdJUDdUYXYwM1M5ZjRqRFZpQ0plcjhmRkd5ZzZMVG1jeXBRPT0=&quot;&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${sesPath}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login - QA/PAT/UAT_OTP" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot;: {&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;handle_value&quot;: &quot;${user_id}&quot;,&#xd;
    &quot;mobile_details&quot;: {},&#xd;
    &quot;otp&quot;: &quot;123456&quot;&#xd;
  },&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;100&quot;,&#xd;
    &quot;channel_code&quot;: &quot;CUSTOMER_APP&quot;,&#xd;
    &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot;: &quot;10.0.2.15&quot;,&#xd;
    &quot;device_id&quot;: &quot;Ab093a9e4d4cf3e5b&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;VALIDATE_OTP&quot;,&#xd;
    &quot;locale&quot;: &quot;&quot;,&#xd;
    &quot;location&quot;: &quot;12.918865,77.67009&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;5.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;sim_number&quot;: &quot;N/A&quot;,&#xd;
    &quot;stan&quot;: &quot;1709548983568&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1709548983573&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="RandomTimer.range">0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1stCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ESIGN_PENDING&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id extractor based on Loan App ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value==&quot;${loan_app_id}&quot;)].task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getMeetingCenterLists_1st_Call_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;employee_id&quot;: &quot;${empId}&quot;&#xd;
	&#xd;
	}&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getMeetingCenterLists</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.meeting_center_details_list[0].meeting_center_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_2nd_Call_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ESIGN_PENDING&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_1stCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_2ndCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_3rd_Call_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;ESIGN_PENDING&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_3rdCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_1stCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_4thCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_5thCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_6thCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_7th_Call_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanAmountDetails_1stCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAmountDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getConfigurationDetails_1stCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&#xd;
   				 &quot;property_key&quot; : &quot;max.sendforreapproval.count&quot;,&#xd;
    				 &quot;service&quot; : &quot;LOS&quot;&#xd;
				 },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PROP-KEY&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getConfigurationDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="downloadDocument_8th_Call_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;document_code&quot;: &quot;${mobConsentDoc}&quot;,&#xd;
		&quot;file_number&quot;: &quot;1&quot;,&#xd;
		&quot;version&quot;: &quot;1&quot;&#xd;
	}&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/downloadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateEsignStatus_1stCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;BORROWER&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;updateEsignStatus&quot; : [ {&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;esign_status&quot; : &quot;PHYSICAL_SIGN_PENDING&quot;,&#xd;
      &quot;esign_type&quot; : &quot;BORROWER&quot;,&#xd;
      &quot;group_id&quot; : &quot;&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
    } ]&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateEsignStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_2ndCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateEsignStatus_2ndCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;CO_BORROWER&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;updateEsignStatus&quot; : [ {&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;esign_status&quot; : &quot;PHYSICAL_SIGN_PENDING&quot;,&#xd;
      &quot;esign_type&quot; : &quot;CO_BORROWER&quot;,&#xd;
      &quot;group_id&quot; : &quot;&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
    } ]&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateEsignStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_3rdCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	 &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateEsignStatus_3rdCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;COMBINED&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;updateEsignStatus&quot; : [ {&#xd;
      &quot;esign_status&quot; : &quot;PHYSICAL_SIGN_PENDING&quot;,&#xd;
      &quot;esign_type&quot; : &quot;COMBINED&quot;,&#xd;
      &quot;group_id&quot; : &quot;&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
    } ]&#xd;
    &#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/updateEsignStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_4thCall_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_1st_Call_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;request&quot;: {&#xd;
    &quot;instance_id&quot; : &quot;${instance_id}&quot;,&#xd;
    &quot;is_rejected&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;sendForReApproval&quot; : &quot;false&quot;,&#xd;
    &quot;stage_name&quot; : &quot;ESIGN&quot;,&#xd;
    &quot;task_id&quot; : &quot;${task_id}&quot;&#xd;
        &#xd;
    },&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;device_id&quot;: &quot;&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1694178441740&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <CompareAssertion guiclass="TestBeanGUI" testclass="CompareAssertion" testname="Compare Assertion" enabled="true">
              <boolProp name="compareContent">true</boolProp>
              <longProp name="compareTime">-1</longProp>
              <collectionProp name="stringsToSkip">
                <elementProp name="" elementType="SubstitutionElement"/>
              </collectionProp>
            </CompareAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_ESign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login_FLCC" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;auth_type&quot;: &quot;MPIN&quot;,&#xd;
    &quot;auth_value&quot;: &quot;cXpJdGdMTUh5ek9VRXFYcVBoeE13MDY0blhJS1NDRjBscUFvK2Y5SktCZUlGRGJWNW1nV3JWNUtp\nLzlWRytyUDZvV3lqNi9zeFZjVzk3YnFhZGt0cmpMSWlOaGV6V29RQlJYK1BhZ3RsM2tSdGdRVFph\nTTZ2NmdicXEyS0MwNVI3bGN3WGIxeVl3SUFlK1NXR3JEbmRtNE1yOVpjeXFQTkpKN3RaYk9ZV2Qv\ndzRuQ0pYaVpRSTlEaHZYRG9kbkhtOHEvZE5LMTBXWHkvRWNjcTk3aWszRkliU0J4K2pJb0JCVktl\ndjhmdFdnSXkzNldrYmR5dmNKUTdneGxMZ1F1Z0ZURlYxNXBFeU12MVhVTlJxZSs5aHBLUSt2a2Ni\nS1VlTmtZQVpyZG4rOTRWSGMwWmlvWDNGYzhsajhhSi9rWWd4VUNwM1Z2NTlBNWhKcUR3bFBBZ1pB\nPT0=\n&quot;,&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;inventory_details&quot;: {&#xd;
      &quot;apk_version&quot;: &quot;v3.2.0_243&quot;,&#xd;
      &quot;device_manufacturer&quot;: &quot;HUAWEI&quot;,&#xd;
      &quot;device_name&quot;: &quot;JSN-L42&quot;,&#xd;
      &quot;device_unique_identifier&quot;: &quot;EMP00014__c195200c2d0abb56&quot;,&#xd;
      &quot;mobile_numbers&quot;: &quot;9080142811&quot;,&#xd;
      &quot;os_name&quot;: &quot;Android&quot;,&#xd;
      &quot;os_version&quot;: &quot;10&quot;,&#xd;
      &quot;sim_identifiers&quot;: &quot;&quot;,&#xd;
      &quot;version_code&quot;: &quot;243&quot;&#xd;
    },&#xd;
    &quot;primary_number_otp&quot;: &quot;131372&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;id&quot; : &quot;${user_id_FLCC}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.office_details[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">emp_id_FLCC</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Print Loan Documents" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_Print_Loan_Documents_FLCC_SO" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_ip&quot;: &quot;&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SYSTEM&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;&#xd;
	},&#xd;
	 &quot;request&quot;: {&#xd;
        &quot;handle_type&quot;: &quot;EMAIL&quot;,&#xd;
        &quot;handle_value&quot;: &quot;${flcc_so_user}&quot;,&#xd;
        &quot;auth_type&quot;: &quot;PASSWORD&quot;,&#xd;
        &quot;auth_value&quot;: &quot;Y25DNS92Y1Z6czhPKzhZcEhydFN2QnExMEJPUUE5SnlLQjJudkJjU1h5dVdhK0JNd3pRSkV1UjRnZVpCTmxxTVA0K0NXU3pCYmMwZHNMVHg2SFZYdEhEYVR3RW9uMENBSSt6c0dhd2QvREJLdVg2RzNSaW9GbWRDR0xrU3A5ekVlN1podjB0VWllSC9wQ3pHM0lUb0Z5NVoybUxWTDErcTlZM3poVDRJM0NTNmZXcFhvVlRCYzJtbm54M0NHWUxWOWsvM2MvVmxTd0JRY3dUSHR4OElQbC9FcmkzUWdaeHB2N2t4T2JvSUY2YlZ0d1JnVGF2RHpHSm5sRE03Tmk3c25UUzlTSXZCdkRIbTRxeFB5NzJ0Y1RFUnlmY0orV2x5M3hEZmxvWElVNEwvRHpWSks1dEdJUDdUYXYwM1M5ZjRqRFZpQ0plcjhmRkd5ZzZMVG1jeXBRPT0&quot;&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskList_1st_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;search_criteria&quot; : {&#xd;
           &quot;current_status&quot; : [ &quot;ASSIGNED&quot; ],&#xd;
           &quot;role_code&quot; : &quot;&quot;,&#xd;
           &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
             },&#xd;
         &quot;page_size&quot; : &quot;10&quot;,&#xd;
         &quot;offset&quot; : &quot;0&quot;,&#xd;
         &quot;sort_criteria&quot; : { },&#xd;
         &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
         &quot;search_domain&quot; : &quot;USER&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[?(@.product_code==&quot;INDL_LOAN&quot; &amp;&amp; @.task_sub_type ==&quot;PRINT_LOAN_DOCUMENT&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While -- Check Task ID" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${task_id}&quot; == &quot;&quot;,)}
</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskList_1st_Call_Print_Loan_Documents" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;search_criteria&quot; : {&#xd;
           &quot;current_status&quot; : [ &quot;ASSIGNED&quot; ],&#xd;
           &quot;role_code&quot; : &quot;&quot;,&#xd;
           &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
             },&#xd;
         &quot;page_size&quot; : &quot;10&quot;,&#xd;
         &quot;offset&quot; : &quot;0&quot;,&#xd;
         &quot;sort_criteria&quot; : { },&#xd;
         &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
         &quot;search_domain&quot; : &quot;USER&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getTaskList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[?(@.product_code==&quot;INDL_LOAN&quot; &amp;&amp; @.task_sub_type ==&quot;PRINT_LOAN_DOCUMENT&quot;)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getPermissionList_1stCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;USER&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getPermissionList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getNotifications_1stCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;page_size&quot;:  &quot;1&quot;,&#xd;
        	 &quot;offset&quot; : &quot;0&quot;&#xd;
        	&#xd;
&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;UNSEEN&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getNotifications</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getRoleDetailsByUserId_1stCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getRoleDetailsByUserId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatatypeMaster_1stCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;datatype&quot; : &quot;TASK_TYPE&quot;,&#xd;
           &quot;datasubtype&quot; : &quot;DEFAULT&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDatatypeMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatatypeMaster_2ndCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        &quot;datatype&quot; : &quot;TASK_TYPE&quot;,&#xd;
        &quot;datasubtype&quot; : &quot;DEFAULT&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDatatypeMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatatypeMaster_3rdCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot; : {&#xd;
          &quot;datatype&quot; : &quot;CREDIT_PROMO_CODE&quot;,&#xd;
          &quot;datasubtype&quot; : &quot;DEFAULT&quot;&#xd;
         },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDatatypeMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getServerClockDetails_1stCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getServerClockDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskListCount_1st_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	&quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
          &quot;role_code&quot; : &quot;FLCC_SO&quot;,&#xd;
          &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskListCount</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskList_1st_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;search_criteria&quot; : {&#xd;
           &quot;current_status&quot; : [ &quot;ASSIGNED&quot; ],&#xd;
           &quot;role_code&quot; : &quot;&quot;,&#xd;
           &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
             },&#xd;
         &quot;page_size&quot; : &quot;10&quot;,&#xd;
         &quot;offset&quot; : &quot;0&quot;,&#xd;
         &quot;sort_criteria&quot; : { },&#xd;
         &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
         &quot;search_domain&quot; : &quot;USER&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getOfficeList_1st_Call_Print_Loan_Documents" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        &quot;search_criteria&quot; : {&#xd;
        &quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
         },&#xd;
        &quot;page_size&quot; : &quot;10&quot;,&#xd;
        &quot;offset&quot; : &quot;0&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getOfficeList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanProductList_1st_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
     &quot;page_size&quot; : &quot;1000&quot;,&#xd;
     &quot;offset&quot; : &quot;0&quot;,&#xd;
     &quot;employee_id&quot; : &quot;${empId}&quot;        &#xd;
     },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;GET_EMP_AND_OFC_COM_SVCBL_PRODS&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanProductList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskList_2nd_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot;: {&#xd;
      &quot;search_criteria&quot; : {&#xd;
      &quot;current_status&quot; : [ &quot;UN_ASSIGNED&quot; ],&#xd;
      &quot;role_code&quot; : &quot;FLCC_SO&quot;,&#xd;
      &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
        },&#xd;
    &quot;page_size&quot; : &quot;10&quot;,&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;sort_criteria&quot; : { },&#xd;
    &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
    &quot;search_domain&quot; : &quot;&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskListCount_2nd_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot; : {&#xd;
    &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
    &quot;role_code&quot; : &quot;FLCC_SO&quot;,&#xd;
    &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskListCount</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskList_3rd_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
	&quot;request&quot; : {&#xd;
    &quot;search_criteria&quot; : {&#xd;
      &quot;current_status&quot; : [ &quot;ASSIGNED&quot; ],&#xd;
      &quot;role_code&quot; : &quot;&quot;,&#xd;
      &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
    },&#xd;
    &quot;page_size&quot; : &quot;10&quot;,&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;sort_criteria&quot; : { },&#xd;
    &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
    &quot;search_domain&quot; : &quot;USER&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskListCount_3rd_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
	&#xd;
	&quot;request&quot; : {&#xd;
    &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
    &quot;role_code&quot; : &quot;FLCC_SO&quot;,&#xd;
    &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskListCount</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignPendingDocumentDetailsForIndividual_1st_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot;: {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;E_SIGN&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignPendingDocumentDetailsForIndividual</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanApplicationSummary_1st_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot;: {&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;is_cm_dashboard&quot; : &quot;false&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanApplicationSummary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignPendingDocumentDetailsForIndividual_2nd_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot;: {&#xd;
       &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;PHYSICAL_SIGN&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignPendingDocumentDetailsForIndividual</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getZippedDocumentDetails_1st_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot;: {&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;PHYSICAL_SIGN&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getZippedDocumentDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitTaDashboardTask_1stCall_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;request&quot; : {&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;task_id&quot; : &quot;${task_id}&quot;&#xd;
  },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitTaDashboardTask</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatatypeMaster_4th_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot; : {&#xd;
        &quot;datatype&quot; : &quot;TASK_TYPE&quot;,&#xd;
        &quot;datasubtype&quot; : &quot;DEFAULT&quot;&#xd;
      },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDatatypeMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatatypeMaster_5th_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot;: {&#xd;
     &quot;datatype&quot; : &quot;TASK_TYPE&quot;,&#xd;
        &quot;datasubtype&quot; : &quot;DEFAULT&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDatatypeMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatatypeMaster_6th_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot;: {&#xd;
      &quot;datatype&quot; : &quot;CREDIT_PROMO_CODE&quot;,&#xd;
      &quot;datasubtype&quot; : &quot;DEFAULT&quot;&#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getDatatypeMaster</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTaskList_4th_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot; : {&#xd;
       &quot;search_criteria&quot; : {&#xd;
      &quot;current_status&quot; : [ &quot;ASSIGNED&quot; ],&#xd;
      &quot;role_code&quot; : &quot;&quot;,&#xd;
      &quot;office_id&quot; : [ &quot;6&quot;, &quot;2&quot; ]&#xd;
    },&#xd;
    &quot;page_size&quot; : &quot;10&quot;,&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;sort_criteria&quot; : { },&#xd;
    &quot;request_user_id&quot; : &quot;${user_id}&quot;,&#xd;
    &quot;search_domain&quot; : &quot;USER&quot;&#xd;
      },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getOfficeList_2nd_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot; : {&#xd;
         &quot;search_criteria&quot; : {&#xd;
      &quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
                         },&#xd;
    &quot;page_size&quot; : &quot;&quot;,&#xd;
    &quot;offset&quot; : &quot;&quot;,&#xd;
    &quot;order&quot; : &quot;&quot;,&#xd;
    &quot;fields&quot; : null&#xd;
      },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;OFFICE_HIERARCHY_UNDER_USER&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getOfficeList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLoanProductList_2nd_Call_Print_Loan_Documents" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;request&quot; : {&#xd;
       &quot;page_size&quot; : &quot;1000&quot;,&#xd;
    &quot;offset&quot; : &quot;0&quot;,&#xd;
    &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
      },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;GET_EMP_AND_OFC_COM_SVCBL_PRODS&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanProductList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15StageStatusCheck_${__threadGroupName}_QDE" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login_SO" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;auth_type&quot;: &quot;MPIN&quot;,&#xd;
    &quot;auth_value&quot;: &quot;cXpJdGdMTUh5ek9VRXFYcVBoeE13MDY0blhJS1NDRjBscUFvK2Y5SktCZUlGRGJWNW1nV3JWNUtp\nLzlWRytyUDZvV3lqNi9zeFZjVzk3YnFhZGt0cmpMSWlOaGV6V29RQlJYK1BhZ3RsM2tSdGdRVFph\nTTZ2NmdicXEyS0MwNVI3bGN3WGIxeVl3SUFlK1NXR3JEbmRtNE1yOVpjeXFQTkpKN3RaYk9ZV2Qv\ndzRuQ0pYaVpRSTlEaHZYRG9kbkhtOHEvZE5LMTBXWHkvRWNjcTk3aWszRkliU0J4K2pJb0JCVktl\ndjhmdFdnSXkzNldrYmR5dmNKUTdneGxMZ1F1Z0ZURlYxNXBFeU12MVhVTlJxZSs5aHBLUSt2a2Ni\nS1VlTmtZQVpyZG4rOTRWSGMwWmlvWDNGYzhsajhhSi9rWWd4VUNwM1Z2NTlBNWhKcUR3bFBBZ1pB\nPT0=\n&quot;,&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;inventory_details&quot;: {&#xd;
      &quot;apk_version&quot;: &quot;v3.2.0_243&quot;,&#xd;
      &quot;device_manufacturer&quot;: &quot;HUAWEI&quot;,&#xd;
      &quot;device_name&quot;: &quot;JSN-L42&quot;,&#xd;
      &quot;device_unique_identifier&quot;: &quot;EMP00014__c195200c2d0abb56&quot;,&#xd;
      &quot;mobile_numbers&quot;: &quot;9080142811&quot;,&#xd;
      &quot;os_name&quot;: &quot;Android&quot;,&#xd;
      &quot;os_version&quot;: &quot;10&quot;,&#xd;
      &quot;sim_identifiers&quot;: &quot;&quot;,&#xd;
      &quot;version_code&quot;: &quot;243&quot;&#xd;
    },&#xd;
    &quot;primary_number_otp&quot;: &quot;131372&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Details" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;95&quot;,&#xd;
    &quot;channel_code&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;channel_type&quot;: &quot;ANDROID&quot;,&#xd;
    &quot;client_code&quot;: &quot;hdfcsli&quot;,&#xd;
    &quot;client_ip&quot;: &quot;&quot;,&#xd;
    &quot;device_id&quot;: &quot;c195200c2d0abb56&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;locale&quot;: &quot;en-in&quot;,&#xd;
    &quot;location&quot;: &quot;12.9187713,77.6699904&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;100.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;stan&quot;: &quot;${__time()}${timestamp}&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1728994123569&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getUserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.office_details[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user id Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.employee_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Physical Sign Pending" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_Physical_Sign_Pending_SO" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_ip&quot;: &quot;&quot;,&#xd;
        &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SYSTEM&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;ADMIN&quot;&#xd;
    },&#xd;
     &quot;request&quot;: {&#xd;
        &quot;handle_type&quot;: &quot;USERNAME&quot;,&#xd;
        &quot;handle_value&quot;: &quot;${user_id}&quot;,&#xd;
        &quot;auth_type&quot;: &quot;PASSWORD&quot;,&#xd;
        &quot;auth_value&quot;: &quot;Y25DNS92Y1Z6czhPKzhZcEhydFN2QnExMEJPUUE5SnlLQjJudkJjU1h5dVdhK0JNd3pRSkV1UjRnZVpCTmxxTVA0K0NXU3pCYmMwZHNMVHg2SFZYdEhEYVR3RW9uMENBSSt6c0dhd2QvREJLdVg2RzNSaW9GbWRDR0xrU3A5ekVlN1podjB0VWllSC9wQ3pHM0lUb0Z5NVoybUxWTDErcTlZM3poVDRJM0NTNmZXcFhvVlRCYzJtbm54M0NHWUxWOWsvM2MvVmxTd0JRY3dUSHR4OElQbC9FcmkzUWdaeHB2N2t4T2JvSUY2YlZ0d1JnVGF2RHpHSm5sRE03Tmk3c25UUzlTSXZCdkRIbTRxeFB5NzJ0Y1RFUnlmY0orV2x5M3hEZmxvWElVNEwvRHpWSks1dEdJUDdUYXYwM1M5ZjRqRFZpQ0plcjhmRkd5ZzZMVG1jeXBRPT0&quot;&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${sesPath}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login - QA/PAT/UAT_OTP" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot;: {&#xd;
    &quot;handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;handle_value&quot;: &quot;${user_id}&quot;,&#xd;
    &quot;mobile_details&quot;: {},&#xd;
    &quot;otp&quot;: &quot;123456&quot;&#xd;
  },&#xd;
  &quot;headers&quot;: {&#xd;
    &quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
    &quot;battery_percentage&quot;: &quot;100&quot;,&#xd;
    &quot;channel_code&quot;: &quot;CUSTOMER_APP&quot;,&#xd;
    &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot;: &quot;10.0.2.15&quot;,&#xd;
    &quot;device_id&quot;: &quot;Ab093a9e4d4cf3e5b&quot;,&#xd;
    &quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
    &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot;: &quot;VALIDATE_OTP&quot;,&#xd;
    &quot;locale&quot;: &quot;&quot;,&#xd;
    &quot;location&quot;: &quot;12.918865,77.67009&quot;,&#xd;
    &quot;location_accuracy&quot;: &quot;5.0&quot;,&#xd;
    &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
    &quot;sim_number&quot;: &quot;N/A&quot;,&#xd;
    &quot;stan&quot;: &quot;1709548983568&quot;,&#xd;
    &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot;: &quot;1709548983573&quot;,&#xd;
    &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor-User Id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="RandomTimer.range">0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login_Physical_Sign_Pending" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;client_ip&quot;: &quot;&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;${timestamp}&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SYSTEM&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;&#xd;
	},&#xd;
	 &quot;request&quot;: {&#xd;
        &quot;handle_type&quot;: &quot;EMAIL&quot;,&#xd;
        &quot;handle_value&quot;: &quot;perSO${empID}&quot;,&#xd;
        &quot;auth_type&quot;: &quot;PASSWORD&quot;,&#xd;
        &quot;auth_value&quot;: &quot;Y25DNS92Y1Z6czhPKzhZcEhydFN2QnExMEJPUUE5SnlLQjJudkJjU1h5dVdhK0JNd3pRSkV1UjRnZVpCTmxxTVA0K0NXU3pCYmMwZHNMVHg2SFZYdEhEYVR3RW9uMENBSSt6c0dhd2QvREJLdVg2RzNSaW9GbWRDR0xrU3A5ekVlN1podjB0VWllSC9wQ3pHM0lUb0Z5NVoybUxWTDErcTlZM3poVDRJM0NTNmZXcFhvVlRCYzJtbm54M0NHWUxWOWsvM2MvVmxTd0JRY3dUSHR4OElQbC9FcmkzUWdaeHB2N2t4T2JvSUY2YlZ0d1JnVGF2RHpHSm5sRE03Tmk3c25UUzlTSXZCdkRIbTRxeFB5NzJ0Y1RFUnlmY0orV2x5M3hEZmxvWElVNEwvRHpWSks1dEdJUDdUYXYwM1M5ZjRqRFZpQ0plcjhmRkd5ZzZMVG1jeXBRPT0&quot;&#xd;
    }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${sesPath}/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sessionKey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;session_token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="officeID Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">office_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.office_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">user_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">notFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for session token" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">session_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.session_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor for user_id" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">user_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(sesh,${session_token})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Employee ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">empId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.employee_details.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getVtcByEmployeeId_1st_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;request&quot;: {&#xd;
        	 &quot;employee_id&quot; : &quot;${empId}&quot;&#xd;
               &#xd;
        },&#xd;
        &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getVtcByEmployeeId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;PHYSICAL_SIGN_PENDING&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_photo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[?(@.field_type == &apos;Borrower Photo Id&apos;)].field_value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id - Physical Sign Pending" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">physical_task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_list[0].task_list_details[0].task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_2nd_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
   	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;PHYSICAL_SIGN_PENDING&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">vars.put(&quot;borrower_photo&quot;,&quot;cad118ff-ccd4-44cd-869e-450001daac20&quot;);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While -- Check Task ID" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${task_id}&quot; == &quot;&quot;,)}
</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLosTaskList_1st_Call_${__threadGroupName}_SchedulePD_${__threadGroupName}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot;: {&#xd;
   	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
		 &quot;assignee_contributor&quot;: [&#xd;
            ${user_id}&#xd;
        ],&#xd;
        &quot;channel&quot;: &quot;APK&quot;,&#xd;
        &quot;current_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;offset&quot;: &quot;0&quot;,&#xd;
        &quot;page_size&quot;: &quot;10&quot;,&#xd;
        &quot;product_code&quot;: [&#xd;
            &quot;INDL_LOAN&quot;&#xd;
        ],&#xd;
        &quot;sort_criteria&quot;: {&#xd;
            &quot;fields&quot;: [],&#xd;
            &quot;order&quot;: &quot;DESC&quot;&#xd;
        },&#xd;
        &quot;task_status&quot;: &quot;ASSIGNED&quot;,&#xd;
        &quot;task_sub_type&quot;: &quot;PHYSICAL_SIGN_PENDING&quot;,&#xd;
        &quot;task_type&quot;: [&#xd;
            &quot;NTB&quot;&#xd;
        ]&#xd;
		&#xd;
		 }}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getLosTaskList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Task Id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.field_value == &quot;${loan_app_id}&quot;)].task_id </stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_1stCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getPhysicalSignDocumentDetails_1stCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	 &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getPhysicalSignDocumentDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined Doc Code -1 " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">com_doc_code1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">x.combined_document_details.document_list[0].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined  Product Doc ID - 1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_product_doc_id_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[0].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined Doc Code -2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">com_doc_code2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[1].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined  Product Doc ID - 2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_product_doc_id_2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[1].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined Doc Code -3" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">com_doc_code3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[2].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined  Product Doc ID - 3" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_product_doc_id_3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[2].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined Doc Code -4" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">com_doc_code4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[3].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined  Product Doc ID - 4" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_product_doc_id_4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[3].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined Doc Code -5" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">com_doc_code5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[4].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Combined  Product Doc ID - 5" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_product_doc_id_5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.combined_document_details.document_list[4].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Doc Code - 1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_doc_code1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_document_details.document_list[0].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Product Doc Id -1 " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_product_doc_id_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_document_details.document_list[0].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Doc Code - 2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_doc_code2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_document_details.document_list[1].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Product Doc Id -2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_product_doc_id_2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_document_details.document_list[1].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Doc Code - 3" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_doc_code3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_document_details.document_list[2].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Borrower Product Doc Id -3" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_product_doc_id_3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.borrower_document_details.document_list[2].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co Borrower Doc Code - 1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">co_borrower_doc_code1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.co_borrower_document_details.document_list[0].document_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Co Borrower Product Doc Id -1 " enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">co_borrower_product_doc_id_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.co_borrower_document_details.document_list[0].product_document_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_1st_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
      &quot;document_id&quot; : &quot;${borrower_doc_code1}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_BORROWER&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_BORROWER0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;244208&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
  &quot;headers&quot; : {&#xd;
    &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
    &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot; : &quot;127.0.0.1&quot;,&#xd;
    &quot;device_id&quot; : &quot;&quot;,&#xd;
    &quot;end_channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot; : &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot; : &quot;CREATE&quot;,&#xd;
    &quot;locale&quot; : &quot;en-in&quot;,&#xd;
    &quot;location&quot; : &quot;44.968046;-94.420307&quot;,&#xd;
    &quot;operation_mode&quot; : &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot; : &quot;REAL&quot;,&#xd;
    &quot;stan&quot; : &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
    &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
    &quot;tenant_code&quot; : &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot; : &quot;1700204256516&quot;,&#xd;
    &quot;user_handle_type&quot; : &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot; : &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_upload_doc_code_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_2nd_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
      &quot;document_id&quot; : &quot;${borrower_doc_code2}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_BORROWER&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_BORROWER0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;244208&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
  &quot;headers&quot; : {&#xd;
    &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
    &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot; : &quot;127.0.0.1&quot;,&#xd;
    &quot;device_id&quot; : &quot;&quot;,&#xd;
    &quot;end_channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot; : &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot; : &quot;CREATE&quot;,&#xd;
    &quot;locale&quot; : &quot;en-in&quot;,&#xd;
    &quot;location&quot; : &quot;44.968046;-94.420307&quot;,&#xd;
    &quot;operation_mode&quot; : &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot; : &quot;REAL&quot;,&#xd;
    &quot;stan&quot; : &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
    &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
    &quot;tenant_code&quot; : &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot; : &quot;1700204256516&quot;,&#xd;
    &quot;user_handle_type&quot; : &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot; : &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_upload_doc_code_2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_3rd_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
      &quot;document_id&quot; : &quot;${borrower_doc_code3}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_BORROWER&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_BORROWER0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;244208&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
  &quot;headers&quot; : {&#xd;
    &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
    &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot; : &quot;127.0.0.1&quot;,&#xd;
    &quot;device_id&quot; : &quot;&quot;,&#xd;
    &quot;end_channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot; : &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot; : &quot;CREATE&quot;,&#xd;
    &quot;locale&quot; : &quot;en-in&quot;,&#xd;
    &quot;location&quot; : &quot;44.968046;-94.420307&quot;,&#xd;
    &quot;operation_mode&quot; : &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot; : &quot;REAL&quot;,&#xd;
    &quot;stan&quot; : &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
    &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
    &quot;tenant_code&quot; : &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot; : &quot;1700204256516&quot;,&#xd;
    &quot;user_handle_type&quot; : &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot; : &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">borrower_upload_doc_code_3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="savePhysicalSignDocument_1stCall_PhysicalSignPending" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot; : {&#xd;
    &quot;document_details&quot; : [ {&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;document_category&quot; : &quot;INDIVIDUAL_BORROWER&quot;,&#xd;
      &quot;document_code&quot; : &quot;${borrower_upload_doc_code_1}&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;product_document_id&quot; : &quot;${borrower_product_doc_id_1}&quot;&#xd;
    }, {&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;document_category&quot; : &quot;INDIVIDUAL_BORROWER&quot;,&#xd;
      &quot;document_code&quot; : &quot;${borrower_upload_doc_code_2}&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;product_document_id&quot; : &quot;${borrower_product_doc_id_2}&quot;&#xd;
    } ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/savePhysicalSignDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="savePhysicalSignDocument_1stCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot; : {&#xd;
    &quot;document_details&quot; : [ {&#xd;
      &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
      &quot;document_category&quot; : &quot;INDIVIDUAL_BORROWER&quot;,&#xd;
      &quot;document_code&quot; : &quot;${borrower_upload_doc_code_1}&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;product_document_id&quot; : &quot;${borrower_product_doc_id_1}&quot;&#xd;
    }]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/savePhysicalSignDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_2ndCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
   &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_3rdCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getPhysicalSignDocumentDetails_2nd_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getPhysicalSignDocumentDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_4th_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
      &quot;document_id&quot; : &quot;${co_borrower_doc_code1}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_COBORROWER&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_COBORROWER0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;271776&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  },&#xd;
  &quot;headers&quot; : {&#xd;
    &quot;actor_type&quot; : &quot;CUSTOMER&quot;,&#xd;
    &quot;channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;client_ip&quot; : &quot;127.0.0.1&quot;,&#xd;
    &quot;device_id&quot; : &quot;&quot;,&#xd;
    &quot;end_channel_code&quot; : &quot;NOVOPAY&quot;,&#xd;
    &quot;function_code&quot; : &quot;DEFAULT&quot;,&#xd;
    &quot;function_sub_code&quot; : &quot;CREATE&quot;,&#xd;
    &quot;locale&quot; : &quot;en-in&quot;,&#xd;
    &quot;location&quot; : &quot;44.968046;-94.420307&quot;,&#xd;
    &quot;operation_mode&quot; : &quot;SELF&quot;,&#xd;
    &quot;run_mode&quot; : &quot;REAL&quot;,&#xd;
    &quot;session_token&quot; : &quot;f35f96c2-f070-4da1-8a67-1795da3b6a28&quot;,&#xd;
    &quot;stan&quot; : &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
    &quot;tenant_code&quot; : &quot;mfi&quot;,&#xd;
    &quot;transmission_datetime&quot; : &quot;1700204256516&quot;,&#xd;
    &quot;user_handle_type&quot; : &quot;MSISDN&quot;,&#xd;
    &quot;user_handle_value&quot; : &quot;9816923672&quot;,&#xd;
    &quot;user_id&quot; : &quot;${user_id}&quot;&#xd;
  }&#xd;
&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">co_borrower_upload_doc_code_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="savePhysicalSignDocument_2ndCall_PhysicalSignPending" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot; : {&#xd;
    &quot;document_details&quot; : [ {&#xd;
      &quot;borrower_id&quot; : &quot;${co_borrower_id}&quot;,&#xd;
      &quot;document_category&quot; : &quot;INDIVIDUAL_COBORROWER&quot;,&#xd;
      &quot;document_code&quot; : &quot;${co_borrower_upload_doc_code_1}&quot;,&#xd;
      &quot;file_number&quot; : &quot;1&quot;,&#xd;
      &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
      &quot;product_document_id&quot; : &quot;${co_borrower_product_doc_id_1}&quot;&#xd;
    } ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/savePhysicalSignDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Co-borrower_savePhysicalSignDocument" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
   &quot;request&quot; : {&#xd;
    &quot;document_details&quot; : [ {&#xd;
&#xd;
    } ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/savePhysicalSignDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_4thCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_5thCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getPhysicalSignDocumentDetails_3rd_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getPhysicalSignDocumentDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_5th_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
       &quot;document_id&quot; : &quot;${com_doc_code1}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_COMBINED0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;272746&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_upload_doc_code_1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_6th_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
       &quot;document_id&quot; : &quot;${com_doc_code2}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_COMBINED0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;272746&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode6</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_upload_doc_code_2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_7thCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
       &quot;document_id&quot; : &quot;${com_doc_code3}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_COMBINED0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;272746&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode7</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_upload_doc_code_3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_8thCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
       &quot;document_id&quot; : &quot;${com_doc_code4}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_COMBINED0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;272746&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode8</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_upload_doc_code_4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="uploadDocument_9thCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;ADMIN&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot; : {&#xd;
    &quot;document_code&quot; : &quot;&quot;,&#xd;
    &quot;file_list&quot; : [ {&#xd;
	  &quot;content&quot; : &quot;${content}&quot;,&#xd;
       &quot;document_id&quot; : &quot;${com_doc_code5}&quot;,&#xd;
      &quot;document_type&quot; : &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
      &quot;file_original_name&quot; : &quot;INDIVIDUAL_COMBINED0_17112023.jpg&quot;,&#xd;
      &quot;file_size&quot; : &quot;272746&quot;,&#xd;
      &quot;file_type&quot; : &quot;&quot;,&#xd;
      &quot;is_aadhaar&quot; : false&#xd;
    } ],&#xd;
    &quot;name&quot; : &quot;loanDocs&quot;,&#xd;
    &quot;remarks&quot; : &quot;&quot;,&#xd;
    &quot;version&quot; : &quot;1&quot;&#xd;
  }&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/uploadDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mobConsentDoc</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(mobileConsentDoc,${mobConsentDoc})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Document Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">uploadDocCode9</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Uploaded doc Code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">combined_upload_doc_code_5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="savePhysicalSignDocument_3rdCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
        &quot;document_details&quot;: [&#xd;
            {&#xd;
                &quot;document_category&quot;: &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
                &quot;document_code&quot;: &quot;${combined_upload_doc_code_1}&quot;,&#xd;
                &quot;file_number&quot;: &quot;1&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;product_document_id&quot;: &quot;${combined_product_doc_id_1}&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;document_category&quot;: &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
                &quot;document_code&quot;: &quot;${combined_upload_doc_code_2}&quot;,&#xd;
                &quot;file_number&quot;: &quot;1&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;product_document_id&quot;: &quot;${combined_product_doc_id_2}&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;document_category&quot;: &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
                &quot;document_code&quot;: &quot;${combined_upload_doc_code_3}&quot;,&#xd;
                &quot;file_number&quot;: &quot;1&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;product_document_id&quot;: &quot;${combined_product_doc_id_3}&quot;&#xd;
            },&#xd;
             {&#xd;
                &quot;document_category&quot;: &quot;INDIVIDUAL_COMBINED&quot;,&#xd;
                &quot;document_code&quot;: &quot;${combined_upload_doc_code_4}&quot;,&#xd;
                &quot;file_number&quot;: &quot;1&quot;,&#xd;
                &quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;,&#xd;
                &quot;product_document_id&quot;: &quot;${combined_product_doc_id_4}&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/savePhysicalSignDocument</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_6thCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getEsignDetails_7thCall_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	&quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getEsignDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getPhysicalSignDocumentDetails_4th_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getPhysicalSignDocumentDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getPhysicalSignDocumentDetails_5th_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getPhysicalSignDocumentDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getPhysicalSignDocumentDetails_6th_Call_PhysicalSignPending" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;location&quot;: &quot;42,23&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
     &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
        &#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getPhysicalSignDocumentDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PhysicalSIgnProcess_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submitPhysicalSignTask_${__threadGroupName}_Physical_sign_Web" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;ADMIN_APP&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;Novopay&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;INDIVIDUAL&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/submitPhysicalSignTask</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor generation random voter and passport no" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Random;

// Function to generate a valid passport number (for demonstration purposes)
String generateValidPassport() {
    // Replace this with a valid passport format
    // Example format: A12345678
    // A - Uppercase letter, 1-9 - Digits
    String validFormat = &quot;A12345678&quot;;

    StringBuilder passportNumber = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (c == &apos;A&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;A&apos;));
        } else if (c &gt;= &apos;1&apos; &amp;&amp; c &lt;= &apos;9&apos;) {
            passportNumber.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return passportNumber.toString();
}

// Generate a valid passport number
String validPassport = generateValidPassport();

vars.put(&quot;rand_passport_no&quot;,validPassport);

// Print or use the generated valid passport number
log.info(&quot;Valid Passport ID: &quot; + validPassport);

// Function to generate a valid voter ID (for demonstration purposes)
String generateValidVoterID() {
    // Replace this with a valid voter ID format
    // Example format: ABC1234567
    // ABC - Uppercase letters, 1234567 - Digits
    String validFormat = &quot;ABC1234567&quot;;

    StringBuilder voterID = new StringBuilder();
    Random random = new Random();

    for (char c : validFormat.toCharArray()) {
        if (Character.isLetter(c)) {
            voterID.append((char) (random.nextInt(26) + &apos;A&apos;));
        } else if (Character.isDigit(c)) {
            voterID.append((char) (random.nextInt(10) + &apos;0&apos;));
        }
    }

    return voterID.toString();
}

// Generate a valid voter ID
String validVoterID = generateValidVoterID();

// Print or use the generated valid voter ID
log.info(&quot;Valid Voter ID: &quot; + validVoterID);
vars.put(&quot;rand_voter_id&quot;,validVoterID);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query"> ${__setProperty(borrowerId,${borrower_id})}
 ${__setProperty(loanAppId,${loan_app_id})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>false</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moveProcess_1stCall_PhysicalSignPending" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;request&quot; : {&#xd;
    &quot;instance_id&quot; : &quot;${instance_id}&quot;,&#xd;
    &quot;is_rejected&quot; : &quot;false&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;,&#xd;
    &quot;sendForReApproval&quot; : &quot;false&quot;,&#xd;
    &quot;stage_name&quot; : &quot;MANUAL_SIGN&quot;,&#xd;
    &quot;task_id&quot; : &quot;${physical_task_id}&quot;&#xd;
  },&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
        &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
        &quot;device_id&quot;: &quot;&quot;,&#xd;
        &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
        &quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
        &quot;function_sub_code&quot;: &quot;UPDATE&quot;,&#xd;
        &quot;locale&quot;: &quot;en-in&quot;,&#xd;
        &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
        &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
        &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
        &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
        &quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
        &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
        &quot;transmission_datetime&quot;: &quot;1694178441740&quot;,&#xd;
        &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
        &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
        &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${BPMNPATH}/moveProcess</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Process ID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">process_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.process_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_ESign" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot; == &quot;IN_PROGRESS&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Service Status Delay" enabled="true">
                <stringProp name="ConstantTimer.delay">${servicestatus_delay}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${moveprocess_delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${stage_name}&quot; == &quot;MANUAL_SIGN&quot;,)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProcessInstanceId _2ndCall_${__threadGroupName}_Eligibility_Summary" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;loan_app_id&quot;: &quot;${loan_app_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">${PORT}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${npPATH}/getProcessInstanceId</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16StageStatusCheck_${__threadGroupName}_QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
	&quot;request&quot; : {&#xd;
       &quot;borrower_id&quot; : &quot;${borrower_id}&quot;,&#xd;
    &quot;loan_app_id&quot; : &quot;${loan_app_id}&quot;&#xd;
                 },&#xd;
     &quot;headers&quot;: {&#xd;
                &quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
                &quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;client_ip&quot;: &quot;127.0.0.1&quot;,&#xd;
                &quot;device_id&quot;: &quot;&quot;,&#xd;
                &quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
                &quot;function_code&quot;: &quot;CONDUCT_PD&quot;,&#xd;
                &quot;function_sub_code&quot;: &quot;DEFAULT&quot;,&#xd;
                &quot;locale&quot;: &quot;en-in&quot;,&#xd;
                &quot;location&quot;: &quot;44.968046;-94.420307&quot;,&#xd;
                &quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
                &quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
                &quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
                &quot;stan&quot;: &quot;${__RandomString(42,1234567890,)}&quot;,&#xd;
                &quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
                &quot;transmission_datetime&quot;: &quot;1694178391100&quot;,&#xd;
                &quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
                &quot;user_handle_value&quot;: &quot;9816923672&quot;,&#xd;
                &quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
        }&#xd;
&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/getLoanAppStepsStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${ttime}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constant_delay}</stringProp>
            <stringProp name="RandomTimer.range">${random_delay}</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkBpmnProcessStatus _1stCall_${__threadGroupName}_QDE" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;headers&quot;: {&#xd;
		&quot;tenant_code&quot;: &quot;mfi&quot;,&#xd;
		&quot;client_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;end_channel_code&quot;: &quot;NOVOPAY&quot;,&#xd;
		&quot;stan&quot;: &quot;${timestamp}${timestamp}${__RandomString(42,1234567890,)} &quot;,&#xd;
		&quot;session_token&quot;: &quot;${session_token}&quot;,&#xd;
		&quot;client_ip&quot;: &quot;180.151.197.2&quot;,&#xd;
		&quot;locale&quot;: &quot;en-in&quot;,&#xd;
		&quot;transmission_datetime&quot;: &quot;1599458924632&quot;,&#xd;
		&quot;operation_mode&quot;: &quot;SELF&quot;,&#xd;
		&quot;run_mode&quot;: &quot;REAL&quot;,&#xd;
		&quot;actor_type&quot;: &quot;CUSTOMER&quot;,&#xd;
		&quot;user_handle_type&quot;: &quot;MSISDN&quot;,&#xd;
		&quot;user_handle_value&quot;: &quot;admin&quot;,&#xd;
		&quot;location&quot;: &quot;42,23&quot;,&#xd;
		&quot;function_code&quot;: &quot;DEFAULT&quot;,&#xd;
		&quot;function_sub_code&quot;: &quot;CREATE&quot;,&#xd;
		&quot;user_id&quot;: &quot;${user_id}&quot;&#xd;
	},&#xd;
	&quot;request&quot;: {&#xd;
		&quot;process_id&quot; : &quot;${process_id}&quot;&#xd;
		}   &#xd;
		&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">${PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${npPATH}/checkBpmnProcessStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">instance_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.instance_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Stage Name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">stage_name</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="task_id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">task_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.task_id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="status" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.moveprocess_status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
